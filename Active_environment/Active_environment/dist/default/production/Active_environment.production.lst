

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Oct 04 15:56:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=2
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    54                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    55                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    56                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    57  0000                     
    58                           ; Version 2.20
    59                           ; Generated 12/02/2020 GMT
    60                           ; 
    61                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    62                           ; All rights reserved.
    63                           ; 
    64                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    65                           ; 
    66                           ; Redistribution and use in source and binary forms, with or without modification, are
    67                           ; permitted provided that the following conditions are met:
    68                           ; 
    69                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    70                           ;        conditions and the following disclaimer.
    71                           ; 
    72                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    73                           ;        of conditions and the following disclaimer in the documentation and/or other
    74                           ;        materials provided with the distribution.
    75                           ; 
    76                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    77                           ;        software without specific prior written permission.
    78                           ; 
    79                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    80                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    81                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    82                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    83                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    84                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    85                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    86                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    87                           ; 
    88                           ; 
    89                           ; Code-generator required, PIC18F4550 Definitions
    90                           ; 
    91                           ; SFR Addresses
    92  0000                     
    93                           	psect	idataBANK0
    94  002056                     __pidataBANK0:
    95                           	callstack 0
    96                           
    97                           ;initializer for iniciar_emoticones@F3577
    98  002056  00                 	db	0
    99  002057  0A                 	db	10
   100  002058  0A                 	db	10
   101  002059  00                 	db	0
   102  00205A  1F                 	db	31
   103  00205B  0E                 	db	14
   104  00205C  04                 	db	4
   105  00205D  00                 	db	0
   106                           
   107                           ;initializer for iniciar_emoticones@F3575
   108  00205E  0A                 	db	10
   109  00205F  0A                 	db	10
   110  002060  0A                 	db	10
   111  002061  1F                 	db	31
   112  002062  11                 	db	17
   113  002063  0E                 	db	14
   114  002064  04                 	db	4
   115  002065  04                 	db	4
   116                           
   117                           ;initializer for iniciar_emoticones@F3573
   118  002066  00                 	db	0
   119  002067  00                 	db	0
   120  002068  04                 	db	4
   121  002069  02                 	db	2
   122  00206A  1F                 	db	31
   123  00206B  02                 	db	2
   124  00206C  04                 	db	4
   125  00206D  00                 	db	0
   126                           
   127                           ;initializer for iniciar_emoticones@F3571
   128  00206E  04                 	db	4
   129  00206F  15                 	db	21
   130  002070  0E                 	db	14
   131  002071  1F                 	db	31
   132  002072  0E                 	db	14
   133  002073  15                 	db	21
   134  002074  04                 	db	4
   135  002075  00                 	db	0
   136                           
   137                           ;initializer for _todo_bien
   138  002076  00                 	db	0
   139  002077  0A                 	db	10
   140  002078  0A                 	db	10
   141  002079  00                 	db	0
   142  00207A  1F                 	db	31
   143  00207B  0E                 	db	14
   144  00207C  04                 	db	4
   145  00207D  00                 	db	0
   146                           
   147                           ;initializer for _luz
   148  00207E  0A                 	db	10
   149  00207F  0A                 	db	10
   150  002080  0A                 	db	10
   151  002081  1F                 	db	31
   152  002082  11                 	db	17
   153  002083  0E                 	db	14
   154  002084  04                 	db	4
   155  002085  04                 	db	4
   156                           
   157                           ;initializer for _distancia
   158  002086  00                 	db	0
   159  002087  00                 	db	0
   160  002088  04                 	db	4
   161  002089  02                 	db	2
   162  00208A  1F                 	db	31
   163  00208B  02                 	db	2
   164  00208C  04                 	db	4
   165  00208D  00                 	db	0
   166                           
   167                           ;initializer for _temperatura
   168  00208E  04                 	db	4
   169  00208F  15                 	db	21
   170  002090  0E                 	db	14
   171  002091  1F                 	db	31
   172  002092  0E                 	db	14
   173  002093  15                 	db	21
   174  002094  04                 	db	4
   175  002095  00                 	db	0
   176  0000                     _RCREG	set	4014
   177  0000                     _RCSTAbits	set	4011
   178  0000                     _TXREG	set	4013
   179  0000                     _RCSTA	set	4011
   180  0000                     _TXSTA	set	4012
   181  0000                     _SPBRG	set	4015
   182  0000                     _TRISAbits	set	3986
   183  0000                     _PORTCbits	set	3970
   184  0000                     _TRISCbits	set	3988
   185  0000                     _LATCbits	set	3979
   186  0000                     _LATD	set	3980
   187  0000                     _TRISD	set	3989
   188  0000                     _ADRESL	set	4035
   189  0000                     _ADCON1bits	set	4033
   190  0000                     _ADRESH	set	4036
   191  0000                     _ADCON0bits	set	4034
   192  0000                     _ADCON2bits	set	4032
   193  0000                     _OSCCON	set	4051
   194  0000                     _OSCCONbits	set	4051
   195  0000                     _CREN	set	32092
   196  0000                     _RCIF	set	31989
   197  0000                     _TXIF	set	31988
   198  0000                     _TRISC7	set	31911
   199  0000                     _TRISC6	set	31910
   200  0000                     _LATB3	set	31827
   201  0000                     _LATB4	set	31828
   202  0000                     _LATB5	set	31829
   203  0000                     _TRISB4	set	31900
   204  0000                     _TRISB3	set	31899
   205  0000                     _TRISB5	set	31901
   206  0000                     _TRISB6	set	31902
   207  0000                     _LATD1	set	31841
   208  0000                     _LATD0	set	31840
   209  0000                     _RBPU	set	32655
   210                           
   211                           	psect	smallconst
   212  000800                     __psmallconst:
   213                           	callstack 0
   214  000800  00                 	db	0
   215  000801                     STR_1:
   216  000801  44                 	db	68	;'D'
   217  000802  3A                 	db	58	;':'
   218  000803  54                 	db	84	;'T'
   219  000804  3A                 	db	58	;':'
   220  000805  4C                 	db	76	;'L'
   221  000806  3A                 	db	58	;':'
   222  000807  00                 	db	0
   223  000808                     STR_2:
   224  000808  25                 	db	37
   225  000809  64                 	db	100	;'d'
   226  00080A  63                 	db	99	;'c'
   227  00080B  6D                 	db	109	;'m'
   228  00080C  00                 	db	0
   229  00080D                     STR_3:
   230  00080D  25                 	db	37
   231  00080E  64                 	db	100	;'d'
   232  00080F  47                 	db	71	;'G'
   233  000810  00                 	db	0
   234  000811                     STR_4:
   235  000811  25                 	db	37
   236  000812  64                 	db	100	;'d'
   237  000813  50                 	db	80	;'P'
   238  000814  00                 	db	0
   239  000815  00                 	db	0	; dummy byte at the end
   240  0000                     
   241                           ; #config settings
   242                           
   243                           	psect	cinit
   244  001FD2                     __pcinit:
   245                           	callstack 0
   246  001FD2                     start_initialization:
   247                           	callstack 0
   248  001FD2                     __initialization:
   249                           	callstack 0
   250                           
   251                           ; Initialize objects allocated to BANK0 (64 bytes)
   252                           ; load TBLPTR registers with __pidataBANK0
   253  001FD2  0E56               	movlw	low __pidataBANK0
   254  001FD4  6EF6               	movwf	tblptrl,c
   255  001FD6  0E20               	movlw	high __pidataBANK0
   256  001FD8  6EF7               	movwf	tblptrh,c
   257  001FDA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   258  001FDC  6EF8               	movwf	tblptru,c
   259  001FDE  EE00  F0A4         	lfsr	0,__pdataBANK0
   260  001FE2  EE10 F040          	lfsr	1,64
   261  001FE6                     copy_data0:
   262  001FE6  0009               	tblrd		*+
   263  001FE8  CFF5 FFEE          	movff	tablat,postinc0
   264  001FEC  50E5               	movf	postdec1,w,c
   265  001FEE  50E1               	movf	fsr1l,w,c
   266  001FF0  E1FA               	bnz	copy_data0
   267                           
   268                           ; Clear objects allocated to BANK1 (80 bytes)
   269  001FF2  EE01  F000         	lfsr	0,__pbssBANK1
   270  001FF6  0E50               	movlw	80
   271  001FF8                     clear_0:
   272  001FF8  6AEE               	clrf	postinc0,c
   273  001FFA  06E8               	decf	wreg,f,c
   274  001FFC  E1FD               	bnz	clear_0
   275                           
   276                           ; Clear objects allocated to BANK0 (18 bytes)
   277  001FFE  EE00  F0E4         	lfsr	0,__pbssBANK0
   278  002002  0E12               	movlw	18
   279  002004                     clear_1:
   280  002004  6AEE               	clrf	postinc0,c
   281  002006  06E8               	decf	wreg,f,c
   282  002008  E1FD               	bnz	clear_1
   283  00200A                     end_of_initialization:
   284                           	callstack 0
   285  00200A                     __end_of__initialization:
   286                           	callstack 0
   287  00200A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   288  00200C  6EF8               	movwf	tblptru,c
   289  00200E  0100               	movlb	0
   290  002010  EF6D  F00D         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	bssBANK0
   293  0000E4                     __pbssBANK0:
   294                           	callstack 0
   295  0000E4                     _nout:
   296                           	callstack 0
   297  0000E4                     	ds	2
   298  0000E6                     _width:
   299                           	callstack 0
   300  0000E6                     	ds	2
   301  0000E8                     _prec:
   302                           	callstack 0
   303  0000E8                     	ds	2
   304  0000EA                     _flags:
   305                           	callstack 0
   306  0000EA                     	ds	2
   307  0000EC                     _val_luminosidad:
   308                           	callstack 0
   309  0000EC                     	ds	2
   310  0000EE                     _val_intensidad:
   311                           	callstack 0
   312  0000EE                     	ds	2
   313  0000F0                     _value_adc:
   314                           	callstack 0
   315  0000F0                     	ds	2
   316  0000F2                     _val_temp:
   317                           	callstack 0
   318  0000F2                     	ds	2
   319  0000F4                     _val_distancia:
   320                           	callstack 0
   321  0000F4                     	ds	2
   322                           
   323                           	psect	dataBANK0
   324  0000A4                     __pdataBANK0:
   325                           	callstack 0
   326  0000A4                     iniciar_emoticones@F3577:
   327                           	callstack 0
   328  0000A4                     	ds	8
   329  0000AC                     iniciar_emoticones@F3575:
   330                           	callstack 0
   331  0000AC                     	ds	8
   332  0000B4                     iniciar_emoticones@F3573:
   333                           	callstack 0
   334  0000B4                     	ds	8
   335  0000BC                     iniciar_emoticones@F3571:
   336                           	callstack 0
   337  0000BC                     	ds	8
   338  0000C4                     _todo_bien:
   339                           	callstack 0
   340  0000C4                     	ds	8
   341  0000CC                     _luz:
   342                           	callstack 0
   343  0000CC                     	ds	8
   344  0000D4                     _distancia:
   345                           	callstack 0
   346  0000D4                     	ds	8
   347  0000DC                     _temperatura:
   348                           	callstack 0
   349  0000DC                     	ds	8
   350                           
   351                           	psect	bssBANK1
   352  000100                     __pbssBANK1:
   353                           	callstack 0
   354  000100                     	ds	16
   355  000110                     	ds	16
   356  000120                     	ds	16
   357  000130                     _dbuf:
   358                           	callstack 0
   359  000130                     	ds	32
   360                           
   361                           	psect	cstackBANK0
   362  000060                     __pcstackBANK0:
   363                           	callstack 0
   364  000060                     sprintf@ap:
   365                           	callstack 0
   366                           
   367                           ; 2 bytes @ 0x0
   368  000060                     	ds	2
   369  000062                     sprintf@f:
   370                           	callstack 0
   371                           
   372                           ; 6 bytes @ 0x2
   373  000062                     	ds	6
   374  000068                     imprimir@dist:
   375                           	callstack 0
   376                           
   377                           ; 2 bytes @ 0x8
   378  000068                     	ds	2
   379  00006A                     imprimir@temp:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0xA
   383  00006A                     	ds	2
   384  00006C                     imprimir@luz:
   385                           	callstack 0
   386                           
   387                           ; 2 bytes @ 0xC
   388  00006C                     	ds	2
   389  00006E                     imprimir@aux_dist:
   390                           	callstack 0
   391                           
   392                           ; 16 bytes @ 0xE
   393  00006E                     	ds	16
   394  00007E                     imprimir@aux_temp:
   395                           	callstack 0
   396                           
   397                           ; 16 bytes @ 0x1E
   398  00007E                     	ds	16
   399  00008E                     imprimir@aux_luz:
   400                           	callstack 0
   401                           
   402                           ; 16 bytes @ 0x2E
   403  00008E                     	ds	16
   404  00009E                     main@s_dist:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0x3E
   408  00009E                     	ds	2
   409  0000A0                     main@s_temp:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x40
   413  0000A0                     	ds	2
   414  0000A2                     main@s_luz:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x42
   418  0000A2                     	ds	2
   419                           
   420                           	psect	cstackCOMRAM
   421  000001                     __pcstackCOMRAM:
   422                           	callstack 0
   423  000001                     ??_LCD_Command:
   424  000001                     ??_LCD_Char:
   425  000001                     ?_obtener_distancia:
   426                           	callstack 0
   427  000001                     ?_strlen:
   428                           	callstack 0
   429  000001                     ?_adc_read10Bits:
   430                           	callstack 0
   431  000001                     ?___wmul:
   432                           	callstack 0
   433  000001                     ?___xxtofl:
   434                           	callstack 0
   435  000001                     ?___aodiv:
   436                           	callstack 0
   437  000001                     ?___aomod:
   438                           	callstack 0
   439  000001                     adc_config@canal:
   440                           	callstack 0
   441  000001                     ___wmul@multiplier:
   442                           	callstack 0
   443  000001                     fputc@c:
   444                           	callstack 0
   445  000001                     strlen@s:
   446                           	callstack 0
   447  000001                     ___xxtofl@val:
   448                           	callstack 0
   449  000001                     ___aodiv@dividend:
   450                           	callstack 0
   451  000001                     ___aomod@dividend:
   452                           	callstack 0
   453                           
   454                           ; 8 bytes @ 0x0
   455  000001                     	ds	1
   456  000002                     LCD_Command@cmd:
   457                           	callstack 0
   458  000002                     LCD_Char@dat:
   459                           	callstack 0
   460                           
   461                           ; 1 bytes @ 0x1
   462  000002                     	ds	1
   463  000003                     ??_inicializar_lcd:
   464  000003                     ??_adc_read10Bits:
   465  000003                     mostrar_emoticon@i:
   466                           	callstack 0
   467  000003                     adc_init10Bits@canal:
   468                           	callstack 0
   469  000003                     LCD_String@msg:
   470                           	callstack 0
   471  000003                     LCD_Custom_Char@msg:
   472                           	callstack 0
   473  000003                     obtener_distancia@cm:
   474                           	callstack 0
   475  000003                     ___wmul@multiplicand:
   476                           	callstack 0
   477  000003                     fputc@fp:
   478                           	callstack 0
   479  000003                     strlen@a:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x2
   483  000003                     	ds	1
   484  000004                     ?_validar:
   485                           	callstack 0
   486  000004                     validar@temp:
   487                           	callstack 0
   488                           
   489                           ; 2 bytes @ 0x3
   490  000004                     	ds	1
   491  000005                     ??_fputc:
   492  000005                     ??___xxtofl:
   493  000005                     ?_sensor_distancia:
   494                           	callstack 0
   495  000005                     LCD_String_xy@pos:
   496                           	callstack 0
   497  000005                     LCD_Custom_Char@loc:
   498                           	callstack 0
   499  000005                     adc_read10Bits@value_adc:
   500                           	callstack 0
   501  000005                     ___wmul@product:
   502                           	callstack 0
   503                           
   504                           ; 2 bytes @ 0x4
   505  000005                     	ds	1
   506  000006                     LCD_Custom_Char@i:
   507                           	callstack 0
   508  000006                     LCD_String_xy@msg:
   509                           	callstack 0
   510  000006                     validar@distancia:
   511                           	callstack 0
   512                           
   513                           ; 2 bytes @ 0x5
   514  000006                     	ds	1
   515  000007                     ?___lwdiv:
   516                           	callstack 0
   517  000007                     ___lwdiv@dividend:
   518                           	callstack 0
   519  000007                     iniciar_emoticones@temperatura:
   520                           	callstack 0
   521                           
   522                           ; 8 bytes @ 0x6
   523  000007                     	ds	1
   524  000008                     LCD_String_xy@row:
   525                           	callstack 0
   526  000008                     validar@luz:
   527                           	callstack 0
   528                           
   529                           ; 2 bytes @ 0x7
   530  000008                     	ds	1
   531  000009                     LCD_String_xy@location:
   532                           	callstack 0
   533  000009                     ___xxtofl@sign:
   534                           	callstack 0
   535  000009                     ___lwdiv@divisor:
   536                           	callstack 0
   537  000009                     ___aodiv@divisor:
   538                           	callstack 0
   539  000009                     ___aomod@divisor:
   540                           	callstack 0
   541                           
   542                           ; 8 bytes @ 0x8
   543  000009                     	ds	1
   544  00000A                     ___xxtofl@exp:
   545                           	callstack 0
   546  00000A                     validar@contador:
   547                           	callstack 0
   548  00000A                     fputs@s:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x9
   552  00000A                     	ds	1
   553  00000B                     ___lwdiv@quotient:
   554                           	callstack 0
   555  00000B                     ___xxtofl@arg:
   556                           	callstack 0
   557                           
   558                           ; 4 bytes @ 0xA
   559  00000B                     	ds	1
   560  00000C                     encender_leds@valor:
   561                           	callstack 0
   562  00000C                     fputs@fp:
   563                           	callstack 0
   564                           
   565                           ; 2 bytes @ 0xB
   566  00000C                     	ds	1
   567  00000D                     ___lwdiv@counter:
   568                           	callstack 0
   569                           
   570                           ; 1 bytes @ 0xC
   571  00000D                     	ds	1
   572  00000E                     ?_sensor_luz:
   573                           	callstack 0
   574  00000E                     fputs@c:
   575                           	callstack 0
   576                           
   577                           ; 1 bytes @ 0xD
   578  00000E                     	ds	1
   579  00000F                     ?___flmul:
   580                           	callstack 0
   581  00000F                     fputs@i:
   582                           	callstack 0
   583  00000F                     ___flmul@b:
   584                           	callstack 0
   585  00000F                     iniciar_emoticones@distancia:
   586                           	callstack 0
   587                           
   588                           ; 8 bytes @ 0xE
   589  00000F                     	ds	1
   590  000010                     ??_sensor_luz:
   591                           
   592                           ; 1 bytes @ 0xF
   593  000010                     	ds	1
   594  000011                     ?_pad:
   595                           	callstack 0
   596  000011                     ___aodiv@counter:
   597                           	callstack 0
   598  000011                     ___aomod@counter:
   599                           	callstack 0
   600  000011                     pad@fp:
   601                           	callstack 0
   602                           
   603                           ; 2 bytes @ 0x10
   604  000011                     	ds	1
   605  000012                     ___aodiv@sign:
   606                           	callstack 0
   607  000012                     ___aomod@sign:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x11
   611  000012                     	ds	1
   612  000013                     ?_abs:
   613                           	callstack 0
   614  000013                     pad@buf:
   615                           	callstack 0
   616  000013                     abs@a:
   617                           	callstack 0
   618  000013                     ___flmul@a:
   619                           	callstack 0
   620  000013                     ___aodiv@quotient:
   621                           	callstack 0
   622                           
   623                           ; 8 bytes @ 0x12
   624  000013                     	ds	2
   625  000015                     ??_abs:
   626  000015                     pad@p:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x14
   630  000015                     	ds	2
   631  000017                     ??___flmul:
   632  000017                     ??_pad:
   633  000017                     iniciar_emoticones@luz:
   634                           	callstack 0
   635                           
   636                           ; 8 bytes @ 0x16
   637  000017                     	ds	1
   638  000018                     pad@i:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x17
   642  000018                     	ds	2
   643  00001A                     pad@w:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x19
   647  00001A                     	ds	1
   648  00001B                     ___flmul@sign:
   649                           	callstack 0
   650                           
   651                           ; 1 bytes @ 0x1A
   652  00001B                     	ds	1
   653  00001C                     ?_dtoa:
   654                           	callstack 0
   655  00001C                     dtoa@fp:
   656                           	callstack 0
   657  00001C                     ___flmul@grs:
   658                           	callstack 0
   659                           
   660                           ; 4 bytes @ 0x1B
   661  00001C                     	ds	2
   662  00001E                     dtoa@d:
   663                           	callstack 0
   664                           
   665                           ; 8 bytes @ 0x1D
   666  00001E                     	ds	1
   667  00001F                     iniciar_emoticones@todo_bien:
   668                           	callstack 0
   669                           
   670                           ; 8 bytes @ 0x1E
   671  00001F                     	ds	1
   672  000020                     ___flmul@aexp:
   673                           	callstack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  000020                     	ds	1
   677  000021                     ___flmul@bexp:
   678                           	callstack 0
   679                           
   680                           ; 1 bytes @ 0x20
   681  000021                     	ds	1
   682  000022                     ___flmul@prod:
   683                           	callstack 0
   684                           
   685                           ; 4 bytes @ 0x21
   686  000022                     	ds	4
   687  000026                     ??_dtoa:
   688  000026                     ___flmul@temp:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x25
   692  000026                     	ds	2
   693  000028                     ?___fltol:
   694                           	callstack 0
   695  000028                     ___fltol@f1:
   696                           	callstack 0
   697                           
   698                           ; 4 bytes @ 0x27
   699  000028                     	ds	4
   700  00002C                     ??___fltol:
   701                           
   702                           ; 1 bytes @ 0x2B
   703  00002C                     	ds	2
   704  00002E                     _dtoa$1237:
   705                           	callstack 0
   706                           
   707                           ; 2 bytes @ 0x2D
   708  00002E                     	ds	2
   709  000030                     ___fltol@sign1:
   710                           	callstack 0
   711  000030                     dtoa@p:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x2F
   715  000030                     	ds	1
   716  000031                     ___fltol@exp1:
   717                           	callstack 0
   718                           
   719                           ; 1 bytes @ 0x30
   720  000031                     	ds	1
   721  000032                     ?_sensor_temperatura:
   722                           	callstack 0
   723  000032                     dtoa@w:
   724                           	callstack 0
   725                           
   726                           ; 2 bytes @ 0x31
   727  000032                     	ds	2
   728  000034                     dtoa@s:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x33
   732  000034                     	ds	2
   733  000036                     dtoa@n:
   734                           	callstack 0
   735                           
   736                           ; 8 bytes @ 0x35
   737  000036                     	ds	8
   738  00003E                     dtoa@i:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x3D
   742  00003E                     	ds	2
   743  000040                     ?_vfpfcnvrt:
   744                           	callstack 0
   745  000040                     vfpfcnvrt@fp:
   746                           	callstack 0
   747                           
   748                           ; 2 bytes @ 0x3F
   749  000040                     	ds	2
   750  000042                     vfpfcnvrt@fmt:
   751                           	callstack 0
   752                           
   753                           ; 2 bytes @ 0x41
   754  000042                     	ds	2
   755  000044                     vfpfcnvrt@ap:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x43
   759  000044                     	ds	2
   760  000046                     ??_vfpfcnvrt:
   761                           
   762                           ; 1 bytes @ 0x45
   763  000046                     	ds	2
   764  000048                     vfpfcnvrt@ll:
   765                           	callstack 0
   766                           
   767                           ; 8 bytes @ 0x47
   768  000048                     	ds	8
   769  000050                     ?_vfprintf:
   770                           	callstack 0
   771  000050                     vfprintf@fp:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x4F
   775  000050                     	ds	2
   776  000052                     vfprintf@fmt:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x51
   780  000052                     	ds	2
   781  000054                     vfprintf@ap:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x53
   785  000054                     	ds	2
   786  000056                     vfprintf@cfmt:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x55
   790  000056                     	ds	2
   791  000058                     ?_sprintf:
   792                           	callstack 0
   793  000058                     sprintf@s:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x57
   797  000058                     	ds	2
   798  00005A                     sprintf@fmt:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x59
   802  00005A                     	ds	4
   803  00005E                     ??_imprimir:
   804  00005E                     
   805                           ; 1 bytes @ 0x5D
   806  00005E                     	ds	2
   807  000060                     
   808                           ; 1 bytes @ 0x5F
   809 ;;
   810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   811 ;;
   812 ;; *************** function _main *****************
   813 ;; Defined at:
   814 ;;		line 78 in file "Principal.c"
   815 ;; Parameters:    Size  Location     Type
   816 ;;		None
   817 ;; Auto vars:     Size  Location     Type
   818 ;;  s_luz           2   66[BANK0 ] int 
   819 ;;  s_temp          2   64[BANK0 ] int 
   820 ;;  s_dist          2   62[BANK0 ] int 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   830 ;;      Params:         0       0       0       0       0       0       0       0       0
   831 ;;      Locals:         0       6       0       0       0       0       0       0       0
   832 ;;      Temps:          0       0       0       0       0       0       0       0       0
   833 ;;      Totals:         0       6       0       0       0       0       0       0       0
   834 ;;Total ram usage:        6 bytes
   835 ;; Hardware stack levels required when called: 9
   836 ;; This function calls:
   837 ;;		_encender_leds
   838 ;;		_imprimir
   839 ;;		_inicializar_lcd
   840 ;;		_iniciar_emoticones
   841 ;;		_iniciar_pic
   842 ;;		_init_leds
   843 ;;		_sensor_distancia
   844 ;;		_sensor_luz
   845 ;;		_sensor_temperatura
   846 ;;		_validar
   847 ;; This function is called by:
   848 ;;		Startup code after reset
   849 ;; This function uses a non-reentrant model
   850 ;;
   851                           
   852                           	psect	text0
   853  001ADA                     __ptext0:
   854                           	callstack 0
   855  001ADA                     _main:
   856                           	callstack 22
   857  001ADA                     
   858                           ;Principal.c: 80:     iniciar_pic();
   859  001ADA  ECF4  F010         	call	_iniciar_pic	;wreg free
   860  001ADE                     
   861                           ;Principal.c: 81:     inicializar_lcd();
   862  001ADE  ECA6  F010         	call	_inicializar_lcd	;wreg free
   863  001AE2                     
   864                           ;Principal.c: 82:     init_leds();
   865  001AE2  EC0D  F011         	call	_init_leds	;wreg free
   866  001AE6                     
   867                           ;Principal.c: 83:     iniciar_emoticones();
   868  001AE6  EC2C  F00D         	call	_iniciar_emoticones	;wreg free
   869  001AEA                     l2779:
   870                           
   871                           ;Principal.c: 87:         s_dist = sensor_distancia();
   872  001AEA  ECE3  F00C         	call	_sensor_distancia	;wreg free
   873  001AEE  C005  F09E         	movff	?_sensor_distancia,main@s_dist
   874  001AF2  C006  F09F         	movff	?_sensor_distancia+1,main@s_dist+1
   875  001AF6                     
   876                           ;Principal.c: 88:         s_temp = sensor_temperatura();
   877  001AF6  EC2D  F00E         	call	_sensor_temperatura	;wreg free
   878  001AFA  C032  F0A0         	movff	?_sensor_temperatura,main@s_temp
   879  001AFE  C033  F0A1         	movff	?_sensor_temperatura+1,main@s_temp+1
   880  001B02                     
   881                           ;Principal.c: 89:         s_luz = sensor_luz();
   882  001B02  ECAD  F00D         	call	_sensor_luz	;wreg free
   883  001B06  C00E  F0A2         	movff	?_sensor_luz,main@s_luz
   884  001B0A  C00F  F0A3         	movff	?_sensor_luz+1,main@s_luz+1
   885  001B0E                     
   886                           ;Principal.c: 90:         encender_leds(validar(s_temp, s_dist, s_luz));
   887  001B0E  C0A0  F004         	movff	main@s_temp,validar@temp
   888  001B12  C0A1  F005         	movff	main@s_temp+1,validar@temp+1
   889  001B16  C09E  F006         	movff	main@s_dist,validar@distancia
   890  001B1A  C09F  F007         	movff	main@s_dist+1,validar@distancia+1
   891  001B1E  C0A2  F008         	movff	main@s_luz,validar@luz
   892  001B22  C0A3  F009         	movff	main@s_luz+1,validar@luz+1
   893  001B26  ECB1  F00B         	call	_validar	;wreg free
   894  001B2A  C004  F00C         	movff	?_validar,encender_leds@valor
   895  001B2E  C005  F00D         	movff	?_validar+1,encender_leds@valor+1
   896  001B32  ECED  F00D         	call	_encender_leds	;wreg free
   897  001B36                     
   898                           ;Principal.c: 91:         imprimir(s_dist, s_temp, s_luz);
   899  001B36  C09E  F068         	movff	main@s_dist,imprimir@dist
   900  001B3A  C09F  F069         	movff	main@s_dist+1,imprimir@dist+1
   901  001B3E  C0A0  F06A         	movff	main@s_temp,imprimir@temp
   902  001B42  C0A1  F06B         	movff	main@s_temp+1,imprimir@temp+1
   903  001B46  C0A2  F06C         	movff	main@s_luz,imprimir@luz
   904  001B4A  C0A3  F06D         	movff	main@s_luz+1,imprimir@luz+1
   905  001B4E  EC3F  F00B         	call	_imprimir	;wreg free
   906  001B52  EF75  F00D         	goto	l2779
   907  001B56  EF00  F000         	goto	start
   908  001B5A                     __end_of_main:
   909                           	callstack 0
   910                           
   911 ;; *************** function _validar *****************
   912 ;; Defined at:
   913 ;;		line 34 in file "Leds.c"
   914 ;; Parameters:    Size  Location     Type
   915 ;;  temp            2    3[COMRAM] int 
   916 ;;  distancia       2    5[COMRAM] int 
   917 ;;  luz             2    7[COMRAM] int 
   918 ;; Auto vars:     Size  Location     Type
   919 ;;  contador        2    9[COMRAM] int 
   920 ;; Return value:  Size  Location     Type
   921 ;;                  2    3[COMRAM] int 
   922 ;; Registers used:
   923 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   929 ;;      Params:         6       0       0       0       0       0       0       0       0
   930 ;;      Locals:         2       0       0       0       0       0       0       0       0
   931 ;;      Temps:          0       0       0       0       0       0       0       0       0
   932 ;;      Totals:         8       0       0       0       0       0       0       0       0
   933 ;;Total ram usage:        8 bytes
   934 ;; Hardware stack levels used: 1
   935 ;; Hardware stack levels required when called: 2
   936 ;; This function calls:
   937 ;;		_mostrar_emoticon
   938 ;; This function is called by:
   939 ;;		_main
   940 ;; This function uses a non-reentrant model
   941 ;;
   942                           
   943                           	psect	text1
   944  001762                     __ptext1:
   945                           	callstack 0
   946  001762                     _validar:
   947                           	callstack 28
   948  001762                     
   949                           ;Leds.c: 37:     int contador = 0;
   950  001762  0E00               	movlw	0
   951  001764  6E0B               	movwf	(validar@contador+1)^0,c
   952  001766  0E00               	movlw	0
   953  001768  6E0A               	movwf	validar@contador^0,c
   954  00176A                     
   955                           ;Leds.c: 40:     if (temp < 17 || temp > 30) {
   956  00176A  BE05               	btfsc	(validar@temp+1)^0,7,c
   957  00176C  EFC1  F00B         	goto	u2241
   958  001770  5005               	movf	(validar@temp+1)^0,w,c
   959  001772  E109               	bnz	u2240
   960  001774  0E11               	movlw	17
   961  001776  5C04               	subwf	validar@temp^0,w,c
   962  001778  A0D8               	btfss	status,0,c
   963  00177A  EFC1  F00B         	goto	u2241
   964  00177E  EFC3  F00B         	goto	u2240
   965  001782                     u2241:
   966  001782  EFD1  F00B         	goto	l2699
   967  001786                     u2240:
   968  001786  BE05               	btfsc	(validar@temp+1)^0,7,c
   969  001788  EFCF  F00B         	goto	u2251
   970  00178C  5005               	movf	(validar@temp+1)^0,w,c
   971  00178E  E109               	bnz	u2250
   972  001790  0E1F               	movlw	31
   973  001792  5C04               	subwf	validar@temp^0,w,c
   974  001794  A0D8               	btfss	status,0,c
   975  001796  EFCF  F00B         	goto	u2251
   976  00179A  EFD1  F00B         	goto	u2250
   977  00179E                     u2251:
   978  00179E  EFD6  F00B         	goto	l2703
   979  0017A2                     u2250:
   980  0017A2                     l2699:
   981                           
   982                           ;Leds.c: 41:         mostrar_emoticon(5);
   983  0017A2  0E05               	movlw	5
   984  0017A4  ECE9  F010         	call	_mostrar_emoticon
   985  0017A8                     
   986                           ;Leds.c: 42:         contador++;
   987  0017A8  4A0A               	infsnz	validar@contador^0,f,c
   988  0017AA  2A0B               	incf	(validar@contador+1)^0,f,c
   989  0017AC                     l2703:
   990                           
   991                           ;Leds.c: 44:     if (distancia < 40) {
   992  0017AC  BE07               	btfsc	(validar@distancia+1)^0,7,c
   993  0017AE  EFE4  F00B         	goto	u2260
   994  0017B2  5007               	movf	(validar@distancia+1)^0,w,c
   995  0017B4  E107               	bnz	u2261
   996  0017B6  0E28               	movlw	40
   997  0017B8  5C06               	subwf	validar@distancia^0,w,c
   998  0017BA  B0D8               	btfsc	status,0,c
   999  0017BC  EFE2  F00B         	goto	u2261
  1000  0017C0  EFE4  F00B         	goto	u2260
  1001  0017C4                     u2261:
  1002  0017C4  EFE9  F00B         	goto	l2709
  1003  0017C8                     u2260:
  1004  0017C8                     
  1005                           ;Leds.c: 45:         mostrar_emoticon(6);
  1006  0017C8  0E06               	movlw	6
  1007  0017CA  ECE9  F010         	call	_mostrar_emoticon
  1008  0017CE                     
  1009                           ;Leds.c: 46:         contador++;
  1010  0017CE  4A0A               	infsnz	validar@contador^0,f,c
  1011  0017D0  2A0B               	incf	(validar@contador+1)^0,f,c
  1012  0017D2                     l2709:
  1013                           
  1014                           ;Leds.c: 48:     if (luz > 60 || luz < 10) {
  1015  0017D2  BE09               	btfsc	(validar@luz+1)^0,7,c
  1016  0017D4  EFF7  F00B         	goto	u2270
  1017  0017D8  5009               	movf	(validar@luz+1)^0,w,c
  1018  0017DA  E107               	bnz	u2271
  1019  0017DC  0E3D               	movlw	61
  1020  0017DE  5C08               	subwf	validar@luz^0,w,c
  1021  0017E0  B0D8               	btfsc	status,0,c
  1022  0017E2  EFF5  F00B         	goto	u2271
  1023  0017E6  EFF7  F00B         	goto	u2270
  1024  0017EA                     u2271:
  1025  0017EA  EF05  F00C         	goto	l2713
  1026  0017EE                     u2270:
  1027  0017EE  BE09               	btfsc	(validar@luz+1)^0,7,c
  1028  0017F0  EF05  F00C         	goto	u2280
  1029  0017F4  5009               	movf	(validar@luz+1)^0,w,c
  1030  0017F6  E107               	bnz	u2281
  1031  0017F8  0E0A               	movlw	10
  1032  0017FA  5C08               	subwf	validar@luz^0,w,c
  1033  0017FC  B0D8               	btfsc	status,0,c
  1034  0017FE  EF03  F00C         	goto	u2281
  1035  001802  EF05  F00C         	goto	u2280
  1036  001806                     u2281:
  1037  001806  EF0A  F00C         	goto	l2717
  1038  00180A                     u2280:
  1039  00180A                     l2713:
  1040                           
  1041                           ;Leds.c: 49:         mostrar_emoticon(7);
  1042  00180A  0E07               	movlw	7
  1043  00180C  ECE9  F010         	call	_mostrar_emoticon
  1044  001810                     
  1045                           ;Leds.c: 50:         contador++;
  1046  001810  4A0A               	infsnz	validar@contador^0,f,c
  1047  001812  2A0B               	incf	(validar@contador+1)^0,f,c
  1048  001814                     l2717:
  1049                           
  1050                           ;Leds.c: 53:     if (contador == 0) {
  1051  001814  500A               	movf	validar@contador^0,w,c
  1052  001816  100B               	iorwf	(validar@contador+1)^0,w,c
  1053  001818  A4D8               	btfss	status,2,c
  1054  00181A  EF11  F00C         	goto	u2291
  1055  00181E  EF13  F00C         	goto	u2290
  1056  001822                     u2291:
  1057  001822  EF16  F00C         	goto	l2721
  1058  001826                     u2290:
  1059  001826                     
  1060                           ;Leds.c: 54:         mostrar_emoticon(4);
  1061  001826  0E04               	movlw	4
  1062  001828  ECE9  F010         	call	_mostrar_emoticon
  1063  00182C                     l2721:
  1064                           
  1065                           ;Leds.c: 58:     return contador;
  1066  00182C  C00A  F004         	movff	validar@contador,?_validar
  1067  001830  C00B  F005         	movff	validar@contador+1,?_validar+1
  1068  001834  0012               	return		;funcret
  1069  001836                     __end_of_validar:
  1070                           	callstack 0
  1071                           
  1072 ;; *************** function _mostrar_emoticon *****************
  1073 ;; Defined at:
  1074 ;;		line 83 in file "LCD.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;  i               1    wreg     unsigned char 
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;  i               1    2[COMRAM] unsigned char 
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1088 ;;      Params:         0       0       0       0       0       0       0       0       0
  1089 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1091 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1092 ;;Total ram usage:        1 bytes
  1093 ;; Hardware stack levels used: 1
  1094 ;; Hardware stack levels required when called: 1
  1095 ;; This function calls:
  1096 ;;		_LCD_Char
  1097 ;;		_LCD_Command
  1098 ;; This function is called by:
  1099 ;;		_validar
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           	psect	text2
  1104  0021D2                     __ptext2:
  1105                           	callstack 0
  1106  0021D2                     _mostrar_emoticon:
  1107                           	callstack 28
  1108                           
  1109                           ;incstack = 0
  1110                           ;mostrar_emoticon@i stored from wreg
  1111  0021D2  6E03               	movwf	mostrar_emoticon@i^0,c
  1112  0021D4                     
  1113                           ;LCD.c: 85:     LCD_Command(0x80 | (i * 2));
  1114  0021D4  5003               	movf	mostrar_emoticon@i^0,w,c
  1115  0021D6  0D02               	mullw	2
  1116  0021D8  50F3               	movf	243,w,c
  1117  0021DA  0980               	iorlw	128
  1118  0021DC  EC56  F00F         	call	_LCD_Command
  1119  0021E0                     
  1120                           ;LCD.c: 86:     LCD_Char(i);
  1121  0021E0  5003               	movf	mostrar_emoticon@i^0,w,c
  1122  0021E2  EC2E  F00F         	call	_LCD_Char
  1123  0021E6  0012               	return		;funcret
  1124  0021E8                     __end_of_mostrar_emoticon:
  1125                           	callstack 0
  1126                           
  1127 ;; *************** function _sensor_temperatura *****************
  1128 ;; Defined at:
  1129 ;;		line 37 in file "sensores.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  2   49[COMRAM] int 
  1136 ;; Registers used:
  1137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1143 ;;      Params:         2       0       0       0       0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1146 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1147 ;;Total ram usage:        2 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; Hardware stack levels required when called: 2
  1150 ;; This function calls:
  1151 ;;		___flmul
  1152 ;;		___fltol
  1153 ;;		___xxtofl
  1154 ;;		_adc_init10Bits
  1155 ;;		_adc_read10Bits
  1156 ;; This function is called by:
  1157 ;;		_main
  1158 ;; This function uses a non-reentrant model
  1159 ;;
  1160                           
  1161                           	psect	text3
  1162  001C5A                     __ptext3:
  1163                           	callstack 0
  1164  001C5A                     _sensor_temperatura:
  1165                           	callstack 28
  1166  001C5A                     
  1167                           ;sensores.c: 38:     TRISAbits.RA0 = 1;
  1168  001C5A  8092               	bsf	146,0,c	;volatile
  1169  001C5C                     
  1170                           ;sensores.c: 39:     adc_init10Bits(0);
  1171  001C5C  0E00               	movlw	0
  1172  001C5E  6E04               	movwf	(adc_init10Bits@canal+1)^0,c
  1173  001C60  0E00               	movlw	0
  1174  001C62  6E03               	movwf	adc_init10Bits@canal^0,c
  1175  001C64  ECFE  F010         	call	_adc_init10Bits	;wreg free
  1176  001C68                     
  1177                           ;sensores.c: 40:     value_adc = adc_read10Bits();
  1178  001C68  ECC0  F010         	call	_adc_read10Bits	;wreg free
  1179  001C6C  C001  F0F0         	movff	?_adc_read10Bits,_value_adc
  1180  001C70  C002  F0F1         	movff	?_adc_read10Bits+1,_value_adc+1
  1181  001C74                     
  1182                           ;sensores.c: 41:     val_temp = (int) value_adc * 0.4887;
  1183  001C74  0EE3               	movlw	227
  1184  001C76  6E13               	movwf	___flmul@a^0,c
  1185  001C78  0E36               	movlw	54
  1186  001C7A  6E14               	movwf	(___flmul@a+1)^0,c
  1187  001C7C  0EFA               	movlw	250
  1188  001C7E  6E15               	movwf	(___flmul@a+2)^0,c
  1189  001C80  0E3E               	movlw	62
  1190  001C82  6E16               	movwf	(___flmul@a+3)^0,c
  1191  001C84  C0F0  F001         	movff	_value_adc,___xxtofl@val
  1192  001C88  C0F1  F002         	movff	_value_adc+1,___xxtofl@val+1
  1193  001C8C  0E00               	movlw	0
  1194  001C8E  BE02               	btfsc	(___xxtofl@val+1)^0,7,c
  1195  001C90  0EFF               	movlw	-1
  1196  001C92  6E03               	movwf	(___xxtofl@val+2)^0,c
  1197  001C94  6E04               	movwf	(___xxtofl@val+3)^0,c
  1198  001C96  0E01               	movlw	1
  1199  001C98  EC92  F007         	call	___xxtofl
  1200  001C9C  C001  F00F         	movff	?___xxtofl,___flmul@b
  1201  001CA0  C002  F010         	movff	?___xxtofl+1,___flmul@b+1
  1202  001CA4  C003  F011         	movff	?___xxtofl+2,___flmul@b+2
  1203  001CA8  C004  F012         	movff	?___xxtofl+3,___flmul@b+3
  1204  001CAC  EC0B  F004         	call	___flmul	;wreg free
  1205  001CB0  C00F  F028         	movff	?___flmul,___fltol@f1
  1206  001CB4  C010  F029         	movff	?___flmul+1,___fltol@f1+1
  1207  001CB8  C011  F02A         	movff	?___flmul+2,___fltol@f1+2
  1208  001CBC  C012  F02B         	movff	?___flmul+3,___fltol@f1+3
  1209  001CC0  ECBC  F00A         	call	___fltol	;wreg free
  1210  001CC4  C028  F0F2         	movff	?___fltol,_val_temp
  1211  001CC8  C029  F0F3         	movff	?___fltol+1,_val_temp+1
  1212  001CCC                     
  1213                           ;sensores.c: 42:     return val_temp;
  1214  001CCC  C0F2  F032         	movff	_val_temp,?_sensor_temperatura
  1215  001CD0  C0F3  F033         	movff	_val_temp+1,?_sensor_temperatura+1
  1216  001CD4  0012               	return		;funcret
  1217  001CD6                     __end_of_sensor_temperatura:
  1218                           	callstack 0
  1219                           
  1220 ;; *************** function ___xxtofl *****************
  1221 ;; Defined at:
  1222 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;  sign            1    wreg     unsigned char 
  1225 ;;  val             4    0[COMRAM] long 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  sign            1    8[COMRAM] unsigned char 
  1228 ;;  arg             4   10[COMRAM] unsigned long 
  1229 ;;  exp             1    9[COMRAM] unsigned char 
  1230 ;; Return value:  Size  Location     Type
  1231 ;;                  4    0[COMRAM] unsigned char 
  1232 ;; Registers used:
  1233 ;;		wreg, status,2, status,0
  1234 ;; Tracked objects:
  1235 ;;		On entry : 0/0
  1236 ;;		On exit  : 0/0
  1237 ;;		Unchanged: 0/0
  1238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1239 ;;      Params:         4       0       0       0       0       0       0       0       0
  1240 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1241 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1242 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1243 ;;Total ram usage:       14 bytes
  1244 ;; Hardware stack levels used: 1
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_sensor_temperatura
  1249 ;;		_USART_Init
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text4
  1254  000F24                     __ptext4:
  1255                           	callstack 0
  1256  000F24                     ___xxtofl:
  1257                           	callstack 29
  1258                           
  1259                           ;incstack = 0
  1260                           ;___xxtofl@sign stored from wreg
  1261  000F24  6E09               	movwf	___xxtofl@sign^0,c
  1262  000F26  5009               	movf	___xxtofl@sign^0,w,c
  1263  000F28  B4D8               	btfsc	status,2,c
  1264  000F2A  EF99  F007         	goto	u2051
  1265  000F2E  EF9B  F007         	goto	u2050
  1266  000F32                     u2051:
  1267  000F32  EFBD  F007         	goto	l972
  1268  000F36                     u2050:
  1269  000F36  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1270  000F38  EFA2  F007         	goto	u2060
  1271  000F3C  EFA0  F007         	goto	u2061
  1272  000F40                     u2061:
  1273  000F40  EFBD  F007         	goto	l972
  1274  000F44                     u2060:
  1275  000F44  C001  F005         	movff	___xxtofl@val,??___xxtofl
  1276  000F48  C002  F006         	movff	___xxtofl@val+1,??___xxtofl+1
  1277  000F4C  C003  F007         	movff	___xxtofl@val+2,??___xxtofl+2
  1278  000F50  C004  F008         	movff	___xxtofl@val+3,??___xxtofl+3
  1279  000F54  1E05               	comf	??___xxtofl^0,f,c
  1280  000F56  1E06               	comf	(??___xxtofl+1)^0,f,c
  1281  000F58  1E07               	comf	(??___xxtofl+2)^0,f,c
  1282  000F5A  1E08               	comf	(??___xxtofl+3)^0,f,c
  1283  000F5C  2A05               	incf	??___xxtofl^0,f,c
  1284  000F5E  0E00               	movlw	0
  1285  000F60  2206               	addwfc	(??___xxtofl+1)^0,f,c
  1286  000F62  2207               	addwfc	(??___xxtofl+2)^0,f,c
  1287  000F64  2208               	addwfc	(??___xxtofl+3)^0,f,c
  1288  000F66  C005  F00B         	movff	??___xxtofl,___xxtofl@arg
  1289  000F6A  C006  F00C         	movff	??___xxtofl+1,___xxtofl@arg+1
  1290  000F6E  C007  F00D         	movff	??___xxtofl+2,___xxtofl@arg+2
  1291  000F72  C008  F00E         	movff	??___xxtofl+3,___xxtofl@arg+3
  1292  000F76  EFC5  F007         	goto	l2575
  1293  000F7A                     l972:
  1294  000F7A  C001  F00B         	movff	___xxtofl@val,___xxtofl@arg
  1295  000F7E  C002  F00C         	movff	___xxtofl@val+1,___xxtofl@arg+1
  1296  000F82  C003  F00D         	movff	___xxtofl@val+2,___xxtofl@arg+2
  1297  000F86  C004  F00E         	movff	___xxtofl@val+3,___xxtofl@arg+3
  1298  000F8A                     l2575:
  1299  000F8A  5001               	movf	___xxtofl@val^0,w,c
  1300  000F8C  1002               	iorwf	(___xxtofl@val+1)^0,w,c
  1301  000F8E  1003               	iorwf	(___xxtofl@val+2)^0,w,c
  1302  000F90  1004               	iorwf	(___xxtofl@val+3)^0,w,c
  1303  000F92  A4D8               	btfss	status,2,c
  1304  000F94  EFCE  F007         	goto	u2071
  1305  000F98  EFD0  F007         	goto	u2070
  1306  000F9C                     u2071:
  1307  000F9C  EFDA  F007         	goto	l2581
  1308  000FA0                     u2070:
  1309  000FA0  0E00               	movlw	0
  1310  000FA2  6E01               	movwf	?___xxtofl^0,c
  1311  000FA4  0E00               	movlw	0
  1312  000FA6  6E02               	movwf	(?___xxtofl+1)^0,c
  1313  000FA8  0E00               	movlw	0
  1314  000FAA  6E03               	movwf	(?___xxtofl+2)^0,c
  1315  000FAC  0E00               	movlw	0
  1316  000FAE  6E04               	movwf	(?___xxtofl+3)^0,c
  1317  000FB0  EF6B  F008         	goto	l975
  1318  000FB4                     l2581:
  1319  000FB4  0E96               	movlw	150
  1320  000FB6  6E0A               	movwf	___xxtofl@exp^0,c
  1321  000FB8  EFE4  F007         	goto	l2585
  1322  000FBC                     l2583:
  1323  000FBC  2A0A               	incf	___xxtofl@exp^0,f,c
  1324  000FBE  90D8               	bcf	status,0,c
  1325  000FC0  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1326  000FC2  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1327  000FC4  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1328  000FC6  320B               	rrcf	___xxtofl@arg^0,f,c
  1329  000FC8                     l2585:
  1330  000FC8  0E00               	movlw	0
  1331  000FCA  140B               	andwf	___xxtofl@arg^0,w,c
  1332  000FCC  6E05               	movwf	??___xxtofl^0,c
  1333  000FCE  0E00               	movlw	0
  1334  000FD0  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1335  000FD2  6E06               	movwf	(??___xxtofl+1)^0,c
  1336  000FD4  0E00               	movlw	0
  1337  000FD6  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1338  000FD8  6E07               	movwf	(??___xxtofl+2)^0,c
  1339  000FDA  0EFE               	movlw	254
  1340  000FDC  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1341  000FDE  6E08               	movwf	(??___xxtofl+3)^0,c
  1342  000FE0  5005               	movf	??___xxtofl^0,w,c
  1343  000FE2  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1344  000FE4  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1345  000FE6  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1346  000FE8  A4D8               	btfss	status,2,c
  1347  000FEA  EFF9  F007         	goto	u2081
  1348  000FEE  EFFB  F007         	goto	u2080
  1349  000FF2                     u2081:
  1350  000FF2  EFDE  F007         	goto	l2583
  1351  000FF6                     u2080:
  1352  000FF6  EF09  F008         	goto	l979
  1353  000FFA                     l2587:
  1354  000FFA  2A0A               	incf	___xxtofl@exp^0,f,c
  1355  000FFC  0E01               	movlw	1
  1356  000FFE  260B               	addwf	___xxtofl@arg^0,f,c
  1357  001000  0E00               	movlw	0
  1358  001002  220C               	addwfc	(___xxtofl@arg+1)^0,f,c
  1359  001004  220D               	addwfc	(___xxtofl@arg+2)^0,f,c
  1360  001006  220E               	addwfc	(___xxtofl@arg+3)^0,f,c
  1361  001008  90D8               	bcf	status,0,c
  1362  00100A  320E               	rrcf	(___xxtofl@arg+3)^0,f,c
  1363  00100C  320D               	rrcf	(___xxtofl@arg+2)^0,f,c
  1364  00100E  320C               	rrcf	(___xxtofl@arg+1)^0,f,c
  1365  001010  320B               	rrcf	___xxtofl@arg^0,f,c
  1366  001012                     l979:
  1367  001012  0E00               	movlw	0
  1368  001014  140B               	andwf	___xxtofl@arg^0,w,c
  1369  001016  6E05               	movwf	??___xxtofl^0,c
  1370  001018  0E00               	movlw	0
  1371  00101A  140C               	andwf	(___xxtofl@arg+1)^0,w,c
  1372  00101C  6E06               	movwf	(??___xxtofl+1)^0,c
  1373  00101E  0E00               	movlw	0
  1374  001020  140D               	andwf	(___xxtofl@arg+2)^0,w,c
  1375  001022  6E07               	movwf	(??___xxtofl+2)^0,c
  1376  001024  0EFF               	movlw	255
  1377  001026  140E               	andwf	(___xxtofl@arg+3)^0,w,c
  1378  001028  6E08               	movwf	(??___xxtofl+3)^0,c
  1379  00102A  5005               	movf	??___xxtofl^0,w,c
  1380  00102C  1006               	iorwf	(??___xxtofl+1)^0,w,c
  1381  00102E  1007               	iorwf	(??___xxtofl+2)^0,w,c
  1382  001030  1008               	iorwf	(??___xxtofl+3)^0,w,c
  1383  001032  A4D8               	btfss	status,2,c
  1384  001034  EF1E  F008         	goto	u2091
  1385  001038  EF20  F008         	goto	u2090
  1386  00103C                     u2091:
  1387  00103C  EFFD  F007         	goto	l2587
  1388  001040                     u2090:
  1389  001040  EF28  F008         	goto	l2595
  1390  001044                     l2593:
  1391  001044  060A               	decf	___xxtofl@exp^0,f,c
  1392  001046  90D8               	bcf	status,0,c
  1393  001048  360B               	rlcf	___xxtofl@arg^0,f,c
  1394  00104A  360C               	rlcf	(___xxtofl@arg+1)^0,f,c
  1395  00104C  360D               	rlcf	(___xxtofl@arg+2)^0,f,c
  1396  00104E  360E               	rlcf	(___xxtofl@arg+3)^0,f,c
  1397  001050                     l2595:
  1398  001050  BE0D               	btfsc	(___xxtofl@arg+2)^0,7,c
  1399  001052  EF2D  F008         	goto	u2101
  1400  001056  EF2F  F008         	goto	u2100
  1401  00105A                     u2101:
  1402  00105A  EF37  F008         	goto	l986
  1403  00105E                     u2100:
  1404  00105E  0E02               	movlw	2
  1405  001060  600A               	cpfslt	___xxtofl@exp^0,c
  1406  001062  EF35  F008         	goto	u2111
  1407  001066  EF37  F008         	goto	u2110
  1408  00106A                     u2111:
  1409  00106A  EF22  F008         	goto	l2593
  1410  00106E                     u2110:
  1411  00106E                     l986:
  1412  00106E  B00A               	btfsc	___xxtofl@exp^0,0,c
  1413  001070  EF3C  F008         	goto	u2121
  1414  001074  EF3E  F008         	goto	u2120
  1415  001078                     u2121:
  1416  001078  EF3F  F008         	goto	l2601
  1417  00107C                     u2120:
  1418  00107C  9E0D               	bcf	(___xxtofl@arg+2)^0,7,c
  1419  00107E                     l2601:
  1420  00107E  90D8               	bcf	status,0,c
  1421  001080  320A               	rrcf	___xxtofl@exp^0,f,c
  1422  001082  C00A  F005         	movff	___xxtofl@exp,??___xxtofl
  1423  001086  6A06               	clrf	(??___xxtofl+1)^0,c
  1424  001088  6A07               	clrf	(??___xxtofl+2)^0,c
  1425  00108A  6A08               	clrf	(??___xxtofl+3)^0,c
  1426  00108C  C005  F008         	movff	??___xxtofl,??___xxtofl+3
  1427  001090  6A07               	clrf	(??___xxtofl+2)^0,c
  1428  001092  6A06               	clrf	(??___xxtofl+1)^0,c
  1429  001094  6A05               	clrf	??___xxtofl^0,c
  1430  001096  5005               	movf	??___xxtofl^0,w,c
  1431  001098  120B               	iorwf	___xxtofl@arg^0,f,c
  1432  00109A  5006               	movf	(??___xxtofl+1)^0,w,c
  1433  00109C  120C               	iorwf	(___xxtofl@arg+1)^0,f,c
  1434  00109E  5007               	movf	(??___xxtofl+2)^0,w,c
  1435  0010A0  120D               	iorwf	(___xxtofl@arg+2)^0,f,c
  1436  0010A2  5008               	movf	(??___xxtofl+3)^0,w,c
  1437  0010A4  120E               	iorwf	(___xxtofl@arg+3)^0,f,c
  1438  0010A6  5009               	movf	___xxtofl@sign^0,w,c
  1439  0010A8  B4D8               	btfsc	status,2,c
  1440  0010AA  EF59  F008         	goto	u2131
  1441  0010AE  EF5B  F008         	goto	u2130
  1442  0010B2                     u2131:
  1443  0010B2  EF63  F008         	goto	l2611
  1444  0010B6                     u2130:
  1445  0010B6  BE04               	btfsc	(___xxtofl@val+3)^0,7,c
  1446  0010B8  EF62  F008         	goto	u2140
  1447  0010BC  EF60  F008         	goto	u2141
  1448  0010C0                     u2141:
  1449  0010C0  EF63  F008         	goto	l2611
  1450  0010C4                     u2140:
  1451  0010C4  8E0E               	bsf	(___xxtofl@arg+3)^0,7,c
  1452  0010C6                     l2611:
  1453  0010C6  C00B  F001         	movff	___xxtofl@arg,?___xxtofl
  1454  0010CA  C00C  F002         	movff	___xxtofl@arg+1,?___xxtofl+1
  1455  0010CE  C00D  F003         	movff	___xxtofl@arg+2,?___xxtofl+2
  1456  0010D2  C00E  F004         	movff	___xxtofl@arg+3,?___xxtofl+3
  1457  0010D6                     l975:
  1458  0010D6  0012               	return		;funcret
  1459  0010D8                     __end_of___xxtofl:
  1460                           	callstack 0
  1461                           
  1462 ;; *************** function ___fltol *****************
  1463 ;; Defined at:
  1464 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  f1              4   39[COMRAM] unsigned char 
  1467 ;; Auto vars:     Size  Location     Type
  1468 ;;  exp1            1   48[COMRAM] unsigned char 
  1469 ;;  sign1           1   47[COMRAM] unsigned char 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  4   39[COMRAM] long 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1479 ;;      Params:         4       0       0       0       0       0       0       0       0
  1480 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1481 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1482 ;;      Totals:        10       0       0       0       0       0       0       0       0
  1483 ;;Total ram usage:       10 bytes
  1484 ;; Hardware stack levels used: 1
  1485 ;; This function calls:
  1486 ;;		Nothing
  1487 ;; This function is called by:
  1488 ;;		_sensor_temperatura
  1489 ;;		_USART_Init
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           
  1493                           	psect	text5
  1494  001578                     __ptext5:
  1495                           	callstack 0
  1496  001578                     ___fltol:
  1497                           	callstack 29
  1498  001578  342A               	rlcf	(___fltol@f1+2)^0,w,c
  1499  00157A  342B               	rlcf	(___fltol@f1+3)^0,w,c
  1500  00157C  6E31               	movwf	___fltol@exp1^0,c
  1501  00157E  5031               	movf	___fltol@exp1^0,w,c
  1502  001580  A4D8               	btfss	status,2,c
  1503  001582  EFC5  F00A         	goto	u1951
  1504  001586  EFC7  F00A         	goto	u1950
  1505  00158A                     u1951:
  1506  00158A  EFD1  F00A         	goto	l2509
  1507  00158E                     u1950:
  1508  00158E                     l2505:
  1509  00158E  0E00               	movlw	0
  1510  001590  6E28               	movwf	?___fltol^0,c
  1511  001592  0E00               	movlw	0
  1512  001594  6E29               	movwf	(?___fltol+1)^0,c
  1513  001596  0E00               	movlw	0
  1514  001598  6E2A               	movwf	(?___fltol+2)^0,c
  1515  00159A  0E00               	movlw	0
  1516  00159C  6E2B               	movwf	(?___fltol+3)^0,c
  1517  00159E  EF3E  F00B         	goto	l614
  1518  0015A2                     l2509:
  1519  0015A2  C028  F02C         	movff	___fltol@f1,??___fltol
  1520  0015A6  C029  F02D         	movff	___fltol@f1+1,??___fltol+1
  1521  0015AA  C02A  F02E         	movff	___fltol@f1+2,??___fltol+2
  1522  0015AE  C02B  F02F         	movff	___fltol@f1+3,??___fltol+3
  1523  0015B2  0E20               	movlw	32
  1524  0015B4  EFE1  F00A         	goto	u1960
  1525  0015B8                     u1965:
  1526  0015B8  90D8               	bcf	status,0,c
  1527  0015BA  322F               	rrcf	(??___fltol+3)^0,f,c
  1528  0015BC  322E               	rrcf	(??___fltol+2)^0,f,c
  1529  0015BE  322D               	rrcf	(??___fltol+1)^0,f,c
  1530  0015C0  322C               	rrcf	??___fltol^0,f,c
  1531  0015C2                     u1960:
  1532  0015C2  2EE8               	decfsz	wreg,f,c
  1533  0015C4  EFDC  F00A         	goto	u1965
  1534  0015C8  502C               	movf	??___fltol^0,w,c
  1535  0015CA  6E30               	movwf	___fltol@sign1^0,c
  1536  0015CC  8E2A               	bsf	(___fltol@f1+2)^0,7,c
  1537  0015CE  0EFF               	movlw	255
  1538  0015D0  1628               	andwf	___fltol@f1^0,f,c
  1539  0015D2  0EFF               	movlw	255
  1540  0015D4  1629               	andwf	(___fltol@f1+1)^0,f,c
  1541  0015D6  0EFF               	movlw	255
  1542  0015D8  162A               	andwf	(___fltol@f1+2)^0,f,c
  1543  0015DA  0E00               	movlw	0
  1544  0015DC  162B               	andwf	(___fltol@f1+3)^0,f,c
  1545  0015DE  0E96               	movlw	150
  1546  0015E0  5E31               	subwf	___fltol@exp1^0,f,c
  1547  0015E2  BE31               	btfsc	___fltol@exp1^0,7,c
  1548  0015E4  EFF8  F00A         	goto	u1970
  1549  0015E8  EFF6  F00A         	goto	u1971
  1550  0015EC                     u1971:
  1551  0015EC  EF0E  F00B         	goto	l2529
  1552  0015F0                     u1970:
  1553  0015F0  5031               	movf	___fltol@exp1^0,w,c
  1554  0015F2  0A80               	xorlw	128
  1555  0015F4  0F97               	addlw	151
  1556  0015F6  B0D8               	btfsc	status,0,c
  1557  0015F8  EF00  F00B         	goto	u1981
  1558  0015FC  EF02  F00B         	goto	u1980
  1559  001600                     u1981:
  1560  001600  EF04  F00B         	goto	l2525
  1561  001604                     u1980:
  1562  001604  EFC7  F00A         	goto	l2505
  1563  001608                     l2525:
  1564  001608  90D8               	bcf	status,0,c
  1565  00160A  322B               	rrcf	(___fltol@f1+3)^0,f,c
  1566  00160C  322A               	rrcf	(___fltol@f1+2)^0,f,c
  1567  00160E  3229               	rrcf	(___fltol@f1+1)^0,f,c
  1568  001610  3228               	rrcf	___fltol@f1^0,f,c
  1569  001612  3E31               	incfsz	___fltol@exp1^0,f,c
  1570  001614  EF04  F00B         	goto	l2525
  1571  001618  EF26  F00B         	goto	l2539
  1572  00161C                     l2529:
  1573  00161C  0E1F               	movlw	31
  1574  00161E  6431               	cpfsgt	___fltol@exp1^0,c
  1575  001620  EF14  F00B         	goto	u1991
  1576  001624  EF16  F00B         	goto	u1990
  1577  001628                     u1991:
  1578  001628  EF1E  F00B         	goto	l2537
  1579  00162C                     u1990:
  1580  00162C  EFC7  F00A         	goto	l2505
  1581  001630                     l2535:
  1582  001630  90D8               	bcf	status,0,c
  1583  001632  3628               	rlcf	___fltol@f1^0,f,c
  1584  001634  3629               	rlcf	(___fltol@f1+1)^0,f,c
  1585  001636  362A               	rlcf	(___fltol@f1+2)^0,f,c
  1586  001638  362B               	rlcf	(___fltol@f1+3)^0,f,c
  1587  00163A  0631               	decf	___fltol@exp1^0,f,c
  1588  00163C                     l2537:
  1589  00163C  5031               	movf	___fltol@exp1^0,w,c
  1590  00163E  A4D8               	btfss	status,2,c
  1591  001640  EF24  F00B         	goto	u2001
  1592  001644  EF26  F00B         	goto	u2000
  1593  001648                     u2001:
  1594  001648  EF18  F00B         	goto	l2535
  1595  00164C                     u2000:
  1596  00164C                     l2539:
  1597  00164C  5030               	movf	___fltol@sign1^0,w,c
  1598  00164E  B4D8               	btfsc	status,2,c
  1599  001650  EF2C  F00B         	goto	u2011
  1600  001654  EF2E  F00B         	goto	u2010
  1601  001658                     u2011:
  1602  001658  EF36  F00B         	goto	l2543
  1603  00165C                     u2010:
  1604  00165C  1E2B               	comf	(___fltol@f1+3)^0,f,c
  1605  00165E  1E2A               	comf	(___fltol@f1+2)^0,f,c
  1606  001660  1E29               	comf	(___fltol@f1+1)^0,f,c
  1607  001662  6C28               	negf	___fltol@f1^0,c
  1608  001664  0E00               	movlw	0
  1609  001666  2229               	addwfc	(___fltol@f1+1)^0,f,c
  1610  001668  222A               	addwfc	(___fltol@f1+2)^0,f,c
  1611  00166A  222B               	addwfc	(___fltol@f1+3)^0,f,c
  1612  00166C                     l2543:
  1613  00166C  C028  F028         	movff	___fltol@f1,?___fltol
  1614  001670  C029  F029         	movff	___fltol@f1+1,?___fltol+1
  1615  001674  C02A  F02A         	movff	___fltol@f1+2,?___fltol+2
  1616  001678  C02B  F02B         	movff	___fltol@f1+3,?___fltol+3
  1617  00167C                     l614:
  1618  00167C  0012               	return		;funcret
  1619  00167E                     __end_of___fltol:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function ___flmul *****************
  1623 ;; Defined at:
  1624 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  b               4   14[COMRAM] long 
  1627 ;;  a               4   18[COMRAM] long 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  prod            4   33[COMRAM] struct .
  1630 ;;  grs             4   27[COMRAM] unsigned long 
  1631 ;;  temp            2   37[COMRAM] struct .
  1632 ;;  bexp            1   32[COMRAM] unsigned char 
  1633 ;;  aexp            1   31[COMRAM] unsigned char 
  1634 ;;  sign            1   26[COMRAM] unsigned char 
  1635 ;; Return value:  Size  Location     Type
  1636 ;;                  4   14[COMRAM] unsigned char 
  1637 ;; Registers used:
  1638 ;;		wreg, status,2, status,0, prodl, prodh
  1639 ;; Tracked objects:
  1640 ;;		On entry : 0/0
  1641 ;;		On exit  : 0/0
  1642 ;;		Unchanged: 0/0
  1643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1644 ;;      Params:         8       0       0       0       0       0       0       0       0
  1645 ;;      Locals:        13       0       0       0       0       0       0       0       0
  1646 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1647 ;;      Totals:        25       0       0       0       0       0       0       0       0
  1648 ;;Total ram usage:       25 bytes
  1649 ;; Hardware stack levels used: 1
  1650 ;; This function calls:
  1651 ;;		Nothing
  1652 ;; This function is called by:
  1653 ;;		_sensor_temperatura
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text6
  1658  000816                     __ptext6:
  1659                           	callstack 0
  1660  000816                     ___flmul:
  1661                           	callstack 29
  1662  000816  5012               	movf	(___flmul@b+3)^0,w,c
  1663  000818  0B80               	andlw	128
  1664  00081A  6E1B               	movwf	___flmul@sign^0,c
  1665  00081C  5012               	movf	(___flmul@b+3)^0,w,c
  1666  00081E  2412               	addwf	(___flmul@b+3)^0,w,c
  1667  000820  6E21               	movwf	___flmul@bexp^0,c
  1668  000822  AE11               	btfss	(___flmul@b+2)^0,7,c
  1669  000824  EF16  F004         	goto	u1761
  1670  000828  EF18  F004         	goto	u1760
  1671  00082C                     u1761:
  1672  00082C  EF19  F004         	goto	l2379
  1673  000830                     u1760:
  1674  000830  8021               	bsf	___flmul@bexp^0,0,c
  1675  000832                     l2379:
  1676  000832  5021               	movf	___flmul@bexp^0,w,c
  1677  000834  B4D8               	btfsc	status,2,c
  1678  000836  EF1F  F004         	goto	u1771
  1679  00083A  EF21  F004         	goto	u1770
  1680  00083E                     u1771:
  1681  00083E  EF34  F004         	goto	l2387
  1682  000842                     u1770:
  1683  000842  2821               	incf	___flmul@bexp^0,w,c
  1684  000844  A4D8               	btfss	status,2,c
  1685  000846  EF27  F004         	goto	u1781
  1686  00084A  EF29  F004         	goto	u1780
  1687  00084E                     u1781:
  1688  00084E  EF31  F004         	goto	l2385
  1689  000852                     u1780:
  1690  000852  0E00               	movlw	0
  1691  000854  6E0F               	movwf	___flmul@b^0,c
  1692  000856  0E00               	movlw	0
  1693  000858  6E10               	movwf	(___flmul@b+1)^0,c
  1694  00085A  0E00               	movlw	0
  1695  00085C  6E11               	movwf	(___flmul@b+2)^0,c
  1696  00085E  0E00               	movlw	0
  1697  000860  6E12               	movwf	(___flmul@b+3)^0,c
  1698  000862                     l2385:
  1699  000862  8E11               	bsf	(___flmul@b+2)^0,7,c
  1700  000864  EF3C  F004         	goto	l2389
  1701  000868                     l2387:
  1702  000868  0E00               	movlw	0
  1703  00086A  6E0F               	movwf	___flmul@b^0,c
  1704  00086C  0E00               	movlw	0
  1705  00086E  6E10               	movwf	(___flmul@b+1)^0,c
  1706  000870  0E00               	movlw	0
  1707  000872  6E11               	movwf	(___flmul@b+2)^0,c
  1708  000874  0E00               	movlw	0
  1709  000876  6E12               	movwf	(___flmul@b+3)^0,c
  1710  000878                     l2389:
  1711  000878  5016               	movf	(___flmul@a+3)^0,w,c
  1712  00087A  0B80               	andlw	128
  1713  00087C  1A1B               	xorwf	___flmul@sign^0,f,c
  1714  00087E  5016               	movf	(___flmul@a+3)^0,w,c
  1715  000880  2416               	addwf	(___flmul@a+3)^0,w,c
  1716  000882  6E20               	movwf	___flmul@aexp^0,c
  1717  000884  AE15               	btfss	(___flmul@a+2)^0,7,c
  1718  000886  EF47  F004         	goto	u1791
  1719  00088A  EF49  F004         	goto	u1790
  1720  00088E                     u1791:
  1721  00088E  EF4A  F004         	goto	l2397
  1722  000892                     u1790:
  1723  000892  8020               	bsf	___flmul@aexp^0,0,c
  1724  000894                     l2397:
  1725  000894  5020               	movf	___flmul@aexp^0,w,c
  1726  000896  B4D8               	btfsc	status,2,c
  1727  000898  EF50  F004         	goto	u1801
  1728  00089C  EF52  F004         	goto	u1800
  1729  0008A0                     u1801:
  1730  0008A0  EF65  F004         	goto	l2405
  1731  0008A4                     u1800:
  1732  0008A4  2820               	incf	___flmul@aexp^0,w,c
  1733  0008A6  A4D8               	btfss	status,2,c
  1734  0008A8  EF58  F004         	goto	u1811
  1735  0008AC  EF5A  F004         	goto	u1810
  1736  0008B0                     u1811:
  1737  0008B0  EF62  F004         	goto	l2403
  1738  0008B4                     u1810:
  1739  0008B4  0E00               	movlw	0
  1740  0008B6  6E13               	movwf	___flmul@a^0,c
  1741  0008B8  0E00               	movlw	0
  1742  0008BA  6E14               	movwf	(___flmul@a+1)^0,c
  1743  0008BC  0E00               	movlw	0
  1744  0008BE  6E15               	movwf	(___flmul@a+2)^0,c
  1745  0008C0  0E00               	movlw	0
  1746  0008C2  6E16               	movwf	(___flmul@a+3)^0,c
  1747  0008C4                     l2403:
  1748  0008C4  8E15               	bsf	(___flmul@a+2)^0,7,c
  1749  0008C6  EF6D  F004         	goto	l931
  1750  0008CA                     l2405:
  1751  0008CA  0E00               	movlw	0
  1752  0008CC  6E13               	movwf	___flmul@a^0,c
  1753  0008CE  0E00               	movlw	0
  1754  0008D0  6E14               	movwf	(___flmul@a+1)^0,c
  1755  0008D2  0E00               	movlw	0
  1756  0008D4  6E15               	movwf	(___flmul@a+2)^0,c
  1757  0008D6  0E00               	movlw	0
  1758  0008D8  6E16               	movwf	(___flmul@a+3)^0,c
  1759  0008DA                     l931:
  1760  0008DA  5020               	movf	___flmul@aexp^0,w,c
  1761  0008DC  B4D8               	btfsc	status,2,c
  1762  0008DE  EF73  F004         	goto	u1821
  1763  0008E2  EF75  F004         	goto	u1820
  1764  0008E6                     u1821:
  1765  0008E6  EF7D  F004         	goto	l2409
  1766  0008EA                     u1820:
  1767  0008EA  5021               	movf	___flmul@bexp^0,w,c
  1768  0008EC  A4D8               	btfss	status,2,c
  1769  0008EE  EF7B  F004         	goto	u1831
  1770  0008F2  EF7D  F004         	goto	u1830
  1771  0008F6                     u1831:
  1772  0008F6  EF87  F004         	goto	l2413
  1773  0008FA                     u1830:
  1774  0008FA                     l2409:
  1775  0008FA  0E00               	movlw	0
  1776  0008FC  6E0F               	movwf	?___flmul^0,c
  1777  0008FE  0E00               	movlw	0
  1778  000900  6E10               	movwf	(?___flmul+1)^0,c
  1779  000902  0E00               	movlw	0
  1780  000904  6E11               	movwf	(?___flmul+2)^0,c
  1781  000906  0E00               	movlw	0
  1782  000908  6E12               	movwf	(?___flmul+3)^0,c
  1783  00090A  EF1F  F006         	goto	l935
  1784  00090E                     l2413:
  1785  00090E  5015               	movf	(___flmul@a+2)^0,w,c
  1786  000910  020F               	mulwf	___flmul@b^0,c
  1787  000912  CFF3 F026          	movff	prodl,___flmul@temp
  1788  000916  CFF4 F027          	movff	prodh,___flmul@temp+1
  1789  00091A  5026               	movf	___flmul@temp^0,w,c
  1790  00091C  6E1C               	movwf	___flmul@grs^0,c
  1791  00091E  6A1D               	clrf	(___flmul@grs+1)^0,c
  1792  000920  6A1E               	clrf	(___flmul@grs+2)^0,c
  1793  000922  6A1F               	clrf	(___flmul@grs+3)^0,c
  1794  000924  5027               	movf	(___flmul@temp+1)^0,w,c
  1795  000926  6E22               	movwf	___flmul@prod^0,c
  1796  000928  6A23               	clrf	(___flmul@prod+1)^0,c
  1797  00092A  6A24               	clrf	(___flmul@prod+2)^0,c
  1798  00092C  6A25               	clrf	(___flmul@prod+3)^0,c
  1799  00092E  5014               	movf	(___flmul@a+1)^0,w,c
  1800  000930  0210               	mulwf	(___flmul@b+1)^0,c
  1801  000932  CFF3 F026          	movff	prodl,___flmul@temp
  1802  000936  CFF4 F027          	movff	prodh,___flmul@temp+1
  1803  00093A  5026               	movf	___flmul@temp^0,w,c
  1804  00093C  261C               	addwf	___flmul@grs^0,f,c
  1805  00093E  0E00               	movlw	0
  1806  000940  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1807  000942  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1808  000944  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1809  000946  5027               	movf	(___flmul@temp+1)^0,w,c
  1810  000948  2622               	addwf	___flmul@prod^0,f,c
  1811  00094A  0E00               	movlw	0
  1812  00094C  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1813  00094E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1814  000950  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1815  000952  5013               	movf	___flmul@a^0,w,c
  1816  000954  0211               	mulwf	(___flmul@b+2)^0,c
  1817  000956  CFF3 F026          	movff	prodl,___flmul@temp
  1818  00095A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1819  00095E  5026               	movf	___flmul@temp^0,w,c
  1820  000960  261C               	addwf	___flmul@grs^0,f,c
  1821  000962  0E00               	movlw	0
  1822  000964  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1823  000966  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1824  000968  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1825  00096A  5027               	movf	(___flmul@temp+1)^0,w,c
  1826  00096C  2622               	addwf	___flmul@prod^0,f,c
  1827  00096E  0E00               	movlw	0
  1828  000970  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1829  000972  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1830  000974  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1831  000976  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1832  00097A  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1833  00097E  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1834  000982  6A1C               	clrf	___flmul@grs^0,c
  1835  000984  5013               	movf	___flmul@a^0,w,c
  1836  000986  0210               	mulwf	(___flmul@b+1)^0,c
  1837  000988  CFF3 F026          	movff	prodl,___flmul@temp
  1838  00098C  CFF4 F027          	movff	prodh,___flmul@temp+1
  1839  000990  5026               	movf	___flmul@temp^0,w,c
  1840  000992  261C               	addwf	___flmul@grs^0,f,c
  1841  000994  5027               	movf	(___flmul@temp+1)^0,w,c
  1842  000996  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1843  000998  0E00               	movlw	0
  1844  00099A  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1845  00099C  0E00               	movlw	0
  1846  00099E  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1847  0009A0  5014               	movf	(___flmul@a+1)^0,w,c
  1848  0009A2  020F               	mulwf	___flmul@b^0,c
  1849  0009A4  CFF3 F026          	movff	prodl,___flmul@temp
  1850  0009A8  CFF4 F027          	movff	prodh,___flmul@temp+1
  1851  0009AC  5026               	movf	___flmul@temp^0,w,c
  1852  0009AE  261C               	addwf	___flmul@grs^0,f,c
  1853  0009B0  5027               	movf	(___flmul@temp+1)^0,w,c
  1854  0009B2  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1855  0009B4  0E00               	movlw	0
  1856  0009B6  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1857  0009B8  0E00               	movlw	0
  1858  0009BA  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1859  0009BC  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1860  0009C0  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1861  0009C4  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1862  0009C8  6A1C               	clrf	___flmul@grs^0,c
  1863  0009CA  5013               	movf	___flmul@a^0,w,c
  1864  0009CC  020F               	mulwf	___flmul@b^0,c
  1865  0009CE  CFF3 F026          	movff	prodl,___flmul@temp
  1866  0009D2  CFF4 F027          	movff	prodh,___flmul@temp+1
  1867  0009D6  5026               	movf	___flmul@temp^0,w,c
  1868  0009D8  261C               	addwf	___flmul@grs^0,f,c
  1869  0009DA  5027               	movf	(___flmul@temp+1)^0,w,c
  1870  0009DC  221D               	addwfc	(___flmul@grs+1)^0,f,c
  1871  0009DE  0E00               	movlw	0
  1872  0009E0  221E               	addwfc	(___flmul@grs+2)^0,f,c
  1873  0009E2  0E00               	movlw	0
  1874  0009E4  221F               	addwfc	(___flmul@grs+3)^0,f,c
  1875  0009E6  5015               	movf	(___flmul@a+2)^0,w,c
  1876  0009E8  0210               	mulwf	(___flmul@b+1)^0,c
  1877  0009EA  CFF3 F026          	movff	prodl,___flmul@temp
  1878  0009EE  CFF4 F027          	movff	prodh,___flmul@temp+1
  1879  0009F2  5026               	movf	___flmul@temp^0,w,c
  1880  0009F4  2622               	addwf	___flmul@prod^0,f,c
  1881  0009F6  5027               	movf	(___flmul@temp+1)^0,w,c
  1882  0009F8  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1883  0009FA  0E00               	movlw	0
  1884  0009FC  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1885  0009FE  0E00               	movlw	0
  1886  000A00  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1887  000A02  5014               	movf	(___flmul@a+1)^0,w,c
  1888  000A04  0211               	mulwf	(___flmul@b+2)^0,c
  1889  000A06  CFF3 F026          	movff	prodl,___flmul@temp
  1890  000A0A  CFF4 F027          	movff	prodh,___flmul@temp+1
  1891  000A0E  5026               	movf	___flmul@temp^0,w,c
  1892  000A10  2622               	addwf	___flmul@prod^0,f,c
  1893  000A12  5027               	movf	(___flmul@temp+1)^0,w,c
  1894  000A14  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1895  000A16  0E00               	movlw	0
  1896  000A18  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1897  000A1A  0E00               	movlw	0
  1898  000A1C  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1899  000A1E  5015               	movf	(___flmul@a+2)^0,w,c
  1900  000A20  0211               	mulwf	(___flmul@b+2)^0,c
  1901  000A22  CFF3 F026          	movff	prodl,___flmul@temp
  1902  000A26  CFF4 F027          	movff	prodh,___flmul@temp+1
  1903  000A2A  5026               	movf	___flmul@temp^0,w,c
  1904  000A2C  6E17               	movwf	??___flmul^0,c
  1905  000A2E  5027               	movf	(___flmul@temp+1)^0,w,c
  1906  000A30  6E18               	movwf	(??___flmul+1)^0,c
  1907  000A32  6A19               	clrf	(??___flmul+2)^0,c
  1908  000A34  6A1A               	clrf	(??___flmul+3)^0,c
  1909  000A36  C019  F01A         	movff	??___flmul+2,??___flmul+3
  1910  000A3A  C018  F019         	movff	??___flmul+1,??___flmul+2
  1911  000A3E  C017  F018         	movff	??___flmul,??___flmul+1
  1912  000A42  6A17               	clrf	??___flmul^0,c
  1913  000A44  5017               	movf	??___flmul^0,w,c
  1914  000A46  2622               	addwf	___flmul@prod^0,f,c
  1915  000A48  5018               	movf	(??___flmul+1)^0,w,c
  1916  000A4A  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1917  000A4C  5019               	movf	(??___flmul+2)^0,w,c
  1918  000A4E  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1919  000A50  501A               	movf	(??___flmul+3)^0,w,c
  1920  000A52  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1921  000A54  C01C  F017         	movff	___flmul@grs,??___flmul
  1922  000A58  C01D  F018         	movff	___flmul@grs+1,??___flmul+1
  1923  000A5C  C01E  F019         	movff	___flmul@grs+2,??___flmul+2
  1924  000A60  C01F  F01A         	movff	___flmul@grs+3,??___flmul+3
  1925  000A64  0E19               	movlw	25
  1926  000A66  EF3A  F005         	goto	u1840
  1927  000A6A                     u1845:
  1928  000A6A  90D8               	bcf	status,0,c
  1929  000A6C  321A               	rrcf	(??___flmul+3)^0,f,c
  1930  000A6E  3219               	rrcf	(??___flmul+2)^0,f,c
  1931  000A70  3218               	rrcf	(??___flmul+1)^0,f,c
  1932  000A72  3217               	rrcf	??___flmul^0,f,c
  1933  000A74                     u1840:
  1934  000A74  2EE8               	decfsz	wreg,f,c
  1935  000A76  EF35  F005         	goto	u1845
  1936  000A7A  5017               	movf	??___flmul^0,w,c
  1937  000A7C  2622               	addwf	___flmul@prod^0,f,c
  1938  000A7E  5018               	movf	(??___flmul+1)^0,w,c
  1939  000A80  2223               	addwfc	(___flmul@prod+1)^0,f,c
  1940  000A82  5019               	movf	(??___flmul+2)^0,w,c
  1941  000A84  2224               	addwfc	(___flmul@prod+2)^0,f,c
  1942  000A86  501A               	movf	(??___flmul+3)^0,w,c
  1943  000A88  2225               	addwfc	(___flmul@prod+3)^0,f,c
  1944  000A8A  C01E  F01F         	movff	___flmul@grs+2,___flmul@grs+3
  1945  000A8E  C01D  F01E         	movff	___flmul@grs+1,___flmul@grs+2
  1946  000A92  C01C  F01D         	movff	___flmul@grs,___flmul@grs+1
  1947  000A96  6A1C               	clrf	___flmul@grs^0,c
  1948  000A98  5020               	movf	___flmul@aexp^0,w,c
  1949  000A9A  C021  F017         	movff	___flmul@bexp,??___flmul
  1950  000A9E  6A18               	clrf	(??___flmul+1)^0,c
  1951  000AA0  2617               	addwf	??___flmul^0,f,c
  1952  000AA2  0E00               	movlw	0
  1953  000AA4  2218               	addwfc	(??___flmul+1)^0,f,c
  1954  000AA6  0E82               	movlw	130
  1955  000AA8  2417               	addwf	??___flmul^0,w,c
  1956  000AAA  6E26               	movwf	___flmul@temp^0,c
  1957  000AAC  0EFF               	movlw	255
  1958  000AAE  2018               	addwfc	(??___flmul+1)^0,w,c
  1959  000AB0  6E27               	movwf	(___flmul@temp+1)^0,c
  1960  000AB2  EF70  F005         	goto	l2461
  1961  000AB6                     l2455:
  1962  000AB6  90D8               	bcf	status,0,c
  1963  000AB8  3622               	rlcf	___flmul@prod^0,f,c
  1964  000ABA  3623               	rlcf	(___flmul@prod+1)^0,f,c
  1965  000ABC  3624               	rlcf	(___flmul@prod+2)^0,f,c
  1966  000ABE  3625               	rlcf	(___flmul@prod+3)^0,f,c
  1967  000AC0  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1968  000AC2  EF65  F005         	goto	u1851
  1969  000AC6  EF67  F005         	goto	u1850
  1970  000ACA                     u1851:
  1971  000ACA  EF68  F005         	goto	l938
  1972  000ACE                     u1850:
  1973  000ACE  8022               	bsf	___flmul@prod^0,0,c
  1974  000AD0                     l938:
  1975  000AD0  90D8               	bcf	status,0,c
  1976  000AD2  361C               	rlcf	___flmul@grs^0,f,c
  1977  000AD4  361D               	rlcf	(___flmul@grs+1)^0,f,c
  1978  000AD6  361E               	rlcf	(___flmul@grs+2)^0,f,c
  1979  000AD8  361F               	rlcf	(___flmul@grs+3)^0,f,c
  1980  000ADA  0626               	decf	___flmul@temp^0,f,c
  1981  000ADC  A0D8               	btfss	status,0,c
  1982  000ADE  0627               	decf	(___flmul@temp+1)^0,f,c
  1983  000AE0                     l2461:
  1984  000AE0  AE24               	btfss	(___flmul@prod+2)^0,7,c
  1985  000AE2  EF75  F005         	goto	u1861
  1986  000AE6  EF77  F005         	goto	u1860
  1987  000AEA                     u1861:
  1988  000AEA  EF5B  F005         	goto	l2455
  1989  000AEE                     u1860:
  1990  000AEE  0E00               	movlw	0
  1991  000AF0  6E20               	movwf	___flmul@aexp^0,c
  1992  000AF2  AE1F               	btfss	(___flmul@grs+3)^0,7,c
  1993  000AF4  EF7E  F005         	goto	u1871
  1994  000AF8  EF80  F005         	goto	u1870
  1995  000AFC                     u1871:
  1996  000AFC  EFA4  F005         	goto	l940
  1997  000B00                     u1870:
  1998  000B00  0EFF               	movlw	255
  1999  000B02  141C               	andwf	___flmul@grs^0,w,c
  2000  000B04  6E17               	movwf	??___flmul^0,c
  2001  000B06  0EFF               	movlw	255
  2002  000B08  141D               	andwf	(___flmul@grs+1)^0,w,c
  2003  000B0A  6E18               	movwf	(??___flmul+1)^0,c
  2004  000B0C  0EFF               	movlw	255
  2005  000B0E  141E               	andwf	(___flmul@grs+2)^0,w,c
  2006  000B10  6E19               	movwf	(??___flmul+2)^0,c
  2007  000B12  0E7F               	movlw	127
  2008  000B14  141F               	andwf	(___flmul@grs+3)^0,w,c
  2009  000B16  6E1A               	movwf	(??___flmul+3)^0,c
  2010  000B18  5017               	movf	??___flmul^0,w,c
  2011  000B1A  1018               	iorwf	(??___flmul+1)^0,w,c
  2012  000B1C  1019               	iorwf	(??___flmul+2)^0,w,c
  2013  000B1E  101A               	iorwf	(??___flmul+3)^0,w,c
  2014  000B20  B4D8               	btfsc	status,2,c
  2015  000B22  EF95  F005         	goto	u1881
  2016  000B26  EF97  F005         	goto	u1880
  2017  000B2A                     u1881:
  2018  000B2A  EF9B  F005         	goto	l941
  2019  000B2E                     u1880:
  2020  000B2E                     l2469:
  2021  000B2E  0E01               	movlw	1
  2022  000B30  6E20               	movwf	___flmul@aexp^0,c
  2023  000B32  EFA4  F005         	goto	l940
  2024  000B36                     l941:
  2025  000B36  A022               	btfss	___flmul@prod^0,0,c
  2026  000B38  EFA0  F005         	goto	u1891
  2027  000B3C  EFA2  F005         	goto	u1890
  2028  000B40                     u1891:
  2029  000B40  EFA4  F005         	goto	l940
  2030  000B44                     u1890:
  2031  000B44  EF97  F005         	goto	l2469
  2032  000B48                     l940:
  2033  000B48  5020               	movf	___flmul@aexp^0,w,c
  2034  000B4A  B4D8               	btfsc	status,2,c
  2035  000B4C  EFAA  F005         	goto	u1901
  2036  000B50  EFAC  F005         	goto	u1900
  2037  000B54                     u1901:
  2038  000B54  EFD0  F005         	goto	l2481
  2039  000B58                     u1900:
  2040  000B58  0E01               	movlw	1
  2041  000B5A  2622               	addwf	___flmul@prod^0,f,c
  2042  000B5C  0E00               	movlw	0
  2043  000B5E  2223               	addwfc	(___flmul@prod+1)^0,f,c
  2044  000B60  2224               	addwfc	(___flmul@prod+2)^0,f,c
  2045  000B62  2225               	addwfc	(___flmul@prod+3)^0,f,c
  2046  000B64  A025               	btfss	(___flmul@prod+3)^0,0,c
  2047  000B66  EFB7  F005         	goto	u1911
  2048  000B6A  EFB9  F005         	goto	u1910
  2049  000B6E                     u1911:
  2050  000B6E  EFD0  F005         	goto	l2481
  2051  000B72                     u1910:
  2052  000B72  C022  F017         	movff	___flmul@prod,??___flmul
  2053  000B76  C023  F018         	movff	___flmul@prod+1,??___flmul+1
  2054  000B7A  C024  F019         	movff	___flmul@prod+2,??___flmul+2
  2055  000B7E  C025  F01A         	movff	___flmul@prod+3,??___flmul+3
  2056  000B82  341A               	rlcf	(??___flmul+3)^0,w,c
  2057  000B84  321A               	rrcf	(??___flmul+3)^0,f,c
  2058  000B86  3219               	rrcf	(??___flmul+2)^0,f,c
  2059  000B88  3218               	rrcf	(??___flmul+1)^0,f,c
  2060  000B8A  3217               	rrcf	??___flmul^0,f,c
  2061  000B8C  C017  F022         	movff	??___flmul,___flmul@prod
  2062  000B90  C018  F023         	movff	??___flmul+1,___flmul@prod+1
  2063  000B94  C019  F024         	movff	??___flmul+2,___flmul@prod+2
  2064  000B98  C01A  F025         	movff	??___flmul+3,___flmul@prod+3
  2065  000B9C  4A26               	infsnz	___flmul@temp^0,f,c
  2066  000B9E  2A27               	incf	(___flmul@temp+1)^0,f,c
  2067  000BA0                     l2481:
  2068  000BA0  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2069  000BA2  EFDB  F005         	goto	u1921
  2070  000BA6  5027               	movf	(___flmul@temp+1)^0,w,c
  2071  000BA8  E108               	bnz	u1920
  2072  000BAA  2826               	incf	___flmul@temp^0,w,c
  2073  000BAC  A0D8               	btfss	status,0,c
  2074  000BAE  EFDB  F005         	goto	u1921
  2075  000BB2  EFDD  F005         	goto	u1920
  2076  000BB6                     u1921:
  2077  000BB6  EFE7  F005         	goto	l2485
  2078  000BBA                     u1920:
  2079  000BBA  0E00               	movlw	0
  2080  000BBC  6E22               	movwf	___flmul@prod^0,c
  2081  000BBE  0E00               	movlw	0
  2082  000BC0  6E23               	movwf	(___flmul@prod+1)^0,c
  2083  000BC2  0E80               	movlw	128
  2084  000BC4  6E24               	movwf	(___flmul@prod+2)^0,c
  2085  000BC6  0E7F               	movlw	127
  2086  000BC8  6E25               	movwf	(___flmul@prod+3)^0,c
  2087  000BCA  EF15  F006         	goto	l2497
  2088  000BCE                     l2485:
  2089  000BCE  BE27               	btfsc	(___flmul@temp+1)^0,7,c
  2090  000BD0  EFF4  F005         	goto	u1930
  2091  000BD4  5027               	movf	(___flmul@temp+1)^0,w,c
  2092  000BD6  E106               	bnz	u1931
  2093  000BD8  0426               	decf	___flmul@temp^0,w,c
  2094  000BDA  B0D8               	btfsc	status,0,c
  2095  000BDC  EFF2  F005         	goto	u1931
  2096  000BE0  EFF4  F005         	goto	u1930
  2097  000BE4                     u1931:
  2098  000BE4  EF00  F006         	goto	l948
  2099  000BE8                     u1930:
  2100  000BE8  0E00               	movlw	0
  2101  000BEA  6E22               	movwf	___flmul@prod^0,c
  2102  000BEC  0E00               	movlw	0
  2103  000BEE  6E23               	movwf	(___flmul@prod+1)^0,c
  2104  000BF0  0E00               	movlw	0
  2105  000BF2  6E24               	movwf	(___flmul@prod+2)^0,c
  2106  000BF4  0E00               	movlw	0
  2107  000BF6  6E25               	movwf	(___flmul@prod+3)^0,c
  2108  000BF8  0E00               	movlw	0
  2109  000BFA  6E1B               	movwf	___flmul@sign^0,c
  2110  000BFC  EF15  F006         	goto	l2497
  2111  000C00                     l948:
  2112  000C00  C026  F021         	movff	___flmul@temp,___flmul@bexp
  2113  000C04  0EFF               	movlw	255
  2114  000C06  1622               	andwf	___flmul@prod^0,f,c
  2115  000C08  0EFF               	movlw	255
  2116  000C0A  1623               	andwf	(___flmul@prod+1)^0,f,c
  2117  000C0C  0E7F               	movlw	127
  2118  000C0E  1624               	andwf	(___flmul@prod+2)^0,f,c
  2119  000C10  0E00               	movlw	0
  2120  000C12  1625               	andwf	(___flmul@prod+3)^0,f,c
  2121  000C14  A021               	btfss	___flmul@bexp^0,0,c
  2122  000C16  EF0F  F006         	goto	u1941
  2123  000C1A  EF11  F006         	goto	u1940
  2124  000C1E                     u1941:
  2125  000C1E  EF12  F006         	goto	l2495
  2126  000C22                     u1940:
  2127  000C22  8E24               	bsf	(___flmul@prod+2)^0,7,c
  2128  000C24                     l2495:
  2129  000C24  90D8               	bcf	status,0,c
  2130  000C26  3021               	rrcf	___flmul@bexp^0,w,c
  2131  000C28  6E25               	movwf	(___flmul@prod+3)^0,c
  2132  000C2A                     l2497:
  2133  000C2A  501B               	movf	___flmul@sign^0,w,c
  2134  000C2C  1225               	iorwf	(___flmul@prod+3)^0,f,c
  2135  000C2E  C022  F00F         	movff	___flmul@prod,?___flmul
  2136  000C32  C023  F010         	movff	___flmul@prod+1,?___flmul+1
  2137  000C36  C024  F011         	movff	___flmul@prod+2,?___flmul+2
  2138  000C3A  C025  F012         	movff	___flmul@prod+3,?___flmul+3
  2139  000C3E                     l935:
  2140  000C3E  0012               	return		;funcret
  2141  000C40                     __end_of___flmul:
  2142                           	callstack 0
  2143                           
  2144 ;; *************** function _sensor_luz *****************
  2145 ;; Defined at:
  2146 ;;		line 47 in file "sensores.c"
  2147 ;; Parameters:    Size  Location     Type
  2148 ;;		None
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2   13[COMRAM] int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2160 ;;      Params:         2       0       0       0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2162 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2163 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2164 ;;Total ram usage:        3 bytes
  2165 ;; Hardware stack levels used: 1
  2166 ;; Hardware stack levels required when called: 2
  2167 ;; This function calls:
  2168 ;;		___lwdiv
  2169 ;;		___wmul
  2170 ;;		_adc_init10Bits
  2171 ;;		_adc_read10Bits
  2172 ;; This function is called by:
  2173 ;;		_main
  2174 ;; This function uses a non-reentrant model
  2175 ;;
  2176                           
  2177                           	psect	text7
  2178  001B5A                     __ptext7:
  2179                           	callstack 0
  2180  001B5A                     _sensor_luz:
  2181                           	callstack 28
  2182  001B5A                     
  2183                           ;sensores.c: 49:     TRISAbits.TRISA1 = 1;
  2184  001B5A  8292               	bsf	146,1,c	;volatile
  2185  001B5C                     
  2186                           ;sensores.c: 51:     adc_init10Bits(1);
  2187  001B5C  0E00               	movlw	0
  2188  001B5E  6E04               	movwf	(adc_init10Bits@canal+1)^0,c
  2189  001B60  0E01               	movlw	1
  2190  001B62  6E03               	movwf	adc_init10Bits@canal^0,c
  2191  001B64  ECFE  F010         	call	_adc_init10Bits	;wreg free
  2192  001B68                     
  2193                           ;sensores.c: 53:     val_intensidad = adc_read10Bits();
  2194  001B68  ECC0  F010         	call	_adc_read10Bits	;wreg free
  2195  001B6C  C001  F0EE         	movff	?_adc_read10Bits,_val_intensidad
  2196  001B70  C002  F0EF         	movff	?_adc_read10Bits+1,_val_intensidad+1
  2197  001B74                     
  2198                           ;sensores.c: 54:     val_intensidad = (val_intensidad * 5) / 1024;
  2199  001B74  C0EE  F001         	movff	_val_intensidad,___wmul@multiplier
  2200  001B78  C0EF  F002         	movff	_val_intensidad+1,___wmul@multiplier+1
  2201  001B7C  0E00               	movlw	0
  2202  001B7E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2203  001B80  0E05               	movlw	5
  2204  001B82  6E03               	movwf	___wmul@multiplicand^0,c
  2205  001B84  ECD6  F010         	call	___wmul	;wreg free
  2206  001B88  0E0A               	movlw	10
  2207  001B8A  6E10               	movwf	??_sensor_luz^0,c
  2208  001B8C                     u2235:
  2209  001B8C  90D8               	bcf	status,0,c
  2210  001B8E  3202               	rrcf	(?___wmul+1)^0,f,c
  2211  001B90  3201               	rrcf	?___wmul^0,f,c
  2212  001B92  2E10               	decfsz	??_sensor_luz^0,f,c
  2213  001B94  EFC6  F00D         	goto	u2235
  2214  001B98  C001  F0EE         	movff	?___wmul,_val_intensidad
  2215  001B9C  C002  F0EF         	movff	?___wmul+1,_val_intensidad+1
  2216  001BA0                     
  2217                           ;sensores.c: 55:     val_luminosidad = (val_intensidad * 100) / 5;
  2218  001BA0  C0EE  F001         	movff	_val_intensidad,___wmul@multiplier
  2219  001BA4  C0EF  F002         	movff	_val_intensidad+1,___wmul@multiplier+1
  2220  001BA8  0E00               	movlw	0
  2221  001BAA  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  2222  001BAC  0E64               	movlw	100
  2223  001BAE  6E03               	movwf	___wmul@multiplicand^0,c
  2224  001BB0  ECD6  F010         	call	___wmul	;wreg free
  2225  001BB4  C001  F007         	movff	?___wmul,___lwdiv@dividend
  2226  001BB8  C002  F008         	movff	?___wmul+1,___lwdiv@dividend+1
  2227  001BBC  0E00               	movlw	0
  2228  001BBE  6E0A               	movwf	(___lwdiv@divisor+1)^0,c
  2229  001BC0  0E05               	movlw	5
  2230  001BC2  6E09               	movwf	___lwdiv@divisor^0,c
  2231  001BC4  EC6B  F00E         	call	___lwdiv	;wreg free
  2232  001BC8  C007  F0EC         	movff	?___lwdiv,_val_luminosidad
  2233  001BCC  C008  F0ED         	movff	?___lwdiv+1,_val_luminosidad+1
  2234  001BD0                     
  2235                           ;sensores.c: 57:     return val_luminosidad;
  2236  001BD0  C0EC  F00E         	movff	_val_luminosidad,?_sensor_luz
  2237  001BD4  C0ED  F00F         	movff	_val_luminosidad+1,?_sensor_luz+1
  2238  001BD8  0012               	return		;funcret
  2239  001BDA                     __end_of_sensor_luz:
  2240                           	callstack 0
  2241                           
  2242 ;; *************** function _adc_read10Bits *****************
  2243 ;; Defined at:
  2244 ;;		line 32 in file "adc_lib.c"
  2245 ;; Parameters:    Size  Location     Type
  2246 ;;		None
  2247 ;; Auto vars:     Size  Location     Type
  2248 ;;  value_adc       2    4[COMRAM] unsigned int 
  2249 ;; Return value:  Size  Location     Type
  2250 ;;                  2    0[COMRAM] unsigned int 
  2251 ;; Registers used:
  2252 ;;		wreg, status,2
  2253 ;; Tracked objects:
  2254 ;;		On entry : 0/0
  2255 ;;		On exit  : 0/0
  2256 ;;		Unchanged: 0/0
  2257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2258 ;;      Params:         2       0       0       0       0       0       0       0       0
  2259 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2260 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2261 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2262 ;;Total ram usage:        6 bytes
  2263 ;; Hardware stack levels used: 1
  2264 ;; This function calls:
  2265 ;;		Nothing
  2266 ;; This function is called by:
  2267 ;;		_sensor_temperatura
  2268 ;;		_sensor_luz
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           	psect	text8
  2273  002180                     __ptext8:
  2274                           	callstack 0
  2275  002180                     _adc_read10Bits:
  2276                           	callstack 29
  2277  002180                     
  2278                           ;adc_lib.c: 34:     ADCON0bits.GO_DONE = 1;
  2279  002180  82C2               	bsf	194,1,c	;volatile
  2280  002182                     l119:
  2281  002182  B2C2               	btfsc	194,1,c	;volatile
  2282  002184  EFC6  F010         	goto	u1731
  2283  002188  EFC8  F010         	goto	u1730
  2284  00218C                     u1731:
  2285  00218C  EFC1  F010         	goto	l119
  2286  002190                     u1730:
  2287  002190                     
  2288                           ;adc_lib.c: 36:     value_adc = ADRESH;
  2289  002190  CFC4 F005          	movff	4036,adc_read10Bits@value_adc	;volatile
  2290  002194  6A06               	clrf	(adc_read10Bits@value_adc+1)^0,c
  2291  002196                     
  2292                           ;adc_lib.c: 37:     value_adc = (value_adc << 8) + ADRESL;
  2293  002196  5005               	movf	adc_read10Bits@value_adc^0,w,c
  2294  002198  6E03               	movwf	??_adc_read10Bits^0,c
  2295  00219A  50C3               	movf	195,w,c	;volatile
  2296  00219C  6E05               	movwf	adc_read10Bits@value_adc^0,c
  2297  00219E  C003  F006         	movff	??_adc_read10Bits,adc_read10Bits@value_adc+1
  2298  0021A2                     
  2299                           ;adc_lib.c: 38:     return value_adc;
  2300  0021A2  C005  F001         	movff	adc_read10Bits@value_adc,?_adc_read10Bits
  2301  0021A6  C006  F002         	movff	adc_read10Bits@value_adc+1,?_adc_read10Bits+1
  2302  0021AA  0012               	return		;funcret
  2303  0021AC                     __end_of_adc_read10Bits:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _adc_init10Bits *****************
  2307 ;; Defined at:
  2308 ;;		line 27 in file "adc_lib.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  canal           2    2[COMRAM] int 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;		None
  2313 ;; Return value:  Size  Location     Type
  2314 ;;                  1    wreg      void 
  2315 ;; Registers used:
  2316 ;;		wreg, status,2, status,0, cstack
  2317 ;; Tracked objects:
  2318 ;;		On entry : 0/0
  2319 ;;		On exit  : 0/0
  2320 ;;		Unchanged: 0/0
  2321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2322 ;;      Params:         2       0       0       0       0       0       0       0       0
  2323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2325 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2326 ;;Total ram usage:        2 bytes
  2327 ;; Hardware stack levels used: 1
  2328 ;; Hardware stack levels required when called: 1
  2329 ;; This function calls:
  2330 ;;		_adc_config
  2331 ;; This function is called by:
  2332 ;;		_sensor_temperatura
  2333 ;;		_sensor_luz
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           	psect	text9
  2338  0021FC                     __ptext9:
  2339                           	callstack 0
  2340  0021FC                     _adc_init10Bits:
  2341                           	callstack 28
  2342  0021FC                     
  2343                           ;adc_lib.c: 29:     adc_config(canal);
  2344  0021FC  C003  F001         	movff	adc_init10Bits@canal,adc_config@canal
  2345  002200  C004  F002         	movff	adc_init10Bits@canal+1,adc_config@canal+1
  2346  002204  EC0A  F010         	call	_adc_config	;wreg free
  2347  002208                     
  2348                           ;adc_lib.c: 30:     ADCON2bits.ADFM = 1;
  2349  002208  8EC0               	bsf	192,7,c	;volatile
  2350  00220A  0012               	return		;funcret
  2351  00220C                     __end_of_adc_init10Bits:
  2352                           	callstack 0
  2353                           
  2354 ;; *************** function _adc_config *****************
  2355 ;; Defined at:
  2356 ;;		line 18 in file "adc_lib.c"
  2357 ;; Parameters:    Size  Location     Type
  2358 ;;  canal           2    0[COMRAM] int 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;		None
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         2       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used: 1
  2376 ;; This function calls:
  2377 ;;		Nothing
  2378 ;; This function is called by:
  2379 ;;		_adc_init10Bits
  2380 ;;		_adc_init8Bits
  2381 ;; This function uses a non-reentrant model
  2382 ;;
  2383                           
  2384                           	psect	text10
  2385  002014                     __ptext10:
  2386                           	callstack 0
  2387  002014                     _adc_config:
  2388                           	callstack 28
  2389  002014                     
  2390                           ;adc_lib.c: 19:     ADCON1bits.PCFG = 0b1101;
  2391  002014  50C1               	movf	193,w,c	;volatile
  2392  002016  0BF0               	andlw	-16
  2393  002018  090D               	iorlw	13
  2394  00201A  6EC1               	movwf	193,c	;volatile
  2395                           
  2396                           ;adc_lib.c: 20:     ADCON1bits.VCFG = 0b00;
  2397  00201C  0ECF               	movlw	-49
  2398  00201E  16C1               	andwf	193,f,c	;volatile
  2399  002020                     
  2400                           ;adc_lib.c: 21:     if(canal == 0) { ADCON0bits.CHS = 0b0000; } else{ ADCON0bits.CHS = 0
      +                          b0001;};
  2401  002020  5001               	movf	adc_config@canal^0,w,c
  2402  002022  1002               	iorwf	(adc_config@canal+1)^0,w,c
  2403  002024  A4D8               	btfss	status,2,c
  2404  002026  EF17  F010         	goto	u1651
  2405  00202A  EF19  F010         	goto	u1650
  2406  00202E                     u1651:
  2407  00202E  EF1D  F010         	goto	l2261
  2408  002032                     u1650:
  2409  002032  0EC3               	movlw	-61
  2410  002034  16C2               	andwf	194,f,c	;volatile
  2411  002036  EF21  F010         	goto	l112
  2412  00203A                     l2261:
  2413  00203A  50C2               	movf	194,w,c	;volatile
  2414  00203C  0BC3               	andlw	-61
  2415  00203E  0904               	iorlw	4
  2416  002040  6EC2               	movwf	194,c	;volatile
  2417  002042                     l112:
  2418                           
  2419                           ;adc_lib.c: 22:     ADCON2bits.ACQT = 0b010;
  2420  002042  50C0               	movf	192,w,c	;volatile
  2421  002044  0BC7               	andlw	-57
  2422  002046  0910               	iorlw	16
  2423  002048  6EC0               	movwf	192,c	;volatile
  2424                           
  2425                           ;adc_lib.c: 23:     ADCON2bits.ADCS = 0b001;
  2426  00204A  50C0               	movf	192,w,c	;volatile
  2427  00204C  0BF8               	andlw	-8
  2428  00204E  0901               	iorlw	1
  2429  002050  6EC0               	movwf	192,c	;volatile
  2430  002052                     
  2431                           ;adc_lib.c: 24:     ADCON0bits.ADON = 1;
  2432  002052  80C2               	bsf	194,0,c	;volatile
  2433  002054  0012               	return		;funcret
  2434  002056                     __end_of_adc_config:
  2435                           	callstack 0
  2436                           
  2437 ;; *************** function ___wmul *****************
  2438 ;; Defined at:
  2439 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2440 ;; Parameters:    Size  Location     Type
  2441 ;;  multiplier      2    0[COMRAM] unsigned int 
  2442 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2443 ;; Auto vars:     Size  Location     Type
  2444 ;;  product         2    4[COMRAM] unsigned int 
  2445 ;; Return value:  Size  Location     Type
  2446 ;;                  2    0[COMRAM] unsigned int 
  2447 ;; Registers used:
  2448 ;;		wreg, status,2, status,0, prodl, prodh
  2449 ;; Tracked objects:
  2450 ;;		On entry : 0/0
  2451 ;;		On exit  : 0/0
  2452 ;;		Unchanged: 0/0
  2453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2454 ;;      Params:         4       0       0       0       0       0       0       0       0
  2455 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2457 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2458 ;;Total ram usage:        6 bytes
  2459 ;; Hardware stack levels used: 1
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_sensor_luz
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           	psect	text11
  2468  0021AC                     __ptext11:
  2469                           	callstack 0
  2470  0021AC                     ___wmul:
  2471                           	callstack 29
  2472  0021AC  5001               	movf	___wmul@multiplier^0,w,c
  2473  0021AE  0203               	mulwf	___wmul@multiplicand^0,c
  2474  0021B0  CFF3 F005          	movff	prodl,___wmul@product
  2475  0021B4  CFF4 F006          	movff	prodh,___wmul@product+1
  2476  0021B8  5001               	movf	___wmul@multiplier^0,w,c
  2477  0021BA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2478  0021BC  50F3               	movf	243,w,c
  2479  0021BE  2606               	addwf	(___wmul@product+1)^0,f,c
  2480  0021C0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2481  0021C2  0203               	mulwf	___wmul@multiplicand^0,c
  2482  0021C4  50F3               	movf	243,w,c
  2483  0021C6  2606               	addwf	(___wmul@product+1)^0,f,c
  2484  0021C8  C005  F001         	movff	___wmul@product,?___wmul
  2485  0021CC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2486  0021D0  0012               	return		;funcret
  2487  0021D2                     __end_of___wmul:
  2488                           	callstack 0
  2489                           
  2490 ;; *************** function ___lwdiv *****************
  2491 ;; Defined at:
  2492 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2493 ;; Parameters:    Size  Location     Type
  2494 ;;  dividend        2    6[COMRAM] unsigned int 
  2495 ;;  divisor         2    8[COMRAM] unsigned int 
  2496 ;; Auto vars:     Size  Location     Type
  2497 ;;  quotient        2   10[COMRAM] unsigned int 
  2498 ;;  counter         1   12[COMRAM] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  2    6[COMRAM] unsigned int 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2508 ;;      Params:         4       0       0       0       0       0       0       0       0
  2509 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2510 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2511 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2512 ;;Total ram usage:        7 bytes
  2513 ;; Hardware stack levels used: 1
  2514 ;; This function calls:
  2515 ;;		Nothing
  2516 ;; This function is called by:
  2517 ;;		_sensor_luz
  2518 ;; This function uses a non-reentrant model
  2519 ;;
  2520                           
  2521                           	psect	text12
  2522  001CD6                     __ptext12:
  2523                           	callstack 0
  2524  001CD6                     ___lwdiv:
  2525                           	callstack 29
  2526  001CD6  0E00               	movlw	0
  2527  001CD8  6E0C               	movwf	(___lwdiv@quotient+1)^0,c
  2528  001CDA  0E00               	movlw	0
  2529  001CDC  6E0B               	movwf	___lwdiv@quotient^0,c
  2530  001CDE  5009               	movf	___lwdiv@divisor^0,w,c
  2531  001CE0  100A               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2532  001CE2  B4D8               	btfsc	status,2,c
  2533  001CE4  EF76  F00E         	goto	u2021
  2534  001CE8  EF78  F00E         	goto	u2020
  2535  001CEC                     u2021:
  2536  001CEC  EFA0  F00E         	goto	l808
  2537  001CF0                     u2020:
  2538  001CF0  0E01               	movlw	1
  2539  001CF2  6E0D               	movwf	___lwdiv@counter^0,c
  2540  001CF4  EF80  F00E         	goto	l2555
  2541  001CF8                     l2553:
  2542  001CF8  90D8               	bcf	status,0,c
  2543  001CFA  3609               	rlcf	___lwdiv@divisor^0,f,c
  2544  001CFC  360A               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2545  001CFE  2A0D               	incf	___lwdiv@counter^0,f,c
  2546  001D00                     l2555:
  2547  001D00  AE0A               	btfss	(___lwdiv@divisor+1)^0,7,c
  2548  001D02  EF85  F00E         	goto	u2031
  2549  001D06  EF87  F00E         	goto	u2030
  2550  001D0A                     u2031:
  2551  001D0A  EF7C  F00E         	goto	l2553
  2552  001D0E                     u2030:
  2553  001D0E                     l2557:
  2554  001D0E  90D8               	bcf	status,0,c
  2555  001D10  360B               	rlcf	___lwdiv@quotient^0,f,c
  2556  001D12  360C               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2557  001D14  5009               	movf	___lwdiv@divisor^0,w,c
  2558  001D16  5C07               	subwf	___lwdiv@dividend^0,w,c
  2559  001D18  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2560  001D1A  5808               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2561  001D1C  A0D8               	btfss	status,0,c
  2562  001D1E  EF93  F00E         	goto	u2041
  2563  001D22  EF95  F00E         	goto	u2040
  2564  001D26                     u2041:
  2565  001D26  EF9A  F00E         	goto	l2565
  2566  001D2A                     u2040:
  2567  001D2A  5009               	movf	___lwdiv@divisor^0,w,c
  2568  001D2C  5E07               	subwf	___lwdiv@dividend^0,f,c
  2569  001D2E  500A               	movf	(___lwdiv@divisor+1)^0,w,c
  2570  001D30  5A08               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2571  001D32  800B               	bsf	___lwdiv@quotient^0,0,c
  2572  001D34                     l2565:
  2573  001D34  90D8               	bcf	status,0,c
  2574  001D36  320A               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2575  001D38  3209               	rrcf	___lwdiv@divisor^0,f,c
  2576  001D3A  2E0D               	decfsz	___lwdiv@counter^0,f,c
  2577  001D3C  EF87  F00E         	goto	l2557
  2578  001D40                     l808:
  2579  001D40  C00B  F007         	movff	___lwdiv@quotient,?___lwdiv
  2580  001D44  C00C  F008         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2581  001D48  0012               	return		;funcret
  2582  001D4A                     __end_of___lwdiv:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function _sensor_distancia *****************
  2586 ;; Defined at:
  2587 ;;		line 3 in file "sensores.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;		None
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;		None
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  2    4[COMRAM] int 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0, cstack
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         2       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        2 bytes
  2606 ;; Hardware stack levels used: 1
  2607 ;; Hardware stack levels required when called: 1
  2608 ;; This function calls:
  2609 ;;		_init_ports
  2610 ;;		_obtener_distancia
  2611 ;; This function is called by:
  2612 ;;		_main
  2613 ;; This function uses a non-reentrant model
  2614 ;;
  2615                           
  2616                           	psect	text13
  2617  0019C6                     __ptext13:
  2618                           	callstack 0
  2619  0019C6                     _sensor_distancia:
  2620                           	callstack 29
  2621  0019C6                     
  2622                           ;sensores.c: 4:     init_ports();
  2623  0019C6  EC06  F011         	call	_init_ports	;wreg free
  2624  0019CA                     
  2625                           ;sensores.c: 5:     val_distancia = obtener_distancia();
  2626  0019CA  EC7E  F00F         	call	_obtener_distancia	;wreg free
  2627  0019CE  C001  F0F4         	movff	?_obtener_distancia,_val_distancia
  2628  0019D2  C002  F0F5         	movff	?_obtener_distancia+1,_val_distancia+1
  2629  0019D6                     
  2630                           ;sensores.c: 6:     if (val_distancia <= 38 && val_distancia > 12)
  2631  0019D6  0100               	movlb	0	; () banked
  2632  0019D8  51F5               	movf	(_val_distancia+1)& (0+255),w,b
  2633  0019DA  E107               	bnz	u2191
  2634  0019DC  0E27               	movlw	39
  2635  0019DE  5DF4               	subwf	_val_distancia& (0+255),w,b
  2636  0019E0  B0D8               	btfsc	status,0,c
  2637  0019E2  EFF5  F00C         	goto	u2191
  2638  0019E6  EFF7  F00C         	goto	u2190
  2639  0019EA                     u2191:
  2640  0019EA  EF08  F00D         	goto	l2655
  2641  0019EE                     u2190:
  2642  0019EE                     
  2643                           ; BSR set to: 0
  2644  0019EE  51F5               	movf	(_val_distancia+1)& (0+255),w,b
  2645  0019F0  E109               	bnz	u2200
  2646  0019F2  0E0D               	movlw	13
  2647  0019F4  5DF4               	subwf	_val_distancia& (0+255),w,b
  2648  0019F6  A0D8               	btfss	status,0,c
  2649  0019F8  EF00  F00D         	goto	u2201
  2650  0019FC  EF02  F00D         	goto	u2200
  2651  001A00                     u2201:
  2652  001A00  EF08  F00D         	goto	l2655
  2653  001A04                     u2200:
  2654  001A04                     
  2655                           ; BSR set to: 0
  2656                           ;sensores.c: 7:         val_distancia += 2;
  2657  001A04  0E02               	movlw	2
  2658  001A06  27F4               	addwf	_val_distancia& (0+255),f,b
  2659  001A08  0E00               	movlw	0
  2660  001A0A  23F5               	addwfc	(_val_distancia+1)& (0+255),f,b
  2661  001A0C  EF27  F00D         	goto	l2663
  2662  001A10                     l2655:
  2663                           
  2664                           ; BSR set to: 0
  2665  001A10  51F5               	movf	(_val_distancia+1)& (0+255),w,b
  2666  001A12  E109               	bnz	u2210
  2667  001A14  0E27               	movlw	39
  2668  001A16  5DF4               	subwf	_val_distancia& (0+255),w,b
  2669  001A18  A0D8               	btfss	status,0,c
  2670  001A1A  EF11  F00D         	goto	u2211
  2671  001A1E  EF13  F00D         	goto	u2210
  2672  001A22                     u2211:
  2673  001A22  EF19  F00D         	goto	l2659
  2674  001A26                     u2210:
  2675  001A26                     
  2676                           ; BSR set to: 0
  2677                           ;sensores.c: 9:         val_distancia += 3;
  2678  001A26  0E03               	movlw	3
  2679  001A28  27F4               	addwf	_val_distancia& (0+255),f,b
  2680  001A2A  0E00               	movlw	0
  2681  001A2C  23F5               	addwfc	(_val_distancia+1)& (0+255),f,b
  2682  001A2E  EF27  F00D         	goto	l2663
  2683  001A32                     l2659:
  2684                           
  2685                           ; BSR set to: 0
  2686  001A32  51F5               	movf	(_val_distancia+1)& (0+255),w,b
  2687  001A34  E107               	bnz	u2221
  2688  001A36  0E0D               	movlw	13
  2689  001A38  5DF4               	subwf	_val_distancia& (0+255),w,b
  2690  001A3A  B0D8               	btfsc	status,0,c
  2691  001A3C  EF22  F00D         	goto	u2221
  2692  001A40  EF24  F00D         	goto	u2220
  2693  001A44                     u2221:
  2694  001A44  EF27  F00D         	goto	l2663
  2695  001A48                     u2220:
  2696  001A48                     
  2697                           ; BSR set to: 0
  2698                           ;sensores.c: 11:         val_distancia--;
  2699  001A48  07F4               	decf	_val_distancia& (0+255),f,b
  2700  001A4A  A0D8               	btfss	status,0,c
  2701  001A4C  07F5               	decf	(_val_distancia+1)& (0+255),f,b
  2702  001A4E                     l2663:
  2703                           
  2704                           ; BSR set to: 0
  2705                           ;sensores.c: 12:     return (int) val_distancia;
  2706  001A4E  C0F4  F005         	movff	_val_distancia,?_sensor_distancia
  2707  001A52  C0F5  F006         	movff	_val_distancia+1,?_sensor_distancia+1
  2708  001A56                     
  2709                           ; BSR set to: 0
  2710  001A56  0012               	return		;funcret
  2711  001A58                     __end_of_sensor_distancia:
  2712                           	callstack 0
  2713                           
  2714 ;; *************** function _obtener_distancia *****************
  2715 ;; Defined at:
  2716 ;;		line 23 in file "sensores.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;		None
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  cm              2    2[COMRAM] unsigned int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;                  2    0[COMRAM] unsigned int 
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2730 ;;      Params:         2       0       0       0       0       0       0       0       0
  2731 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2733 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2734 ;;Total ram usage:        4 bytes
  2735 ;; Hardware stack levels used: 1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_sensor_distancia
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text14
  2744  001EFC                     __ptext14:
  2745                           	callstack 0
  2746  001EFC                     _obtener_distancia:
  2747                           	callstack 29
  2748  001EFC                     
  2749                           ;sensores.c: 24:     unsigned int cm = 0;
  2750  001EFC  0E00               	movlw	0
  2751  001EFE  6E04               	movwf	(obtener_distancia@cm+1)^0,c
  2752  001F00  0E00               	movlw	0
  2753  001F02  6E03               	movwf	obtener_distancia@cm^0,c
  2754  001F04                     
  2755                           ;sensores.c: 25:     LATCbits.LATC0 = 1;
  2756  001F04  808B               	bsf	139,0,c	;volatile
  2757  001F06                     
  2758                           ;sensores.c: 26:     _delay((unsigned long)((10)*(8000000/4000000.0)));
  2759  001F06  0E06               	movlw	6
  2760  001F08                     u2387:
  2761  001F08  2EE8               	decfsz	wreg,f,c
  2762  001F0A  D7FE               	bra	u2387
  2763  001F0C  D000               	nop2	
  2764  001F0E                     
  2765                           ;sensores.c: 27:     LATCbits.LATC0 = 0;
  2766  001F0E  908B               	bcf	139,0,c	;volatile
  2767  001F10                     l217:
  2768                           
  2769                           ;sensores.c: 28:     while (PORTCbits.RC1 == 0) {
  2770  001F10  A282               	btfss	130,1,c	;volatile
  2771  001F12  EF8D  F00F         	goto	u1741
  2772  001F16  EF8F  F00F         	goto	u1740
  2773  001F1A                     u1741:
  2774  001F1A  EF88  F00F         	goto	l217
  2775  001F1E                     u1740:
  2776  001F1E  EF97  F00F         	goto	l2365
  2777  001F22                     l2361:
  2778                           
  2779                           ;sensores.c: 31:         cm++;
  2780  001F22  4A03               	infsnz	obtener_distancia@cm^0,f,c
  2781  001F24  2A04               	incf	(obtener_distancia@cm+1)^0,f,c
  2782  001F26                     
  2783                           ;sensores.c: 32:         _delay((unsigned long)((58)*(8000000/4000000.0)));
  2784  001F26  0E26               	movlw	38
  2785  001F28                     u2397:
  2786  001F28  2EE8               	decfsz	wreg,f,c
  2787  001F2A  D7FE               	bra	u2397
  2788  001F2C  D000               	nop2	
  2789  001F2E                     l2365:
  2790                           
  2791                           ;sensores.c: 30:     while (PORTCbits.RC1 == 1) {
  2792  001F2E  B282               	btfsc	130,1,c	;volatile
  2793  001F30  EF9C  F00F         	goto	u1751
  2794  001F34  EF9E  F00F         	goto	u1750
  2795  001F38                     u1751:
  2796  001F38  EF91  F00F         	goto	l2361
  2797  001F3C                     u1750:
  2798  001F3C                     
  2799                           ;sensores.c: 34:     return cm;
  2800  001F3C  C003  F001         	movff	obtener_distancia@cm,?_obtener_distancia
  2801  001F40  C004  F002         	movff	obtener_distancia@cm+1,?_obtener_distancia+1
  2802  001F44  0012               	return		;funcret
  2803  001F46                     __end_of_obtener_distancia:
  2804                           	callstack 0
  2805                           
  2806 ;; *************** function _init_ports *****************
  2807 ;; Defined at:
  2808 ;;		line 15 in file "sensores.c"
  2809 ;; Parameters:    Size  Location     Type
  2810 ;;		None
  2811 ;; Auto vars:     Size  Location     Type
  2812 ;;		None
  2813 ;; Return value:  Size  Location     Type
  2814 ;;                  1    wreg      void 
  2815 ;; Registers used:
  2816 ;;		wreg, status,2
  2817 ;; Tracked objects:
  2818 ;;		On entry : 0/0
  2819 ;;		On exit  : 0/0
  2820 ;;		Unchanged: 0/0
  2821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2822 ;;      Params:         0       0       0       0       0       0       0       0       0
  2823 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2824 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2825 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2826 ;;Total ram usage:        0 bytes
  2827 ;; Hardware stack levels used: 1
  2828 ;; This function calls:
  2829 ;;		Nothing
  2830 ;; This function is called by:
  2831 ;;		_sensor_distancia
  2832 ;; This function uses a non-reentrant model
  2833 ;;
  2834                           
  2835                           	psect	text15
  2836  00220C                     __ptext15:
  2837                           	callstack 0
  2838  00220C                     _init_ports:
  2839                           	callstack 29
  2840  00220C                     
  2841                           ;sensores.c: 16:     ADCON1bits.PCFG = 0xF;
  2842  00220C  0E0F               	movlw	15
  2843  00220E  12C1               	iorwf	193,f,c	;volatile
  2844  002210                     
  2845                           ;sensores.c: 17:     LATCbits.LATC1 = 0;
  2846  002210  928B               	bcf	139,1,c	;volatile
  2847  002212                     
  2848                           ;sensores.c: 18:     LATCbits.LATC0 = 0;
  2849  002212  908B               	bcf	139,0,c	;volatile
  2850  002214                     
  2851                           ;sensores.c: 19:     TRISCbits.RC1 = 1;
  2852  002214  8294               	bsf	148,1,c	;volatile
  2853  002216                     
  2854                           ;sensores.c: 20:     TRISCbits.RC0 = 0;
  2855  002216  9094               	bcf	148,0,c	;volatile
  2856  002218  0012               	return		;funcret
  2857  00221A                     __end_of_init_ports:
  2858                           	callstack 0
  2859                           
  2860 ;; *************** function _init_leds *****************
  2861 ;; Defined at:
  2862 ;;		line 4 in file "Leds.c"
  2863 ;; Parameters:    Size  Location     Type
  2864 ;;		None
  2865 ;; Auto vars:     Size  Location     Type
  2866 ;;		None
  2867 ;; Return value:  Size  Location     Type
  2868 ;;                  1    wreg      void 
  2869 ;; Registers used:
  2870 ;;		None
  2871 ;; Tracked objects:
  2872 ;;		On entry : 0/0
  2873 ;;		On exit  : 0/0
  2874 ;;		Unchanged: 0/0
  2875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2876 ;;      Params:         0       0       0       0       0       0       0       0       0
  2877 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2878 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2879 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2880 ;;Total ram usage:        0 bytes
  2881 ;; Hardware stack levels used: 1
  2882 ;; This function calls:
  2883 ;;		Nothing
  2884 ;; This function is called by:
  2885 ;;		_main
  2886 ;; This function uses a non-reentrant model
  2887 ;;
  2888                           
  2889                           	psect	text16
  2890  00221A                     __ptext16:
  2891                           	callstack 0
  2892  00221A                     _init_leds:
  2893                           	callstack 30
  2894  00221A                     
  2895                           ;Leds.c: 6:     TRISB6 = 0;
  2896  00221A  9C93               	bcf	3987,6,c	;volatile
  2897                           
  2898                           ;Leds.c: 7:     TRISB5 = 0;
  2899  00221C  9A93               	bcf	3987,5,c	;volatile
  2900                           
  2901                           ;Leds.c: 8:     TRISB3 = 0;
  2902  00221E  9693               	bcf	3987,3,c	;volatile
  2903                           
  2904                           ;Leds.c: 9:     TRISB4 = 0;
  2905  002220  9893               	bcf	3987,4,c	;volatile
  2906  002222  0012               	return		;funcret
  2907  002224                     __end_of_init_leds:
  2908                           	callstack 0
  2909                           
  2910 ;; *************** function _iniciar_pic *****************
  2911 ;; Defined at:
  2912 ;;		line 101 in file "Principal.c"
  2913 ;; Parameters:    Size  Location     Type
  2914 ;;		None
  2915 ;; Auto vars:     Size  Location     Type
  2916 ;;		None
  2917 ;; Return value:  Size  Location     Type
  2918 ;;                  1    wreg      void 
  2919 ;; Registers used:
  2920 ;;		wreg, status,2
  2921 ;; Tracked objects:
  2922 ;;		On entry : 0/0
  2923 ;;		On exit  : 0/0
  2924 ;;		Unchanged: 0/0
  2925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2926 ;;      Params:         0       0       0       0       0       0       0       0       0
  2927 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2929 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2930 ;;Total ram usage:        0 bytes
  2931 ;; Hardware stack levels used: 1
  2932 ;; This function calls:
  2933 ;;		Nothing
  2934 ;; This function is called by:
  2935 ;;		_main
  2936 ;; This function uses a non-reentrant model
  2937 ;;
  2938                           
  2939                           	psect	text17
  2940  0021E8                     __ptext17:
  2941                           	callstack 0
  2942  0021E8                     _iniciar_pic:
  2943                           	callstack 30
  2944  0021E8                     
  2945                           ;Principal.c: 102:     OSCCONbits.IRCF = 0b111;
  2946  0021E8  0E70               	movlw	112
  2947  0021EA  12D3               	iorwf	211,f,c	;volatile
  2948                           
  2949                           ;Principal.c: 103:     OSCCONbits.SCS = 0b10;
  2950  0021EC  50D3               	movf	211,w,c	;volatile
  2951  0021EE  0BFC               	andlw	-4
  2952  0021F0  0902               	iorlw	2
  2953  0021F2  6ED3               	movwf	211,c	;volatile
  2954                           
  2955                           ;Principal.c: 104:     OSCCON = 0x72;
  2956  0021F4  0E72               	movlw	114
  2957  0021F6  6ED3               	movwf	211,c	;volatile
  2958  0021F8                     
  2959                           ;Principal.c: 105:     RBPU = 0;
  2960  0021F8  9EF1               	bcf	4081,7,c	;volatile
  2961  0021FA  0012               	return		;funcret
  2962  0021FC                     __end_of_iniciar_pic:
  2963                           	callstack 0
  2964                           
  2965 ;; *************** function _iniciar_emoticones *****************
  2966 ;; Defined at:
  2967 ;;		line 110 in file "Principal.c"
  2968 ;; Parameters:    Size  Location     Type
  2969 ;;		None
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  todo_bien       8   30[COMRAM] unsigned char [8]
  2972 ;;  luz             8   22[COMRAM] unsigned char [8]
  2973 ;;  distancia       8   14[COMRAM] unsigned char [8]
  2974 ;;  temperatura     8    6[COMRAM] unsigned char [8]
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  1    wreg      void 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2984 ;;      Params:         0       0       0       0       0       0       0       0       0
  2985 ;;      Locals:        32       0       0       0       0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2987 ;;      Totals:        32       0       0       0       0       0       0       0       0
  2988 ;;Total ram usage:       32 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 2
  2991 ;; This function calls:
  2992 ;;		_LCD_Custom_Char
  2993 ;; This function is called by:
  2994 ;;		_main
  2995 ;; This function uses a non-reentrant model
  2996 ;;
  2997                           
  2998                           	psect	text18
  2999  001A58                     __ptext18:
  3000                           	callstack 0
  3001  001A58                     _iniciar_emoticones:
  3002                           	callstack 28
  3003  001A58                     
  3004                           ;Principal.c: 112:     unsigned char temperatura[8] = {
  3005  001A58  EE20  F0BC         	lfsr	2,iniciar_emoticones@F3571
  3006  001A5C  EE10  F007         	lfsr	1,iniciar_emoticones@temperatura
  3007  001A60  0E07               	movlw	7
  3008  001A62                     u2151:
  3009  001A62  CFDB FFE3          	movff	plusw2,plusw1
  3010  001A66  06E8               	decf	wreg,f,c
  3011  001A68  E2FC               	bc	u2151
  3012                           
  3013                           ;Principal.c: 124:     unsigned char distancia[8] = {
  3014  001A6A  EE20  F0B4         	lfsr	2,iniciar_emoticones@F3573
  3015  001A6E  EE10  F00F         	lfsr	1,iniciar_emoticones@distancia
  3016  001A72  0E07               	movlw	7
  3017  001A74                     u2161:
  3018  001A74  CFDB FFE3          	movff	plusw2,plusw1
  3019  001A78  06E8               	decf	wreg,f,c
  3020  001A7A  E2FC               	bc	u2161
  3021                           
  3022                           ;Principal.c: 135:     unsigned char luz[8] = {
  3023  001A7C  EE20  F0AC         	lfsr	2,iniciar_emoticones@F3575
  3024  001A80  EE10  F017         	lfsr	1,iniciar_emoticones@luz
  3025  001A84  0E07               	movlw	7
  3026  001A86                     u2171:
  3027  001A86  CFDB FFE3          	movff	plusw2,plusw1
  3028  001A8A  06E8               	decf	wreg,f,c
  3029  001A8C  E2FC               	bc	u2171
  3030                           
  3031                           ;Principal.c: 146:     unsigned char todo_bien[8] = {
  3032  001A8E  EE20  F0A4         	lfsr	2,iniciar_emoticones@F3577
  3033  001A92  EE10  F01F         	lfsr	1,iniciar_emoticones@todo_bien
  3034  001A96  0E07               	movlw	7
  3035  001A98                     u2181:
  3036  001A98  CFDB FFE3          	movff	plusw2,plusw1
  3037  001A9C  06E8               	decf	wreg,f,c
  3038  001A9E  E2FC               	bc	u2181
  3039  001AA0                     
  3040                           ;Principal.c: 158:     LCD_Custom_Char(4, todo_bien);
  3041  001AA0  0E1F               	movlw	low iniciar_emoticones@todo_bien
  3042  001AA2  6E03               	movwf	LCD_Custom_Char@msg^0,c
  3043  001AA4  0E00               	movlw	high iniciar_emoticones@todo_bien
  3044  001AA6  6E04               	movwf	(LCD_Custom_Char@msg+1)^0,c
  3045  001AA8  0E04               	movlw	4
  3046  001AAA  ECA3  F00F         	call	_LCD_Custom_Char
  3047  001AAE                     
  3048                           ;Principal.c: 159:     LCD_Custom_Char(5, temperatura);
  3049  001AAE  0E07               	movlw	low iniciar_emoticones@temperatura
  3050  001AB0  6E03               	movwf	LCD_Custom_Char@msg^0,c
  3051  001AB2  0E00               	movlw	high iniciar_emoticones@temperatura
  3052  001AB4  6E04               	movwf	(LCD_Custom_Char@msg+1)^0,c
  3053  001AB6  0E05               	movlw	5
  3054  001AB8  ECA3  F00F         	call	_LCD_Custom_Char
  3055  001ABC                     
  3056                           ;Principal.c: 160:     LCD_Custom_Char(6, distancia);
  3057  001ABC  0E0F               	movlw	low iniciar_emoticones@distancia
  3058  001ABE  6E03               	movwf	LCD_Custom_Char@msg^0,c
  3059  001AC0  0E00               	movlw	high iniciar_emoticones@distancia
  3060  001AC2  6E04               	movwf	(LCD_Custom_Char@msg+1)^0,c
  3061  001AC4  0E06               	movlw	6
  3062  001AC6  ECA3  F00F         	call	_LCD_Custom_Char
  3063  001ACA                     
  3064                           ;Principal.c: 161:     LCD_Custom_Char(7, luz);
  3065  001ACA  0E17               	movlw	low iniciar_emoticones@luz
  3066  001ACC  6E03               	movwf	LCD_Custom_Char@msg^0,c
  3067  001ACE  0E00               	movlw	high iniciar_emoticones@luz
  3068  001AD0  6E04               	movwf	(LCD_Custom_Char@msg+1)^0,c
  3069  001AD2  0E07               	movlw	7
  3070  001AD4  ECA3  F00F         	call	_LCD_Custom_Char
  3071  001AD8  0012               	return		;funcret
  3072  001ADA                     __end_of_iniciar_emoticones:
  3073                           	callstack 0
  3074                           
  3075 ;; *************** function _LCD_Custom_Char *****************
  3076 ;; Defined at:
  3077 ;;		line 90 in file "LCD.c"
  3078 ;; Parameters:    Size  Location     Type
  3079 ;;  loc             1    wreg     unsigned char 
  3080 ;;  msg             2    2[COMRAM] PTR unsigned char 
  3081 ;;		 -> iniciar_emoticones@todo_bien(8), iniciar_emoticones@luz(8), iniciar_emoticones@distancia(8), iniciar_emoticones@
      +temperatura(8), 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  loc             1    4[COMRAM] unsigned char 
  3084 ;;  i               1    5[COMRAM] unsigned char 
  3085 ;; Return value:  Size  Location     Type
  3086 ;;                  1    wreg      void 
  3087 ;; Registers used:
  3088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3089 ;; Tracked objects:
  3090 ;;		On entry : 0/0
  3091 ;;		On exit  : 0/0
  3092 ;;		Unchanged: 0/0
  3093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3094 ;;      Params:         2       0       0       0       0       0       0       0       0
  3095 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3096 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3097 ;;      Totals:         4       0       0       0       0       0       0       0       0
  3098 ;;Total ram usage:        4 bytes
  3099 ;; Hardware stack levels used: 1
  3100 ;; Hardware stack levels required when called: 1
  3101 ;; This function calls:
  3102 ;;		_LCD_Char
  3103 ;;		_LCD_Command
  3104 ;; This function is called by:
  3105 ;;		_iniciar_emoticones
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text19
  3110  001F46                     __ptext19:
  3111                           	callstack 0
  3112  001F46                     _LCD_Custom_Char:
  3113                           	callstack 28
  3114                           
  3115                           ;incstack = 0
  3116                           ;LCD_Custom_Char@loc stored from wreg
  3117  001F46  6E05               	movwf	LCD_Custom_Char@loc^0,c
  3118  001F48                     
  3119                           ;LCD.c: 92:     unsigned char i;;LCD.c: 93:     if (loc < 8) {
  3120  001F48  0E08               	movlw	8
  3121  001F4A  6005               	cpfslt	LCD_Custom_Char@loc^0,c
  3122  001F4C  EFAA  F00F         	goto	u1701
  3123  001F50  EFAC  F00F         	goto	u1700
  3124  001F54                     u1701:
  3125  001F54  EFC6  F00F         	goto	l173
  3126  001F58                     u1700:
  3127  001F58                     
  3128                           ;LCD.c: 94:         LCD_Command(0x40 + (loc * 8));
  3129  001F58  5005               	movf	LCD_Custom_Char@loc^0,w,c
  3130  001F5A  0D08               	mullw	8
  3131  001F5C  50F3               	movf	243,w,c
  3132  001F5E  0F40               	addlw	64
  3133  001F60  EC56  F00F         	call	_LCD_Command
  3134  001F64                     
  3135                           ;LCD.c: 95:         for (i = 0; i < 8; i++)
  3136  001F64  0E00               	movlw	0
  3137  001F66  6E06               	movwf	LCD_Custom_Char@i^0,c
  3138  001F68                     l2291:
  3139                           
  3140                           ;LCD.c: 96:             LCD_Char(msg[i]);
  3141  001F68  5006               	movf	LCD_Custom_Char@i^0,w,c
  3142  001F6A  2403               	addwf	LCD_Custom_Char@msg^0,w,c
  3143  001F6C  6ED9               	movwf	fsr2l,c
  3144  001F6E  0E00               	movlw	0
  3145  001F70  2004               	addwfc	(LCD_Custom_Char@msg+1)^0,w,c
  3146  001F72  6EDA               	movwf	fsr2h,c
  3147  001F74  50DF               	movf	indf2,w,c
  3148  001F76  EC2E  F00F         	call	_LCD_Char
  3149  001F7A  2A06               	incf	LCD_Custom_Char@i^0,f,c
  3150  001F7C  0E07               	movlw	7
  3151  001F7E  6406               	cpfsgt	LCD_Custom_Char@i^0,c
  3152  001F80  EFC4  F00F         	goto	u1711
  3153  001F84  EFC6  F00F         	goto	u1710
  3154  001F88                     u1711:
  3155  001F88  EFB4  F00F         	goto	l2291
  3156  001F8C                     u1710:
  3157  001F8C                     l173:
  3158  001F8C  0012               	return		;funcret
  3159  001F8E                     __end_of_LCD_Custom_Char:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _inicializar_lcd *****************
  3163 ;; Defined at:
  3164 ;;		line 3 in file "LCD.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;		None
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3180 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3181 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3182 ;;Total ram usage:        1 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 1
  3185 ;; This function calls:
  3186 ;;		_LCD_Command
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text20
  3193  00214C                     __ptext20:
  3194                           	callstack 0
  3195  00214C                     _inicializar_lcd:
  3196                           	callstack 29
  3197  00214C                     
  3198                           ;LCD.c: 4:     TRISD = 0;
  3199  00214C  0E00               	movlw	0
  3200  00214E  6E95               	movwf	149,c	;volatile
  3201  002150                     
  3202                           ;LCD.c: 5:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3203  002150  0E27               	movlw	39
  3204  002152  6E03               	movwf	??_inicializar_lcd^0,c
  3205  002154  0EF5               	movlw	245
  3206  002156                     u2407:
  3207  002156  2EE8               	decfsz	wreg,f,c
  3208  002158  D7FE               	bra	u2407
  3209  00215A  2E03               	decfsz	??_inicializar_lcd^0,f,c
  3210  00215C  D7FC               	bra	u2407
  3211  00215E  F000               	nop	
  3212  002160                     
  3213                           ;LCD.c: 6:     LCD_Command(0x02);
  3214  002160  0E02               	movlw	2
  3215  002162  EC56  F00F         	call	_LCD_Command
  3216  002166                     
  3217                           ;LCD.c: 8:     LCD_Command(0x28);
  3218  002166  0E28               	movlw	40
  3219  002168  EC56  F00F         	call	_LCD_Command
  3220  00216C                     
  3221                           ;LCD.c: 10:     LCD_Command(0x01);
  3222  00216C  0E01               	movlw	1
  3223  00216E  EC56  F00F         	call	_LCD_Command
  3224  002172                     
  3225                           ;LCD.c: 11:     LCD_Command(0x0c);
  3226  002172  0E0C               	movlw	12
  3227  002174  EC56  F00F         	call	_LCD_Command
  3228  002178                     
  3229                           ;LCD.c: 12:     LCD_Command(0x06);
  3230  002178  0E06               	movlw	6
  3231  00217A  EC56  F00F         	call	_LCD_Command
  3232  00217E  0012               	return		;funcret
  3233  002180                     __end_of_inicializar_lcd:
  3234                           	callstack 0
  3235                           
  3236 ;; *************** function _imprimir *****************
  3237 ;; Defined at:
  3238 ;;		line 166 in file "Principal.c"
  3239 ;; Parameters:    Size  Location     Type
  3240 ;;  dist            2    8[BANK0 ] int 
  3241 ;;  temp            2   10[BANK0 ] int 
  3242 ;;  luz             2   12[BANK0 ] int 
  3243 ;; Auto vars:     Size  Location     Type
  3244 ;;  aux_luz        16   46[BANK0 ] unsigned char [16]
  3245 ;;  aux_temp       16   30[BANK0 ] unsigned char [16]
  3246 ;;  aux_dist       16   14[BANK0 ] unsigned char [16]
  3247 ;; Return value:  Size  Location     Type
  3248 ;;                  1    wreg      void 
  3249 ;; Registers used:
  3250 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3251 ;; Tracked objects:
  3252 ;;		On entry : 0/0
  3253 ;;		On exit  : 0/0
  3254 ;;		Unchanged: 0/0
  3255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3256 ;;      Params:         0       6       0       0       0       0       0       0       0
  3257 ;;      Locals:         0      48       0       0       0       0       0       0       0
  3258 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3259 ;;      Totals:         2      54       0       0       0       0       0       0       0
  3260 ;;Total ram usage:       56 bytes
  3261 ;; Hardware stack levels used: 1
  3262 ;; Hardware stack levels required when called: 8
  3263 ;; This function calls:
  3264 ;;		_LCD_Clear
  3265 ;;		_LCD_Command
  3266 ;;		_LCD_String_xy
  3267 ;;		_sprintf
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text21
  3274  00167E                     __ptext21:
  3275                           	callstack 0
  3276  00167E                     _imprimir:
  3277                           	callstack 22
  3278  00167E                     
  3279                           ;Principal.c: 169:     LCD_String_xy(0, 0, "D:T:L:");
  3280  00167E  0E00               	movlw	0
  3281  001680  6E05               	movwf	LCD_String_xy@pos^0,c
  3282  001682  0E01               	movlw	low STR_1
  3283  001684  6E06               	movwf	LCD_String_xy@msg^0,c
  3284  001686  0E08               	movlw	high STR_1
  3285  001688  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3286  00168A  0E00               	movlw	0
  3287  00168C  EC6B  F010         	call	_LCD_String_xy
  3288  001690                     
  3289                           ;Principal.c: 171:     char aux_dist[16] = "";
  3290  001690  EE20  F06E         	lfsr	2,imprimir@aux_dist
  3291  001694  0E0F               	movlw	15
  3292  001696                     u2341:
  3293  001696  6ADE               	clrf	postinc2,c
  3294  001698  06E8               	decf	wreg,f,c
  3295  00169A  E2FD               	bc	u2341
  3296  00169C                     
  3297                           ;Principal.c: 172:     sprintf(aux_dist, "%dcm", dist);
  3298  00169C  0E6E               	movlw	low imprimir@aux_dist
  3299  00169E  6E58               	movwf	sprintf@s^0,c
  3300  0016A0  0E00               	movlw	high imprimir@aux_dist
  3301  0016A2  6E59               	movwf	(sprintf@s+1)^0,c
  3302  0016A4  0E08               	movlw	low STR_2
  3303  0016A6  6E5A               	movwf	sprintf@fmt^0,c
  3304  0016A8  0E08               	movlw	high STR_2
  3305  0016AA  6E5B               	movwf	(sprintf@fmt+1)^0,c
  3306  0016AC  C068  F05C         	movff	imprimir@dist,?_sprintf+4
  3307  0016B0  C069  F05D         	movff	imprimir@dist+1,?_sprintf+5
  3308  0016B4  EC05  F00F         	call	_sprintf	;wreg free
  3309  0016B8                     
  3310                           ;Principal.c: 174:     char aux_temp[16] = "";
  3311  0016B8  EE20  F07E         	lfsr	2,imprimir@aux_temp
  3312  0016BC  0E0F               	movlw	15
  3313  0016BE                     u2351:
  3314  0016BE  6ADE               	clrf	postinc2,c
  3315  0016C0  06E8               	decf	wreg,f,c
  3316  0016C2  E2FD               	bc	u2351
  3317  0016C4                     
  3318                           ;Principal.c: 175:     sprintf(aux_temp, "%dG", temp);
  3319  0016C4  0E7E               	movlw	low imprimir@aux_temp
  3320  0016C6  6E58               	movwf	sprintf@s^0,c
  3321  0016C8  0E00               	movlw	high imprimir@aux_temp
  3322  0016CA  6E59               	movwf	(sprintf@s+1)^0,c
  3323  0016CC  0E0D               	movlw	low STR_3
  3324  0016CE  6E5A               	movwf	sprintf@fmt^0,c
  3325  0016D0  0E08               	movlw	high STR_3
  3326  0016D2  6E5B               	movwf	(sprintf@fmt+1)^0,c
  3327  0016D4  C06A  F05C         	movff	imprimir@temp,?_sprintf+4
  3328  0016D8  C06B  F05D         	movff	imprimir@temp+1,?_sprintf+5
  3329  0016DC  EC05  F00F         	call	_sprintf	;wreg free
  3330  0016E0                     
  3331                           ;Principal.c: 177:     char aux_luz[16] = "";
  3332  0016E0  EE20  F08E         	lfsr	2,imprimir@aux_luz
  3333  0016E4  0E0F               	movlw	15
  3334  0016E6                     u2361:
  3335  0016E6  6ADE               	clrf	postinc2,c
  3336  0016E8  06E8               	decf	wreg,f,c
  3337  0016EA  E2FD               	bc	u2361
  3338  0016EC                     
  3339                           ;Principal.c: 178:     sprintf(aux_luz, "%dP", luz);
  3340  0016EC  0E8E               	movlw	low imprimir@aux_luz
  3341  0016EE  6E58               	movwf	sprintf@s^0,c
  3342  0016F0  0E00               	movlw	high imprimir@aux_luz
  3343  0016F2  6E59               	movwf	(sprintf@s+1)^0,c
  3344  0016F4  0E11               	movlw	low STR_4
  3345  0016F6  6E5A               	movwf	sprintf@fmt^0,c
  3346  0016F8  0E08               	movlw	high STR_4
  3347  0016FA  6E5B               	movwf	(sprintf@fmt+1)^0,c
  3348  0016FC  C06C  F05C         	movff	imprimir@luz,?_sprintf+4
  3349  001700  C06D  F05D         	movff	imprimir@luz+1,?_sprintf+5
  3350  001704  EC05  F00F         	call	_sprintf	;wreg free
  3351  001708                     
  3352                           ;Principal.c: 180:     LCD_Command(0xC0);
  3353  001708  0EC0               	movlw	192
  3354  00170A  EC56  F00F         	call	_LCD_Command
  3355  00170E                     
  3356                           ;Principal.c: 181:     LCD_String_xy(3, 0, aux_dist);
  3357  00170E  0E00               	movlw	0
  3358  001710  6E05               	movwf	LCD_String_xy@pos^0,c
  3359  001712  0E6E               	movlw	low imprimir@aux_dist
  3360  001714  6E06               	movwf	LCD_String_xy@msg^0,c
  3361  001716  0E00               	movlw	high imprimir@aux_dist
  3362  001718  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3363  00171A  0E03               	movlw	3
  3364  00171C  EC6B  F010         	call	_LCD_String_xy
  3365  001720                     
  3366                           ;Principal.c: 182:     LCD_String_xy(3, 6, aux_temp);
  3367  001720  0E06               	movlw	6
  3368  001722  6E05               	movwf	LCD_String_xy@pos^0,c
  3369  001724  0E7E               	movlw	low imprimir@aux_temp
  3370  001726  6E06               	movwf	LCD_String_xy@msg^0,c
  3371  001728  0E00               	movlw	high imprimir@aux_temp
  3372  00172A  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3373  00172C  0E03               	movlw	3
  3374  00172E  EC6B  F010         	call	_LCD_String_xy
  3375  001732                     
  3376                           ;Principal.c: 183:     LCD_String_xy(3, 11, aux_luz);
  3377  001732  0E0B               	movlw	11
  3378  001734  6E05               	movwf	LCD_String_xy@pos^0,c
  3379  001736  0E8E               	movlw	low imprimir@aux_luz
  3380  001738  6E06               	movwf	LCD_String_xy@msg^0,c
  3381  00173A  0E00               	movlw	high imprimir@aux_luz
  3382  00173C  6E07               	movwf	(LCD_String_xy@msg+1)^0,c
  3383  00173E  0E03               	movlw	3
  3384  001740  EC6B  F010         	call	_LCD_String_xy
  3385  001744                     
  3386                           ;Principal.c: 184:     _delay((unsigned long)((900)*(8000000/4000.0)));
  3387  001744  0E0A               	movlw	10
  3388  001746  6E5F               	movwf	(??_imprimir+1)^0,c
  3389  001748  0E22               	movlw	34
  3390  00174A  6E5E               	movwf	??_imprimir^0,c
  3391  00174C  0EA1               	movlw	161
  3392  00174E                     u2417:
  3393  00174E  2EE8               	decfsz	wreg,f,c
  3394  001750  D7FE               	bra	u2417
  3395  001752  2E5E               	decfsz	??_imprimir^0,f,c
  3396  001754  D7FC               	bra	u2417
  3397  001756  2E5F               	decfsz	(??_imprimir+1)^0,f,c
  3398  001758  D7FA               	bra	u2417
  3399  00175A  F000               	nop	
  3400  00175C                     
  3401                           ;Principal.c: 185:     LCD_Clear();
  3402  00175C  EC12  F011         	call	_LCD_Clear	;wreg free
  3403  001760  0012               	return		;funcret
  3404  001762                     __end_of_imprimir:
  3405                           	callstack 0
  3406                           
  3407 ;; *************** function _sprintf *****************
  3408 ;; Defined at:
  3409 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  3410 ;; Parameters:    Size  Location     Type
  3411 ;;  s               2   87[COMRAM] PTR unsigned char 
  3412 ;;		 -> imprimir@aux_luz(16), imprimir@aux_temp(16), imprimir@aux_dist(16), 
  3413 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  3414 ;;		 -> STR_4(4), STR_3(4), STR_2(5), 
  3415 ;; Auto vars:     Size  Location     Type
  3416 ;;  f               6    2[BANK0 ] struct _IO_FILE
  3417 ;;  ap              2    0[BANK0 ] PTR void [1]
  3418 ;;		 -> ?_sprintf(2), 
  3419 ;;  ret             2    0        int 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;                  2   87[COMRAM] int 
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         6       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         0       8       0       0       0       0       0       0       0
  3431 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3432 ;;      Totals:         6       8       0       0       0       0       0       0       0
  3433 ;;Total ram usage:       14 bytes
  3434 ;; Hardware stack levels used: 1
  3435 ;; Hardware stack levels required when called: 7
  3436 ;; This function calls:
  3437 ;;		_vfprintf
  3438 ;; This function is called by:
  3439 ;;		_imprimir
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text22
  3444  001E0A                     __ptext22:
  3445                           	callstack 0
  3446  001E0A                     _sprintf:
  3447                           	callstack 22
  3448  001E0A  0E5C               	movlw	low (?_sprintf+4)
  3449  001E0C  0100               	movlb	0	; () banked
  3450  001E0E  6F60               	movwf	sprintf@ap& (0+255),b
  3451  001E10  0E00               	movlw	high (?_sprintf+4)
  3452  001E12  6F61               	movwf	(sprintf@ap+1)& (0+255),b
  3453  001E14  C058  F062         	movff	sprintf@s,sprintf@f
  3454  001E18  C059  F063         	movff	sprintf@s+1,sprintf@f+1
  3455  001E1C                     
  3456                           ; BSR set to: 0
  3457  001E1C  0E00               	movlw	0
  3458  001E1E  6F65               	movwf	(sprintf@f+3)& (0+255),b
  3459  001E20  0E00               	movlw	0
  3460  001E22  6F64               	movwf	(sprintf@f+2)& (0+255),b
  3461  001E24                     
  3462                           ; BSR set to: 0
  3463  001E24  0E00               	movlw	0
  3464  001E26  6F67               	movwf	(sprintf@f+5)& (0+255),b
  3465  001E28  0E00               	movlw	0
  3466  001E2A  6F66               	movwf	(sprintf@f+4)& (0+255),b
  3467  001E2C                     
  3468                           ; BSR set to: 0
  3469  001E2C  0E62               	movlw	low sprintf@f
  3470  001E2E  6E50               	movwf	vfprintf@fp^0,c
  3471  001E30  0E00               	movlw	high sprintf@f
  3472  001E32  6E51               	movwf	(vfprintf@fp+1)^0,c
  3473  001E34  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  3474  001E38  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3475  001E3C  0E60               	movlw	low sprintf@ap
  3476  001E3E  6E54               	movwf	vfprintf@ap^0,c
  3477  001E40  0E00               	movlw	high sprintf@ap
  3478  001E42  6E55               	movwf	(vfprintf@ap+1)^0,c
  3479  001E44  ECA5  F00E         	call	_vfprintf	;wreg free
  3480  001E48  0100               	movlb	0	; () banked
  3481  001E4A  5164               	movf	(sprintf@f+2)& (0+255),w,b
  3482  001E4C  2458               	addwf	sprintf@s^0,w,c
  3483  001E4E  6ED9               	movwf	fsr2l,c
  3484  001E50  5165               	movf	(sprintf@f+3)& (0+255),w,b
  3485  001E52  2059               	addwfc	(sprintf@s+1)^0,w,c
  3486  001E54  6EDA               	movwf	fsr2h,c
  3487  001E56  0E00               	movlw	0
  3488  001E58  6EDF               	movwf	indf2,c
  3489  001E5A                     
  3490                           ; BSR set to: 0
  3491  001E5A  0012               	return		;funcret
  3492  001E5C                     __end_of_sprintf:
  3493                           	callstack 0
  3494                           
  3495 ;; *************** function _vfprintf *****************
  3496 ;; Defined at:
  3497 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3498 ;; Parameters:    Size  Location     Type
  3499 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  3500 ;;		 -> sprintf@f(6), 
  3501 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  3502 ;;		 -> STR_4(4), STR_3(4), STR_2(5), 
  3503 ;;  ap              2   83[COMRAM] PTR PTR void 
  3504 ;;		 -> sprintf@ap(2), 
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  3507 ;;		 -> STR_4(4), STR_3(4), STR_2(5), 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  2   79[COMRAM] int 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3517 ;;      Params:         6       0       0       0       0       0       0       0       0
  3518 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3520 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3521 ;;Total ram usage:        8 bytes
  3522 ;; Hardware stack levels used: 1
  3523 ;; Hardware stack levels required when called: 6
  3524 ;; This function calls:
  3525 ;;		_vfpfcnvrt
  3526 ;; This function is called by:
  3527 ;;		_sprintf
  3528 ;; This function uses a non-reentrant model
  3529 ;;
  3530                           
  3531                           	psect	text23
  3532  001D4A                     __ptext23:
  3533                           	callstack 0
  3534  001D4A                     _vfprintf:
  3535                           	callstack 22
  3536  001D4A                     
  3537                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  3538  001D4A  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  3539  001D4E  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3540  001D52                     
  3541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  3542  001D52  0E00               	movlw	0
  3543  001D54  0100               	movlb	0	; () banked
  3544  001D56  6FE5               	movwf	(_nout+1)& (0+255),b
  3545  001D58  0E00               	movlw	0
  3546  001D5A  6FE4               	movwf	_nout& (0+255),b
  3547                           
  3548                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3549  001D5C  EFC3  F00E         	goto	l2279
  3550  001D60                     l2277:
  3551                           
  3552                           ; BSR set to: 0
  3553                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3554  001D60  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3555  001D64  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3556  001D68  0E56               	movlw	low vfprintf@cfmt
  3557  001D6A  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3558  001D6C  0E00               	movlw	high vfprintf@cfmt
  3559  001D6E  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3560  001D70  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3561  001D74  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3562  001D78  EC6C  F008         	call	_vfpfcnvrt	;wreg free
  3563  001D7C  5040               	movf	?_vfpfcnvrt^0,w,c
  3564  001D7E  0100               	movlb	0	; () banked
  3565  001D80  27E4               	addwf	_nout& (0+255),f,b
  3566  001D82  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3567  001D84  23E5               	addwfc	(_nout+1)& (0+255),f,b
  3568  001D86                     l2279:
  3569                           
  3570                           ; BSR set to: 0
  3571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  3572  001D86  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  3573  001D8A  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3574  001D8E                     	if	0	;tblptru may be non-zero
  3575  001D8E                     	endif
  3576  001D8E                     	if	0	;tblptru may be non-zero
  3577  001D8E                     	endif
  3578  001D8E  0008               	tblrd		*
  3579  001D90  50F5               	movf	tablat,w,c
  3580  001D92  0900               	iorlw	0
  3581  001D94  A4D8               	btfss	status,2,c
  3582  001D96  EFCF  F00E         	goto	u1691
  3583  001D9A  EFD1  F00E         	goto	u1690
  3584  001D9E                     u1691:
  3585  001D9E  EFB0  F00E         	goto	l2277
  3586  001DA2                     u1690:
  3587  001DA2                     
  3588                           ; BSR set to: 0
  3589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  3590  001DA2  C0E4  F050         	movff	_nout,?_vfprintf
  3591  001DA6  C0E5  F051         	movff	_nout+1,?_vfprintf+1
  3592  001DAA                     
  3593                           ; BSR set to: 0
  3594  001DAA  0012               	return		;funcret
  3595  001DAC                     __end_of_vfprintf:
  3596                           	callstack 0
  3597                           
  3598 ;; *************** function _vfpfcnvrt *****************
  3599 ;; Defined at:
  3600 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3601 ;; Parameters:    Size  Location     Type
  3602 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3603 ;;		 -> sprintf@f(6), 
  3604 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3605 ;;		 -> vfprintf@cfmt(2), 
  3606 ;;  ap              2   67[COMRAM] PTR PTR void 
  3607 ;;		 -> sprintf@ap(2), 
  3608 ;; Auto vars:     Size  Location     Type
  3609 ;;  ll              8   71[COMRAM] long long 
  3610 ;;  llu             8    0        unsigned long long 
  3611 ;;  f               4    0        unsigned long long 
  3612 ;;  vp              3    0        PTR void 
  3613 ;;  ct              3    0        unsigned char [3]
  3614 ;;  cp              3    0        PTR unsigned char 
  3615 ;;  i               2    0        int 
  3616 ;;  done            2    0        int 
  3617 ;;  c               1    0        unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;                  2   63[COMRAM] int 
  3620 ;; Registers used:
  3621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3627 ;;      Params:         6       0       0       0       0       0       0       0       0
  3628 ;;      Locals:         8       0       0       0       0       0       0       0       0
  3629 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3630 ;;      Totals:        16       0       0       0       0       0       0       0       0
  3631 ;;Total ram usage:       16 bytes
  3632 ;; Hardware stack levels used: 1
  3633 ;; Hardware stack levels required when called: 5
  3634 ;; This function calls:
  3635 ;;		_dtoa
  3636 ;;		_fputc
  3637 ;; This function is called by:
  3638 ;;		_vfprintf
  3639 ;; This function uses a non-reentrant model
  3640 ;;
  3641                           
  3642                           	psect	text24
  3643  0010D8                     __ptext24:
  3644                           	callstack 0
  3645  0010D8                     _vfpfcnvrt:
  3646                           	callstack 22
  3647  0010D8                     
  3648                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  3649  0010D8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3650  0010DC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3651  0010E0  CFDE FFF6          	movff	postinc2,tblptrl
  3652  0010E4  CFDD FFF7          	movff	postdec2,tblptrh
  3653  0010E8                     	if	0	;tblptru may be non-zero
  3654  0010E8                     	endif
  3655  0010E8                     	if	0	;tblptru may be non-zero
  3656  0010E8                     	endif
  3657  0010E8  0008               	tblrd		*
  3658  0010EA  50F5               	movf	tablat,w,c
  3659  0010EC  0A25               	xorlw	37
  3660  0010EE  A4D8               	btfss	status,2,c
  3661  0010F0  EF7C  F008         	goto	u1611
  3662  0010F4  EF7E  F008         	goto	u1610
  3663  0010F8                     u1611:
  3664  0010F8  EF2A  F009         	goto	l2227
  3665  0010FC                     u1610:
  3666  0010FC                     
  3667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  3668  0010FC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3669  001100  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3670  001104  2ADE               	incf	postinc2,f,c
  3671  001106  0E00               	movlw	0
  3672  001108  22DD               	addwfc	postdec2,f,c
  3673  00110A                     
  3674                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  3675  00110A  0E00               	movlw	0
  3676  00110C  0100               	movlb	0	; () banked
  3677  00110E  6FE7               	movwf	(_width+1)& (0+255),b
  3678  001110  0E00               	movlw	0
  3679  001112  6FE6               	movwf	_width& (0+255),b
  3680  001114  C0E6  F0EA         	movff	_width,_flags
  3681  001118  C0E7  F0EB         	movff	_width+1,_flags+1
  3682  00111C                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  3685  00111C  69E8               	setf	_prec& (0+255),b
  3686  00111E  69E9               	setf	(_prec+1)& (0+255),b
  3687  001120                     
  3688                           ; BSR set to: 0
  3689                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 847:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  3690  001120  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3691  001124  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3692  001128  CFDE FFF6          	movff	postinc2,tblptrl
  3693  00112C  CFDD FFF7          	movff	postdec2,tblptrh
  3694  001130                     	if	0	;tblptru may be non-zero
  3695  001130                     	endif
  3696  001130                     	if	0	;tblptru may be non-zero
  3697  001130                     	endif
  3698  001130  0008               	tblrd		*
  3699  001132  50F5               	movf	tablat,w,c
  3700  001134  0A64               	xorlw	100
  3701  001136  B4D8               	btfsc	status,2,c
  3702  001138  EFA0  F008         	goto	u1621
  3703  00113C  EFA2  F008         	goto	u1620
  3704  001140                     u1621:
  3705  001140  EFB4  F008         	goto	l2205
  3706  001144                     u1620:
  3707  001144                     
  3708                           ; BSR set to: 0
  3709  001144  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3710  001148  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3711  00114C  CFDE FFF6          	movff	postinc2,tblptrl
  3712  001150  CFDD FFF7          	movff	postdec2,tblptrh
  3713  001154                     	if	0	;tblptru may be non-zero
  3714  001154                     	endif
  3715  001154                     	if	0	;tblptru may be non-zero
  3716  001154                     	endif
  3717  001154  0008               	tblrd		*
  3718  001156  50F5               	movf	tablat,w,c
  3719  001158  0A69               	xorlw	105
  3720  00115A  A4D8               	btfss	status,2,c
  3721  00115C  EFB2  F008         	goto	u1631
  3722  001160  EFB4  F008         	goto	u1630
  3723  001164                     u1631:
  3724  001164  EFF4  F008         	goto	l2211
  3725  001168                     u1630:
  3726  001168                     l2205:
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 849:             
      +                          ++*fmt;
  3730  001168  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3731  00116C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3732  001170  2ADE               	incf	postinc2,f,c
  3733  001172  0E00               	movlw	0
  3734  001174  22DD               	addwfc	postdec2,f,c
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 850:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  3737  001176  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3738  00117A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3739  00117E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3740  001182  0E02               	movlw	2
  3741  001184  26DE               	addwf	postinc2,f,c
  3742  001186  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3743  00118A  0E00               	movlw	0
  3744  00118C  22DD               	addwfc	postdec2,f,c
  3745  00118E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3746  001192  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3747  001196  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  3748  00119A  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  3749  00119E  0E00               	movlw	0
  3750  0011A0  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  3751  0011A2  0EFF               	movlw	-1
  3752  0011A4  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  3753  0011A6  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  3754  0011A8  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  3755  0011AA  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  3756  0011AC  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  3757  0011AE  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  3758  0011B0                     
  3759                           ; BSR set to: 0
  3760                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 852:             
      +                          return dtoa(fp, ll);
  3761  0011B0  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  3762  0011B4  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  3763  0011B8  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  3764  0011BC  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  3765  0011C0  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  3766  0011C4  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  3767  0011C8  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  3768  0011CC  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  3769  0011D0  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  3770  0011D4  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  3771  0011D8  EC20  F006         	call	_dtoa	;wreg free
  3772  0011DC  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  3773  0011E0  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  3774  0011E4  EF45  F009         	goto	l1060
  3775  0011E8                     l2211:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  3779  0011E8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3780  0011EC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3781  0011F0  CFDE FFF6          	movff	postinc2,tblptrl
  3782  0011F4  CFDD FFF7          	movff	postdec2,tblptrh
  3783  0011F8                     	if	0	;tblptru may be non-zero
  3784  0011F8                     	endif
  3785  0011F8                     	if	0	;tblptru may be non-zero
  3786  0011F8                     	endif
  3787  0011F8  0008               	tblrd		*
  3788  0011FA  50F5               	movf	tablat,w,c
  3789  0011FC  0A25               	xorlw	37
  3790  0011FE  A4D8               	btfss	status,2,c
  3791  001200  EF04  F009         	goto	u1641
  3792  001204  EF06  F009         	goto	u1640
  3793  001208                     u1641:
  3794  001208  EF1D  F009         	goto	l2221
  3795  00120C                     u1640:
  3796  00120C                     
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  3799  00120C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3800  001210  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3801  001214  2ADE               	incf	postinc2,f,c
  3802  001216  0E00               	movlw	0
  3803  001218  22DD               	addwfc	postdec2,f,c
  3804  00121A                     
  3805                           ; BSR set to: 0
  3806                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  3807  00121A  0E00               	movlw	0
  3808  00121C  6E02               	movwf	(fputc@c+1)^0,c
  3809  00121E  0E25               	movlw	37
  3810  001220  6E01               	movwf	fputc@c^0,c
  3811  001222  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3812  001226  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3813  00122A  EC1B  F00C         	call	_fputc	;wreg free
  3814  00122E                     l2217:
  3815                           
  3816                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  3817  00122E  0E00               	movlw	0
  3818  001230  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3819  001232  0E01               	movlw	1
  3820  001234  6E40               	movwf	?_vfpfcnvrt^0,c
  3821  001236  EF45  F009         	goto	l1060
  3822  00123A                     l2221:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  3826  00123A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3827  00123E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3828  001242  2ADE               	incf	postinc2,f,c
  3829  001244  0E00               	movlw	0
  3830  001246  22DD               	addwfc	postdec2,f,c
  3831  001248                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  3834  001248  0E00               	movlw	0
  3835  00124A  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  3836  00124C  0E00               	movlw	0
  3837  00124E  6E40               	movwf	?_vfpfcnvrt^0,c
  3838  001250  EF45  F009         	goto	l1060
  3839  001254                     l2227:
  3840                           
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  3842  001254  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3843  001258  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3844  00125C  CFDE FFF6          	movff	postinc2,tblptrl
  3845  001260  CFDD FFF7          	movff	postdec2,tblptrh
  3846  001264                     	if	0	;tblptru may be non-zero
  3847  001264                     	endif
  3848  001264                     	if	0	;tblptru may be non-zero
  3849  001264                     	endif
  3850  001264  0008               	tblrd		*
  3851  001266  50F5               	movf	tablat,w,c
  3852  001268  6E01               	movwf	fputc@c^0,c
  3853  00126A  6A02               	clrf	(fputc@c+1)^0,c
  3854  00126C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3855  001270  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  3856  001274  EC1B  F00C         	call	_fputc	;wreg free
  3857  001278                     
  3858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3859  001278  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3860  00127C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3861  001280  2ADE               	incf	postinc2,f,c
  3862  001282  0E00               	movlw	0
  3863  001284  22DD               	addwfc	postdec2,f,c
  3864  001286  EF17  F009         	goto	l2217
  3865  00128A                     l1060:
  3866  00128A  0012               	return		;funcret
  3867  00128C                     __end_of_vfpfcnvrt:
  3868                           	callstack 0
  3869                           
  3870 ;; *************** function _dtoa *****************
  3871 ;; Defined at:
  3872 ;;		line 287 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3873 ;; Parameters:    Size  Location     Type
  3874 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  3875 ;;		 -> sprintf@f(6), 
  3876 ;;  d               8   29[COMRAM] long long 
  3877 ;; Auto vars:     Size  Location     Type
  3878 ;;  n               8   53[COMRAM] long long 
  3879 ;;  i               2   61[COMRAM] int 
  3880 ;;  s               2   51[COMRAM] int 
  3881 ;;  w               2   49[COMRAM] int 
  3882 ;;  p               2   47[COMRAM] int 
  3883 ;; Return value:  Size  Location     Type
  3884 ;;                  2   27[COMRAM] int 
  3885 ;; Registers used:
  3886 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3887 ;; Tracked objects:
  3888 ;;		On entry : 0/0
  3889 ;;		On exit  : 0/0
  3890 ;;		Unchanged: 0/0
  3891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3892 ;;      Params:        10       0       0       0       0       0       0       0       0
  3893 ;;      Locals:        18       0       0       0       0       0       0       0       0
  3894 ;;      Temps:          8       0       0       0       0       0       0       0       0
  3895 ;;      Totals:        36       0       0       0       0       0       0       0       0
  3896 ;;Total ram usage:       36 bytes
  3897 ;; Hardware stack levels used: 1
  3898 ;; Hardware stack levels required when called: 4
  3899 ;; This function calls:
  3900 ;;		___aodiv
  3901 ;;		___aomod
  3902 ;;		_abs
  3903 ;;		_pad
  3904 ;; This function is called by:
  3905 ;;		_vfpfcnvrt
  3906 ;; This function uses a non-reentrant model
  3907 ;;
  3908                           
  3909                           	psect	text25
  3910  000C40                     __ptext25:
  3911                           	callstack 0
  3912  000C40                     _dtoa:
  3913                           	callstack 22
  3914  000C40                     
  3915                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 287: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 288: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 28
      +                          9:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprn
      +                          t.c: 290:     long long n;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\d
      +                          oprnt.c: 293:     n = d;
  3916  000C40  C01E  F036         	movff	dtoa@d,dtoa@n
  3917  000C44  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  3918  000C48  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  3919  000C4C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  3920  000C50  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  3921  000C54  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  3922  000C58  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  3923  000C5C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  3924  000C60                     
  3925                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 294:     s = n < 
      +                          0 ? 1 : 0;
  3926  000C60  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  3927  000C62  EF35  F006         	goto	u1461
  3928  000C66  EF38  F006         	goto	u1460
  3929  000C6A                     u1461:
  3930  000C6A  0E01               	movlw	1
  3931  000C6C  EF39  F006         	goto	u1470
  3932  000C70                     u1460:
  3933  000C70  0E00               	movlw	0
  3934  000C72                     u1470:
  3935  000C72  6E34               	movwf	dtoa@s^0,c
  3936  000C74  6A35               	clrf	(dtoa@s+1)^0,c
  3937                           
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 295:     if (s) {
  3939  000C76  5034               	movf	dtoa@s^0,w,c
  3940  000C78  1035               	iorwf	(dtoa@s+1)^0,w,c
  3941  000C7A  B4D8               	btfsc	status,2,c
  3942  000C7C  EF42  F006         	goto	u1481
  3943  000C80  EF44  F006         	goto	u1480
  3944  000C84                     u1481:
  3945  000C84  EF54  F006         	goto	l2117
  3946  000C88                     u1480:
  3947  000C88                     
  3948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 296:         n = 
      +                          -n;
  3949  000C88  1E3D               	comf	(dtoa@n+7)^0,f,c
  3950  000C8A  1E3C               	comf	(dtoa@n+6)^0,f,c
  3951  000C8C  1E3B               	comf	(dtoa@n+5)^0,f,c
  3952  000C8E  1E3A               	comf	(dtoa@n+4)^0,f,c
  3953  000C90  1E39               	comf	(dtoa@n+3)^0,f,c
  3954  000C92  1E38               	comf	(dtoa@n+2)^0,f,c
  3955  000C94  1E37               	comf	(dtoa@n+1)^0,f,c
  3956  000C96  6C36               	negf	dtoa@n^0,c
  3957  000C98  0E00               	movlw	0
  3958  000C9A  2237               	addwfc	(dtoa@n+1)^0,f,c
  3959  000C9C  2238               	addwfc	(dtoa@n+2)^0,f,c
  3960  000C9E  2239               	addwfc	(dtoa@n+3)^0,f,c
  3961  000CA0  223A               	addwfc	(dtoa@n+4)^0,f,c
  3962  000CA2  223B               	addwfc	(dtoa@n+5)^0,f,c
  3963  000CA4  223C               	addwfc	(dtoa@n+6)^0,f,c
  3964  000CA6  223D               	addwfc	(dtoa@n+7)^0,f,c
  3965  000CA8                     l2117:
  3966                           
  3967                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 300:     if (!(pr
      +                          ec < 0)) {
  3968  000CA8  0100               	movlb	0	; () banked
  3969  000CAA  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  3970  000CAC  EF5A  F006         	goto	u1491
  3971  000CB0  EF5C  F006         	goto	u1490
  3972  000CB4                     u1491:
  3973  000CB4  EF5D  F006         	goto	l2121
  3974  000CB8                     u1490:
  3975  000CB8                     
  3976                           ; BSR set to: 0
  3977                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 301:         flag
      +                          s &= ~(1 << 1);
  3978  000CB8  93EA               	bcf	_flags& (0+255),1,b
  3979  000CBA                     l2121:
  3980                           
  3981                           ; BSR set to: 0
  3982                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 303:     p = (0 <
      +                           prec) ? prec : 1;
  3983  000CBA  BFE9               	btfsc	(_prec+1)& (0+255),7,b
  3984  000CBC  EF6A  F006         	goto	u1500
  3985  000CC0  51E9               	movf	(_prec+1)& (0+255),w,b
  3986  000CC2  E106               	bnz	u1501
  3987  000CC4  05E8               	decf	_prec& (0+255),w,b
  3988  000CC6  B0D8               	btfsc	status,0,c
  3989  000CC8  EF68  F006         	goto	u1501
  3990  000CCC  EF6A  F006         	goto	u1500
  3991  000CD0                     u1501:
  3992  000CD0  EF70  F006         	goto	l1033
  3993  000CD4                     u1500:
  3994  000CD4                     
  3995                           ; BSR set to: 0
  3996  000CD4  0E00               	movlw	0
  3997  000CD6  6E31               	movwf	(dtoa@p+1)^0,c
  3998  000CD8  0E01               	movlw	1
  3999  000CDA  6E30               	movwf	dtoa@p^0,c
  4000  000CDC  EF74  F006         	goto	l1035
  4001  000CE0                     l1033:
  4002                           
  4003                           ; BSR set to: 0
  4004  000CE0  C0E8  F030         	movff	_prec,dtoa@p
  4005  000CE4  C0E9  F031         	movff	_prec+1,dtoa@p+1
  4006  000CE8                     l1035:
  4007                           
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 304:     w = widt
      +                          h;
  4010  000CE8  C0E6  F032         	movff	_width,dtoa@w
  4011  000CEC  C0E7  F033         	movff	_width+1,dtoa@w+1
  4012  000CF0                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 305:     if (s ||
      +                           (flags & (1 << 2))) {
  4015  000CF0  5034               	movf	dtoa@s^0,w,c
  4016  000CF2  1035               	iorwf	(dtoa@s+1)^0,w,c
  4017  000CF4  A4D8               	btfss	status,2,c
  4018  000CF6  EF7F  F006         	goto	u1511
  4019  000CFA  EF81  F006         	goto	u1510
  4020  000CFE                     u1511:
  4021  000CFE  EF88  F006         	goto	l2129
  4022  000D02                     u1510:
  4023  000D02                     
  4024                           ; BSR set to: 0
  4025  000D02  A5EA               	btfss	_flags& (0+255),2,b
  4026  000D04  EF86  F006         	goto	u1521
  4027  000D08  EF88  F006         	goto	u1520
  4028  000D0C                     u1521:
  4029  000D0C  EF8B  F006         	goto	l2131
  4030  000D10                     u1520:
  4031  000D10                     l2129:
  4032                           
  4033                           ; BSR set to: 0
  4034                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 306:         --w;
  4035  000D10  0632               	decf	dtoa@w^0,f,c
  4036  000D12  A0D8               	btfss	status,0,c
  4037  000D14  0633               	decf	(dtoa@w+1)^0,f,c
  4038  000D16                     l2131:
  4039                           
  4040                           ; BSR set to: 0
  4041                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 310:     i = size
      +                          of(dbuf) - 1;
  4042  000D16  0E00               	movlw	0
  4043  000D18  6E3F               	movwf	(dtoa@i+1)^0,c
  4044  000D1A  0E1F               	movlw	31
  4045  000D1C  6E3E               	movwf	dtoa@i^0,c
  4046  000D1E                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 311:     dbuf[i] 
      +                          = '\0';
  4049  000D1E  0E00               	movlw	0
  4050  000D20  0101               	movlb	1	; () banked
  4051  000D22  6F4F               	movwf	(_dbuf+31)& (0+255),b
  4052                           
  4053                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4054  000D24  EF10  F007         	goto	l2145
  4055  000D28                     l2135:
  4056                           
  4057                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 313:         --i;
  4058  000D28  063E               	decf	dtoa@i^0,f,c
  4059  000D2A  A0D8               	btfss	status,0,c
  4060  000D2C  063F               	decf	(dtoa@i+1)^0,f,c
  4061  000D2E                     
  4062                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 314:         dbuf
      +                          [i] = (char)((int)'0' + abs(n % 10));
  4063  000D2E  0E30               	movlw	low _dbuf
  4064  000D30  243E               	addwf	dtoa@i^0,w,c
  4065  000D32  6ED9               	movwf	fsr2l,c
  4066  000D34  0E01               	movlw	high _dbuf
  4067  000D36  203F               	addwfc	(dtoa@i+1)^0,w,c
  4068  000D38  6EDA               	movwf	fsr2h,c
  4069  000D3A  C036  F001         	movff	dtoa@n,___aomod@dividend
  4070  000D3E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  4071  000D42  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  4072  000D46  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  4073  000D4A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  4074  000D4E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  4075  000D52  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  4076  000D56  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  4077  000D5A  0E0A               	movlw	10
  4078  000D5C  6E09               	movwf	___aomod@divisor^0,c
  4079  000D5E  0E00               	movlw	0
  4080  000D60  6E0A               	movwf	(___aomod@divisor+1)^0,c
  4081  000D62  0E00               	movlw	0
  4082  000D64  6E0B               	movwf	(___aomod@divisor+2)^0,c
  4083  000D66  0E00               	movlw	0
  4084  000D68  6E0C               	movwf	(___aomod@divisor+3)^0,c
  4085  000D6A  0E00               	movlw	0
  4086  000D6C  6E0D               	movwf	(___aomod@divisor+4)^0,c
  4087  000D6E  0E00               	movlw	0
  4088  000D70  6E0E               	movwf	(___aomod@divisor+5)^0,c
  4089  000D72  0E00               	movlw	0
  4090  000D74  6E0F               	movwf	(___aomod@divisor+6)^0,c
  4091  000D76  0E00               	movlw	0
  4092  000D78  6E10               	movwf	(___aomod@divisor+7)^0,c
  4093  000D7A  EC0A  F00A         	call	___aomod	;wreg free
  4094  000D7E  C001  F026         	movff	?___aomod,??_dtoa
  4095  000D82  C002  F027         	movff	?___aomod+1,??_dtoa+1
  4096  000D86  C003  F028         	movff	?___aomod+2,??_dtoa+2
  4097  000D8A  C004  F029         	movff	?___aomod+3,??_dtoa+3
  4098  000D8E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  4099  000D92  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  4100  000D96  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  4101  000D9A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  4102  000D9E  C026  F013         	movff	??_dtoa,abs@a
  4103  000DA2  C028  F014         	movff	??_dtoa+2,abs@a+1
  4104  000DA6  EC4B  F010         	call	_abs	;wreg free
  4105  000DAA  5013               	movf	?_abs^0,w,c
  4106  000DAC  0F30               	addlw	48
  4107  000DAE  6EDF               	movwf	indf2,c
  4108  000DB0                     
  4109                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 315:         --p;
  4110  000DB0  0630               	decf	dtoa@p^0,f,c
  4111  000DB2  A0D8               	btfss	status,0,c
  4112  000DB4  0631               	decf	(dtoa@p+1)^0,f,c
  4113  000DB6                     
  4114                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 316:         --w;
  4115  000DB6  0632               	decf	dtoa@w^0,f,c
  4116  000DB8  A0D8               	btfss	status,0,c
  4117  000DBA  0633               	decf	(dtoa@w+1)^0,f,c
  4118  000DBC                     
  4119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 317:         n = 
      +                          n / 10;
  4120  000DBC  C036  F001         	movff	dtoa@n,___aodiv@dividend
  4121  000DC0  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  4122  000DC4  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  4123  000DC8  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  4124  000DCC  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  4125  000DD0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  4126  000DD4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  4127  000DD8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  4128  000DDC  0E0A               	movlw	10
  4129  000DDE  6E09               	movwf	___aodiv@divisor^0,c
  4130  000DE0  0E00               	movlw	0
  4131  000DE2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  4132  000DE4  0E00               	movlw	0
  4133  000DE6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  4134  000DE8  0E00               	movlw	0
  4135  000DEA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  4136  000DEC  0E00               	movlw	0
  4137  000DEE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  4138  000DF0  0E00               	movlw	0
  4139  000DF2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  4140  000DF4  0E00               	movlw	0
  4141  000DF6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  4142  000DF8  0E00               	movlw	0
  4143  000DFA  6E10               	movwf	(___aodiv@divisor+7)^0,c
  4144  000DFC  EC46  F009         	call	___aodiv	;wreg free
  4145  000E00  C001  F036         	movff	?___aodiv,dtoa@n
  4146  000E04  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  4147  000E08  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  4148  000E0C  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  4149  000E10  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  4150  000E14  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  4151  000E18  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  4152  000E1C  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  4153  000E20                     l2145:
  4154                           
  4155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 312:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  4156  000E20  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  4157  000E22  EF1B  F007         	goto	u1531
  4158  000E26  503F               	movf	(dtoa@i+1)^0,w,c
  4159  000E28  E108               	bnz	u1530
  4160  000E2A  043E               	decf	dtoa@i^0,w,c
  4161  000E2C  A0D8               	btfss	status,0,c
  4162  000E2E  EF1B  F007         	goto	u1531
  4163  000E32  EF1D  F007         	goto	u1530
  4164  000E36                     u1531:
  4165  000E36  EF4E  F007         	goto	l2155
  4166  000E3A                     u1530:
  4167  000E3A  5036               	movf	dtoa@n^0,w,c
  4168  000E3C  1037               	iorwf	(dtoa@n+1)^0,w,c
  4169  000E3E  1038               	iorwf	(dtoa@n+2)^0,w,c
  4170  000E40  1039               	iorwf	(dtoa@n+3)^0,w,c
  4171  000E42  103A               	iorwf	(dtoa@n+4)^0,w,c
  4172  000E44  103B               	iorwf	(dtoa@n+5)^0,w,c
  4173  000E46  103C               	iorwf	(dtoa@n+6)^0,w,c
  4174  000E48  103D               	iorwf	(dtoa@n+7)^0,w,c
  4175  000E4A  A4D8               	btfss	status,2,c
  4176  000E4C  EF2A  F007         	goto	u1541
  4177  000E50  EF2C  F007         	goto	u1540
  4178  000E54                     u1541:
  4179  000E54  EF94  F006         	goto	l2135
  4180  000E58                     u1540:
  4181  000E58  BE31               	btfsc	(dtoa@p+1)^0,7,c
  4182  000E5A  EF39  F007         	goto	u1550
  4183  000E5E  5031               	movf	(dtoa@p+1)^0,w,c
  4184  000E60  E106               	bnz	u1551
  4185  000E62  0430               	decf	dtoa@p^0,w,c
  4186  000E64  B0D8               	btfsc	status,0,c
  4187  000E66  EF37  F007         	goto	u1551
  4188  000E6A  EF39  F007         	goto	u1550
  4189  000E6E                     u1551:
  4190  000E6E  EF94  F006         	goto	l2135
  4191  000E72                     u1550:
  4192  000E72  BE33               	btfsc	(dtoa@w+1)^0,7,c
  4193  000E74  EF44  F007         	goto	u1561
  4194  000E78  5033               	movf	(dtoa@w+1)^0,w,c
  4195  000E7A  E108               	bnz	u1560
  4196  000E7C  0432               	decf	dtoa@w^0,w,c
  4197  000E7E  A0D8               	btfss	status,0,c
  4198  000E80  EF44  F007         	goto	u1561
  4199  000E84  EF46  F007         	goto	u1560
  4200  000E88                     u1561:
  4201  000E88  EF4E  F007         	goto	l2155
  4202  000E8C                     u1560:
  4203  000E8C  0100               	movlb	0	; () banked
  4204  000E8E  B3EA               	btfsc	_flags& (0+255),1,b
  4205  000E90  EF4C  F007         	goto	u1571
  4206  000E94  EF4E  F007         	goto	u1570
  4207  000E98                     u1571:
  4208  000E98  EF94  F006         	goto	l2135
  4209  000E9C                     u1570:
  4210  000E9C                     l2155:
  4211                           
  4212                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 321:     if (s ||
      +                           (flags & (1 << 2))) {
  4213  000E9C  5034               	movf	dtoa@s^0,w,c
  4214  000E9E  1035               	iorwf	(dtoa@s+1)^0,w,c
  4215  000EA0  A4D8               	btfss	status,2,c
  4216  000EA2  EF55  F007         	goto	u1581
  4217  000EA6  EF57  F007         	goto	u1580
  4218  000EAA                     u1581:
  4219  000EAA  EF5F  F007         	goto	l2159
  4220  000EAE                     u1580:
  4221  000EAE  0100               	movlb	0	; () banked
  4222  000EB0  A5EA               	btfss	_flags& (0+255),2,b
  4223  000EB2  EF5D  F007         	goto	u1591
  4224  000EB6  EF5F  F007         	goto	u1590
  4225  000EBA                     u1591:
  4226  000EBA  EF7D  F007         	goto	l2169
  4227  000EBE                     u1590:
  4228  000EBE                     l2159:
  4229                           
  4230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 322:         --i;
  4231  000EBE  063E               	decf	dtoa@i^0,f,c
  4232  000EC0  A0D8               	btfss	status,0,c
  4233  000EC2  063F               	decf	(dtoa@i+1)^0,f,c
  4234  000EC4                     
  4235                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 323:         dbuf
      +                          [i] = s ? '-' : '+';
  4236  000EC4  5034               	movf	dtoa@s^0,w,c
  4237  000EC6  1035               	iorwf	(dtoa@s+1)^0,w,c
  4238  000EC8  A4D8               	btfss	status,2,c
  4239  000ECA  EF69  F007         	goto	u1601
  4240  000ECE  EF6B  F007         	goto	u1600
  4241  000ED2                     u1601:
  4242  000ED2  EF71  F007         	goto	l2165
  4243  000ED6                     u1600:
  4244  000ED6  0E00               	movlw	0
  4245  000ED8  6E2F               	movwf	(_dtoa$1237+1)^0,c
  4246  000EDA  0E2B               	movlw	43
  4247  000EDC  6E2E               	movwf	_dtoa$1237^0,c
  4248  000EDE  EF75  F007         	goto	l2167
  4249  000EE2                     l2165:
  4250  000EE2  0E00               	movlw	0
  4251  000EE4  6E2F               	movwf	(_dtoa$1237+1)^0,c
  4252  000EE6  0E2D               	movlw	45
  4253  000EE8  6E2E               	movwf	_dtoa$1237^0,c
  4254  000EEA                     l2167:
  4255  000EEA  0E30               	movlw	low _dbuf
  4256  000EEC  243E               	addwf	dtoa@i^0,w,c
  4257  000EEE  6ED9               	movwf	fsr2l,c
  4258  000EF0  0E01               	movlw	high _dbuf
  4259  000EF2  203F               	addwfc	(dtoa@i+1)^0,w,c
  4260  000EF4  6EDA               	movwf	fsr2h,c
  4261  000EF6  C02E  FFDF         	movff	_dtoa$1237,indf2
  4262  000EFA                     l2169:
  4263                           
  4264                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 327:     return p
      +                          ad(fp, &dbuf[i], w);
  4265  000EFA  C01C  F011         	movff	dtoa@fp,pad@fp
  4266  000EFE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  4267  000F02  0E30               	movlw	low _dbuf
  4268  000F04  243E               	addwf	dtoa@i^0,w,c
  4269  000F06  6E13               	movwf	pad@buf^0,c
  4270  000F08  0E01               	movlw	high _dbuf
  4271  000F0A  203F               	addwfc	(dtoa@i+1)^0,w,c
  4272  000F0C  6E14               	movwf	(pad@buf+1)^0,c
  4273  000F0E  C032  F015         	movff	dtoa@w,pad@p
  4274  000F12  C033  F016         	movff	dtoa@w+1,pad@p+1
  4275  000F16  EC80  F00C         	call	_pad	;wreg free
  4276  000F1A  C011  F01C         	movff	?_pad,?_dtoa
  4277  000F1E  C012  F01D         	movff	?_pad+1,?_dtoa+1
  4278  000F22  0012               	return		;funcret
  4279  000F24                     __end_of_dtoa:
  4280                           	callstack 0
  4281                           
  4282 ;; *************** function _pad *****************
  4283 ;; Defined at:
  4284 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  4285 ;; Parameters:    Size  Location     Type
  4286 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4287 ;;		 -> sprintf@f(6), 
  4288 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4289 ;;		 -> dbuf(32), 
  4290 ;;  p               2   20[COMRAM] int 
  4291 ;; Auto vars:     Size  Location     Type
  4292 ;;  w               2   25[COMRAM] int 
  4293 ;;  i               2   23[COMRAM] int 
  4294 ;; Return value:  Size  Location     Type
  4295 ;;                  2   16[COMRAM] int 
  4296 ;; Registers used:
  4297 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4298 ;; Tracked objects:
  4299 ;;		On entry : 0/0
  4300 ;;		On exit  : 0/0
  4301 ;;		Unchanged: 0/0
  4302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4303 ;;      Params:         6       0       0       0       0       0       0       0       0
  4304 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4305 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4306 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4307 ;;Total ram usage:       11 bytes
  4308 ;; Hardware stack levels used: 1
  4309 ;; Hardware stack levels required when called: 3
  4310 ;; This function calls:
  4311 ;;		_fputc
  4312 ;;		_fputs
  4313 ;;		_strlen
  4314 ;; This function is called by:
  4315 ;;		_dtoa
  4316 ;; This function uses a non-reentrant model
  4317 ;;
  4318                           
  4319                           	psect	text26
  4320  001900                     __ptext26:
  4321                           	callstack 0
  4322  001900                     _pad:
  4323                           	callstack 22
  4324  001900                     
  4325                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4326  001900  0100               	movlb	0	; () banked
  4327  001902  A1EA               	btfss	_flags& (0+255),0,b
  4328  001904  EF86  F00C         	goto	u1411
  4329  001908  EF88  F00C         	goto	u1410
  4330  00190C                     u1411:
  4331  00190C  EF92  F00C         	goto	l2089
  4332  001910                     u1410:
  4333  001910                     
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4336  001910  C013  F00A         	movff	pad@buf,fputs@s
  4337  001914  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4338  001918  C011  F00C         	movff	pad@fp,fputs@fp
  4339  00191C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4340  001920  ECC7  F00F         	call	_fputs	;wreg free
  4341  001924                     l2089:
  4342                           
  4343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4344  001924  BE16               	btfsc	(pad@p+1)^0,7,c
  4345  001926  EF97  F00C         	goto	u1421
  4346  00192A  EF99  F00C         	goto	u1420
  4347  00192E                     u1421:
  4348  00192E  EF9F  F00C         	goto	l2093
  4349  001932                     u1420:
  4350  001932  C015  F01A         	movff	pad@p,pad@w
  4351  001936  C016  F01B         	movff	pad@p+1,pad@w+1
  4352  00193A  EFA3  F00C         	goto	l1022
  4353  00193E                     l2093:
  4354  00193E  0E00               	movlw	0
  4355  001940  6E1B               	movwf	(pad@w+1)^0,c
  4356  001942  0E00               	movlw	0
  4357  001944  6E1A               	movwf	pad@w^0,c
  4358  001946                     l1022:
  4359                           
  4360                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4361  001946  0E00               	movlw	0
  4362  001948  6E19               	movwf	(pad@i+1)^0,c
  4363  00194A  0E00               	movlw	0
  4364  00194C  6E18               	movwf	pad@i^0,c
  4365                           
  4366                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4367  00194E  EFB5  F00C         	goto	l2099
  4368  001952                     l2095:
  4369                           
  4370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4371  001952  0E00               	movlw	0
  4372  001954  6E02               	movwf	(fputc@c+1)^0,c
  4373  001956  0E20               	movlw	32
  4374  001958  6E01               	movwf	fputc@c^0,c
  4375  00195A  C011  F003         	movff	pad@fp,fputc@fp
  4376  00195E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4377  001962  EC1B  F00C         	call	_fputc	;wreg free
  4378  001966                     
  4379                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4380  001966  4A18               	infsnz	pad@i^0,f,c
  4381  001968  2A19               	incf	(pad@i+1)^0,f,c
  4382  00196A                     l2099:
  4383                           
  4384                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4385  00196A  501A               	movf	pad@w^0,w,c
  4386  00196C  5C18               	subwf	pad@i^0,w,c
  4387  00196E  5019               	movf	(pad@i+1)^0,w,c
  4388  001970  0A80               	xorlw	128
  4389  001972  6E17               	movwf	??_pad^0,c
  4390  001974  501B               	movf	(pad@w+1)^0,w,c
  4391  001976  0A80               	xorlw	128
  4392  001978  5817               	subwfb	??_pad^0,w,c
  4393  00197A  A0D8               	btfss	status,0,c
  4394  00197C  EFC2  F00C         	goto	u1431
  4395  001980  EFC4  F00C         	goto	u1430
  4396  001984                     u1431:
  4397  001984  EFA9  F00C         	goto	l2095
  4398  001988                     u1430:
  4399  001988                     
  4400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4401  001988  0100               	movlb	0	; () banked
  4402  00198A  B1EA               	btfsc	_flags& (0+255),0,b
  4403  00198C  EFCA  F00C         	goto	u1441
  4404  001990  EFCC  F00C         	goto	u1440
  4405  001994                     u1441:
  4406  001994  EFD6  F00C         	goto	l2103
  4407  001998                     u1440:
  4408  001998                     
  4409                           ; BSR set to: 0
  4410                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4411  001998  C013  F00A         	movff	pad@buf,fputs@s
  4412  00199C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4413  0019A0  C011  F00C         	movff	pad@fp,fputs@fp
  4414  0019A4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4415  0019A8  ECC7  F00F         	call	_fputs	;wreg free
  4416  0019AC                     l2103:
  4417                           
  4418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  4419  0019AC  C013  F001         	movff	pad@buf,strlen@s
  4420  0019B0  C014  F002         	movff	pad@buf+1,strlen@s+1
  4421  0019B4  EC8B  F010         	call	_strlen	;wreg free
  4422  0019B8  501A               	movf	pad@w^0,w,c
  4423  0019BA  2401               	addwf	?_strlen^0,w,c
  4424  0019BC  6E11               	movwf	?_pad^0,c
  4425  0019BE  501B               	movf	(pad@w+1)^0,w,c
  4426  0019C0  2002               	addwfc	(?_strlen+1)^0,w,c
  4427  0019C2  6E12               	movwf	(?_pad+1)^0,c
  4428  0019C4  0012               	return		;funcret
  4429  0019C6                     __end_of_pad:
  4430                           	callstack 0
  4431                           
  4432 ;; *************** function _strlen *****************
  4433 ;; Defined at:
  4434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  4435 ;; Parameters:    Size  Location     Type
  4436 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4437 ;;		 -> dbuf(32), 
  4438 ;; Auto vars:     Size  Location     Type
  4439 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4440 ;;		 -> dbuf(32), 
  4441 ;; Return value:  Size  Location     Type
  4442 ;;                  2    0[COMRAM] unsigned int 
  4443 ;; Registers used:
  4444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4445 ;; Tracked objects:
  4446 ;;		On entry : 0/0
  4447 ;;		On exit  : 0/0
  4448 ;;		Unchanged: 0/0
  4449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4450 ;;      Params:         2       0       0       0       0       0       0       0       0
  4451 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4453 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4454 ;;Total ram usage:        4 bytes
  4455 ;; Hardware stack levels used: 1
  4456 ;; This function calls:
  4457 ;;		Nothing
  4458 ;; This function is called by:
  4459 ;;		_pad
  4460 ;; This function uses a non-reentrant model
  4461 ;;
  4462                           
  4463                           	psect	text27
  4464  002116                     __ptext27:
  4465                           	callstack 0
  4466  002116                     _strlen:
  4467                           	callstack 24
  4468  002116  C001  F003         	movff	strlen@s,strlen@a
  4469  00211A  C002  F004         	movff	strlen@s+1,strlen@a+1
  4470  00211E  EF93  F010         	goto	l1999
  4471  002122                     l1997:
  4472  002122  4A01               	infsnz	strlen@s^0,f,c
  4473  002124  2A02               	incf	(strlen@s+1)^0,f,c
  4474  002126                     l1999:
  4475  002126  C001  FFD9         	movff	strlen@s,fsr2l
  4476  00212A  C002  FFDA         	movff	strlen@s+1,fsr2h
  4477  00212E  50DF               	movf	indf2,w,c
  4478  002130  A4D8               	btfss	status,2,c
  4479  002132  EF9D  F010         	goto	u1271
  4480  002136  EF9F  F010         	goto	u1270
  4481  00213A                     u1271:
  4482  00213A  EF91  F010         	goto	l1997
  4483  00213E                     u1270:
  4484  00213E  5003               	movf	strlen@a^0,w,c
  4485  002140  5C01               	subwf	strlen@s^0,w,c
  4486  002142  6E01               	movwf	?_strlen^0,c
  4487  002144  5004               	movf	(strlen@a+1)^0,w,c
  4488  002146  5802               	subwfb	(strlen@s+1)^0,w,c
  4489  002148  6E02               	movwf	(?_strlen+1)^0,c
  4490  00214A  0012               	return		;funcret
  4491  00214C                     __end_of_strlen:
  4492                           	callstack 0
  4493                           
  4494 ;; *************** function _fputs *****************
  4495 ;; Defined at:
  4496 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  4497 ;; Parameters:    Size  Location     Type
  4498 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4499 ;;		 -> dbuf(32), 
  4500 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  4501 ;;		 -> sprintf@f(6), 
  4502 ;; Auto vars:     Size  Location     Type
  4503 ;;  i               2   14[COMRAM] int 
  4504 ;;  c               1   13[COMRAM] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2    9[COMRAM] int 
  4507 ;; Registers used:
  4508 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4514 ;;      Params:         4       0       0       0       0       0       0       0       0
  4515 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4516 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4517 ;;      Totals:         7       0       0       0       0       0       0       0       0
  4518 ;;Total ram usage:        7 bytes
  4519 ;; Hardware stack levels used: 1
  4520 ;; Hardware stack levels required when called: 2
  4521 ;; This function calls:
  4522 ;;		_fputc
  4523 ;; This function is called by:
  4524 ;;		_pad
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           	psect	text28
  4529  001F8E                     __ptext28:
  4530                           	callstack 0
  4531  001F8E                     _fputs:
  4532                           	callstack 22
  4533  001F8E  0E00               	movlw	0
  4534  001F90  6E10               	movwf	(fputs@i+1)^0,c
  4535  001F92  0E00               	movlw	0
  4536  001F94  6E0F               	movwf	fputs@i^0,c
  4537  001F96  EFD8  F00F         	goto	l1993
  4538  001F9A                     l1989:
  4539  001F9A  C00E  F001         	movff	fputs@c,fputc@c
  4540  001F9E  6A02               	clrf	(fputc@c+1)^0,c
  4541  001FA0  C00C  F003         	movff	fputs@fp,fputc@fp
  4542  001FA4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  4543  001FA8  EC1B  F00C         	call	_fputc	;wreg free
  4544  001FAC  4A0F               	infsnz	fputs@i^0,f,c
  4545  001FAE  2A10               	incf	(fputs@i+1)^0,f,c
  4546  001FB0                     l1993:
  4547  001FB0  500F               	movf	fputs@i^0,w,c
  4548  001FB2  240A               	addwf	fputs@s^0,w,c
  4549  001FB4  6ED9               	movwf	fsr2l,c
  4550  001FB6  5010               	movf	(fputs@i+1)^0,w,c
  4551  001FB8  200B               	addwfc	(fputs@s+1)^0,w,c
  4552  001FBA  6EDA               	movwf	fsr2h,c
  4553  001FBC  50DF               	movf	indf2,w,c
  4554  001FBE  6E0E               	movwf	fputs@c^0,c
  4555  001FC0  500E               	movf	fputs@c^0,w,c
  4556  001FC2  A4D8               	btfss	status,2,c
  4557  001FC4  EFE6  F00F         	goto	u1261
  4558  001FC8  EFE8  F00F         	goto	u1260
  4559  001FCC                     u1261:
  4560  001FCC  EFCD  F00F         	goto	l1989
  4561  001FD0                     u1260:
  4562  001FD0  0012               	return		;funcret
  4563  001FD2                     __end_of_fputs:
  4564                           	callstack 0
  4565                           
  4566 ;; *************** function _fputc *****************
  4567 ;; Defined at:
  4568 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  c               2    0[COMRAM] int 
  4571 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  4572 ;;		 -> sprintf@f(6), 
  4573 ;; Auto vars:     Size  Location     Type
  4574 ;;		None
  4575 ;; Return value:  Size  Location     Type
  4576 ;;                  2    0[COMRAM] int 
  4577 ;; Registers used:
  4578 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4579 ;; Tracked objects:
  4580 ;;		On entry : 0/0
  4581 ;;		On exit  : 0/0
  4582 ;;		Unchanged: 0/0
  4583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4584 ;;      Params:         4       0       0       0       0       0       0       0       0
  4585 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4586 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4587 ;;      Totals:         9       0       0       0       0       0       0       0       0
  4588 ;;Total ram usage:        9 bytes
  4589 ;; Hardware stack levels used: 1
  4590 ;; Hardware stack levels required when called: 1
  4591 ;; This function calls:
  4592 ;;		_putch
  4593 ;; This function is called by:
  4594 ;;		_pad
  4595 ;;		_vfpfcnvrt
  4596 ;;		_fputs
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           
  4600                           	psect	text29
  4601  001836                     __ptext29:
  4602                           	callstack 0
  4603  001836                     _fputc:
  4604                           	callstack 25
  4605  001836  5003               	movf	fputc@fp^0,w,c
  4606  001838  1004               	iorwf	(fputc@fp+1)^0,w,c
  4607  00183A  B4D8               	btfsc	status,2,c
  4608  00183C  EF22  F00C         	goto	u1221
  4609  001840  EF24  F00C         	goto	u1220
  4610  001844                     u1221:
  4611  001844  EF2D  F00C         	goto	l1977
  4612  001848                     u1220:
  4613  001848  5003               	movf	fputc@fp^0,w,c
  4614  00184A  1004               	iorwf	(fputc@fp+1)^0,w,c
  4615  00184C  A4D8               	btfss	status,2,c
  4616  00184E  EF2B  F00C         	goto	u1231
  4617  001852  EF2D  F00C         	goto	u1230
  4618  001856                     u1231:
  4619  001856  EF32  F00C         	goto	l1979
  4620  00185A                     u1230:
  4621  00185A                     l1977:
  4622  00185A  5001               	movf	fputc@c^0,w,c
  4623  00185C  EC16  F011         	call	_putch
  4624  001860  EF7F  F00C         	goto	l1086
  4625  001864                     l1979:
  4626  001864  EE20 F004          	lfsr	2,4
  4627  001868  5003               	movf	fputc@fp^0,w,c
  4628  00186A  26D9               	addwf	fsr2l,f,c
  4629  00186C  5004               	movf	(fputc@fp+1)^0,w,c
  4630  00186E  22DA               	addwfc	fsr2h,f,c
  4631  001870  50DE               	movf	postinc2,w,c
  4632  001872  10DE               	iorwf	postinc2,w,c
  4633  001874  B4D8               	btfsc	status,2,c
  4634  001876  EF3F  F00C         	goto	u1241
  4635  00187A  EF41  F00C         	goto	u1240
  4636  00187E                     u1241:
  4637  00187E  EF5C  F00C         	goto	l1983
  4638  001882                     u1240:
  4639  001882  EE20 F004          	lfsr	2,4
  4640  001886  5003               	movf	fputc@fp^0,w,c
  4641  001888  26D9               	addwf	fsr2l,f,c
  4642  00188A  5004               	movf	(fputc@fp+1)^0,w,c
  4643  00188C  22DA               	addwfc	fsr2h,f,c
  4644  00188E  EE10 F002          	lfsr	1,2
  4645  001892  5003               	movf	fputc@fp^0,w,c
  4646  001894  26E1               	addwf	fsr1l,f,c
  4647  001896  5004               	movf	(fputc@fp+1)^0,w,c
  4648  001898  22E2               	addwfc	fsr1h,f,c
  4649  00189A  50DE               	movf	postinc2,w,c
  4650  00189C  5CE6               	subwf	postinc1,w,c
  4651  00189E  50E6               	movf	postinc1,w,c
  4652  0018A0  0A80               	xorlw	128
  4653  0018A2  6E09               	movwf	(??_fputc+4)^0,c
  4654  0018A4  50DE               	movf	postinc2,w,c
  4655  0018A6  0A80               	xorlw	128
  4656  0018A8  5809               	subwfb	(??_fputc+4)^0,w,c
  4657  0018AA  B0D8               	btfsc	status,0,c
  4658  0018AC  EF5A  F00C         	goto	u1251
  4659  0018B0  EF5C  F00C         	goto	u1250
  4660  0018B4                     u1251:
  4661  0018B4  EF7F  F00C         	goto	l1086
  4662  0018B8                     u1250:
  4663  0018B8                     l1983:
  4664  0018B8  EE20 F002          	lfsr	2,2
  4665  0018BC  5003               	movf	fputc@fp^0,w,c
  4666  0018BE  26D9               	addwf	fsr2l,f,c
  4667  0018C0  5004               	movf	(fputc@fp+1)^0,w,c
  4668  0018C2  22DA               	addwfc	fsr2h,f,c
  4669  0018C4  CFDE F005          	movff	postinc2,??_fputc
  4670  0018C8  CFDD F006          	movff	postdec2,??_fputc+1
  4671  0018CC  C003  FFD9         	movff	fputc@fp,fsr2l
  4672  0018D0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  4673  0018D4  CFDE F007          	movff	postinc2,??_fputc+2
  4674  0018D8  CFDD F008          	movff	postdec2,??_fputc+3
  4675  0018DC  5005               	movf	??_fputc^0,w,c
  4676  0018DE  2407               	addwf	(??_fputc+2)^0,w,c
  4677  0018E0  6ED9               	movwf	fsr2l,c
  4678  0018E2  5006               	movf	(??_fputc+1)^0,w,c
  4679  0018E4  2008               	addwfc	(??_fputc+3)^0,w,c
  4680  0018E6  6EDA               	movwf	fsr2h,c
  4681  0018E8  C001  FFDF         	movff	fputc@c,indf2
  4682  0018EC  EE20 F002          	lfsr	2,2
  4683  0018F0  5003               	movf	fputc@fp^0,w,c
  4684  0018F2  26D9               	addwf	fsr2l,f,c
  4685  0018F4  5004               	movf	(fputc@fp+1)^0,w,c
  4686  0018F6  22DA               	addwfc	fsr2h,f,c
  4687  0018F8  2ADE               	incf	postinc2,f,c
  4688  0018FA  0E00               	movlw	0
  4689  0018FC  22DD               	addwfc	postdec2,f,c
  4690  0018FE                     l1086:
  4691  0018FE  0012               	return		;funcret
  4692  001900                     __end_of_fputc:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _putch *****************
  4696 ;; Defined at:
  4697 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  c               1    wreg     unsigned char 
  4700 ;; Auto vars:     Size  Location     Type
  4701 ;;  c               1    0[COMRAM] unsigned char 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4711 ;;      Params:         0       0       0       0       0       0       0       0       0
  4712 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4713 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4714 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4715 ;;Total ram usage:        0 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_fputc
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           	psect	text30
  4725  00222C                     __ptext30:
  4726                           	callstack 0
  4727  00222C                     _putch:
  4728                           	callstack 25
  4729  00222C  0012               	return		;funcret
  4730  00222E                     __end_of_putch:
  4731                           	callstack 0
  4732                           
  4733 ;; *************** function _abs *****************
  4734 ;; Defined at:
  4735 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\abs.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  a               2   18[COMRAM] int 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;		None
  4740 ;; Return value:  Size  Location     Type
  4741 ;;                  2   18[COMRAM] int 
  4742 ;; Registers used:
  4743 ;;		wreg, status,2, status,0
  4744 ;; Tracked objects:
  4745 ;;		On entry : 0/0
  4746 ;;		On exit  : 0/0
  4747 ;;		Unchanged: 0/0
  4748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4749 ;;      Params:         2       0       0       0       0       0       0       0       0
  4750 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4751 ;;      Temps:          2       0       0       0       0       0       0       0       0
  4752 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4753 ;;Total ram usage:        4 bytes
  4754 ;; Hardware stack levels used: 1
  4755 ;; This function calls:
  4756 ;;		Nothing
  4757 ;; This function is called by:
  4758 ;;		_dtoa
  4759 ;; This function uses a non-reentrant model
  4760 ;;
  4761                           
  4762                           	psect	text31
  4763  002096                     __ptext31:
  4764                           	callstack 0
  4765  002096                     _abs:
  4766                           	callstack 25
  4767  002096  BE14               	btfsc	(abs@a+1)^0,7,c
  4768  002098  EF58  F010         	goto	u1450
  4769  00209C  5014               	movf	(abs@a+1)^0,w,c
  4770  00209E  E106               	bnz	u1451
  4771  0020A0  0413               	decf	abs@a^0,w,c
  4772  0020A2  B0D8               	btfsc	status,0,c
  4773  0020A4  EF56  F010         	goto	u1451
  4774  0020A8  EF58  F010         	goto	u1450
  4775  0020AC                     u1451:
  4776  0020AC  EF66  F010         	goto	l1071
  4777  0020B0                     u1450:
  4778  0020B0  C013  F015         	movff	abs@a,??_abs
  4779  0020B4  C014  F016         	movff	abs@a+1,??_abs+1
  4780  0020B8  1E15               	comf	??_abs^0,f,c
  4781  0020BA  1E16               	comf	(??_abs+1)^0,f,c
  4782  0020BC  4A15               	infsnz	??_abs^0,f,c
  4783  0020BE  2A16               	incf	(??_abs+1)^0,f,c
  4784  0020C0  C015  F013         	movff	??_abs,?_abs
  4785  0020C4  C016  F014         	movff	??_abs+1,?_abs+1
  4786  0020C8  EF6A  F010         	goto	l1074
  4787  0020CC                     l1071:
  4788  0020CC  C013  F013         	movff	abs@a,?_abs
  4789  0020D0  C014  F014         	movff	abs@a+1,?_abs+1
  4790  0020D4                     l1074:
  4791  0020D4  0012               	return		;funcret
  4792  0020D6                     __end_of_abs:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function ___aomod *****************
  4796 ;; Defined at:
  4797 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aomod.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  dividend        8    0[COMRAM] long long 
  4800 ;;  divisor         8    8[COMRAM] long long 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  sign            1   17[COMRAM] unsigned char 
  4803 ;;  counter         1   16[COMRAM] unsigned char 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  8    0[COMRAM] long long 
  4806 ;; Registers used:
  4807 ;;		wreg, status,2, status,0
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4813 ;;      Params:        16       0       0       0       0       0       0       0       0
  4814 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4816 ;;      Totals:        18       0       0       0       0       0       0       0       0
  4817 ;;Total ram usage:       18 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_dtoa
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           	psect	text32
  4827  001414                     __ptext32:
  4828                           	callstack 0
  4829  001414                     ___aomod:
  4830                           	callstack 25
  4831  001414  0E00               	movlw	0
  4832  001416  6E12               	movwf	___aomod@sign^0,c
  4833  001418  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  4834  00141A  EF13  F00A         	goto	u1350
  4835  00141E  EF11  F00A         	goto	u1351
  4836  001422                     u1351:
  4837  001422  EF25  F00A         	goto	l2057
  4838  001426                     u1350:
  4839  001426  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4840  001428  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4841  00142A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4842  00142C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4843  00142E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4844  001430  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4845  001432  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4846  001434  6C01               	negf	___aomod@dividend^0,c
  4847  001436  0E00               	movlw	0
  4848  001438  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4849  00143A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4850  00143C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4851  00143E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4852  001440  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4853  001442  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4854  001444  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4855  001446  0E01               	movlw	1
  4856  001448  6E12               	movwf	___aomod@sign^0,c
  4857  00144A                     l2057:
  4858  00144A  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  4859  00144C  EF2C  F00A         	goto	u1360
  4860  001450  EF2A  F00A         	goto	u1361
  4861  001454                     u1361:
  4862  001454  EF3C  F00A         	goto	l2061
  4863  001458                     u1360:
  4864  001458  1E10               	comf	(___aomod@divisor+7)^0,f,c
  4865  00145A  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  4866  00145C  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  4867  00145E  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  4868  001460  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  4869  001462  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  4870  001464  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  4871  001466  6C09               	negf	___aomod@divisor^0,c
  4872  001468  0E00               	movlw	0
  4873  00146A  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  4874  00146C  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  4875  00146E  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  4876  001470  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  4877  001472  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  4878  001474  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  4879  001476  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  4880  001478                     l2061:
  4881  001478  5009               	movf	___aomod@divisor^0,w,c
  4882  00147A  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  4883  00147C  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  4884  00147E  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  4885  001480  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  4886  001482  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  4887  001484  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  4888  001486  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  4889  001488  B4D8               	btfsc	status,2,c
  4890  00148A  EF49  F00A         	goto	u1371
  4891  00148E  EF4B  F00A         	goto	u1370
  4892  001492                     u1371:
  4893  001492  EF93  F00A         	goto	l2077
  4894  001496                     u1370:
  4895  001496  0E01               	movlw	1
  4896  001498  6E11               	movwf	___aomod@counter^0,c
  4897  00149A  EF59  F00A         	goto	l2067
  4898  00149E                     l2065:
  4899  00149E  90D8               	bcf	status,0,c
  4900  0014A0  3609               	rlcf	___aomod@divisor^0,f,c
  4901  0014A2  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  4902  0014A4  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  4903  0014A6  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  4904  0014A8  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  4905  0014AA  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  4906  0014AC  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  4907  0014AE  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  4908  0014B0  2A11               	incf	___aomod@counter^0,f,c
  4909  0014B2                     l2067:
  4910  0014B2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  4911  0014B4  EF5E  F00A         	goto	u1381
  4912  0014B8  EF60  F00A         	goto	u1380
  4913  0014BC                     u1381:
  4914  0014BC  EF4F  F00A         	goto	l2065
  4915  0014C0                     u1380:
  4916  0014C0                     l2069:
  4917  0014C0  5009               	movf	___aomod@divisor^0,w,c
  4918  0014C2  5C01               	subwf	___aomod@dividend^0,w,c
  4919  0014C4  500A               	movf	(___aomod@divisor+1)^0,w,c
  4920  0014C6  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  4921  0014C8  500B               	movf	(___aomod@divisor+2)^0,w,c
  4922  0014CA  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  4923  0014CC  500C               	movf	(___aomod@divisor+3)^0,w,c
  4924  0014CE  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  4925  0014D0  500D               	movf	(___aomod@divisor+4)^0,w,c
  4926  0014D2  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  4927  0014D4  500E               	movf	(___aomod@divisor+5)^0,w,c
  4928  0014D6  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  4929  0014D8  500F               	movf	(___aomod@divisor+6)^0,w,c
  4930  0014DA  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  4931  0014DC  5010               	movf	(___aomod@divisor+7)^0,w,c
  4932  0014DE  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  4933  0014E0  A0D8               	btfss	status,0,c
  4934  0014E2  EF75  F00A         	goto	u1391
  4935  0014E6  EF77  F00A         	goto	u1390
  4936  0014EA                     u1391:
  4937  0014EA  EF87  F00A         	goto	l2073
  4938  0014EE                     u1390:
  4939  0014EE  5009               	movf	___aomod@divisor^0,w,c
  4940  0014F0  5E01               	subwf	___aomod@dividend^0,f,c
  4941  0014F2  500A               	movf	(___aomod@divisor+1)^0,w,c
  4942  0014F4  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  4943  0014F6  500B               	movf	(___aomod@divisor+2)^0,w,c
  4944  0014F8  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  4945  0014FA  500C               	movf	(___aomod@divisor+3)^0,w,c
  4946  0014FC  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  4947  0014FE  500D               	movf	(___aomod@divisor+4)^0,w,c
  4948  001500  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  4949  001502  500E               	movf	(___aomod@divisor+5)^0,w,c
  4950  001504  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  4951  001506  500F               	movf	(___aomod@divisor+6)^0,w,c
  4952  001508  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  4953  00150A  5010               	movf	(___aomod@divisor+7)^0,w,c
  4954  00150C  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  4955  00150E                     l2073:
  4956  00150E  90D8               	bcf	status,0,c
  4957  001510  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  4958  001512  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  4959  001514  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  4960  001516  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  4961  001518  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  4962  00151A  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  4963  00151C  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  4964  00151E  3209               	rrcf	___aomod@divisor^0,f,c
  4965  001520  2E11               	decfsz	___aomod@counter^0,f,c
  4966  001522  EF60  F00A         	goto	l2069
  4967  001526                     l2077:
  4968  001526  5012               	movf	___aomod@sign^0,w,c
  4969  001528  B4D8               	btfsc	status,2,c
  4970  00152A  EF99  F00A         	goto	u1401
  4971  00152E  EF9B  F00A         	goto	u1400
  4972  001532                     u1401:
  4973  001532  EFAB  F00A         	goto	l2081
  4974  001536                     u1400:
  4975  001536  1E08               	comf	(___aomod@dividend+7)^0,f,c
  4976  001538  1E07               	comf	(___aomod@dividend+6)^0,f,c
  4977  00153A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  4978  00153C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  4979  00153E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  4980  001540  1E03               	comf	(___aomod@dividend+2)^0,f,c
  4981  001542  1E02               	comf	(___aomod@dividend+1)^0,f,c
  4982  001544  6C01               	negf	___aomod@dividend^0,c
  4983  001546  0E00               	movlw	0
  4984  001548  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  4985  00154A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  4986  00154C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  4987  00154E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  4988  001550  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  4989  001552  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  4990  001554  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  4991  001556                     l2081:
  4992  001556  C001  F001         	movff	___aomod@dividend,?___aomod
  4993  00155A  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  4994  00155E  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  4995  001562  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  4996  001566  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  4997  00156A  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  4998  00156E  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  4999  001572  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  5000  001576  0012               	return		;funcret
  5001  001578                     __end_of___aomod:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function ___aodiv *****************
  5005 ;; Defined at:
  5006 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aodiv.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  dividend        8    0[COMRAM] long long 
  5009 ;;  divisor         8    8[COMRAM] long long 
  5010 ;; Auto vars:     Size  Location     Type
  5011 ;;  quotient        8   18[COMRAM] long long 
  5012 ;;  sign            1   17[COMRAM] unsigned char 
  5013 ;;  counter         1   16[COMRAM] unsigned char 
  5014 ;; Return value:  Size  Location     Type
  5015 ;;                  8    0[COMRAM] long long 
  5016 ;; Registers used:
  5017 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5018 ;; Tracked objects:
  5019 ;;		On entry : 0/0
  5020 ;;		On exit  : 0/0
  5021 ;;		Unchanged: 0/0
  5022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5023 ;;      Params:        16       0       0       0       0       0       0       0       0
  5024 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5025 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5026 ;;      Totals:        26       0       0       0       0       0       0       0       0
  5027 ;;Total ram usage:       26 bytes
  5028 ;; Hardware stack levels used: 1
  5029 ;; This function calls:
  5030 ;;		Nothing
  5031 ;; This function is called by:
  5032 ;;		_dtoa
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text33
  5037  00128C                     __ptext33:
  5038                           	callstack 0
  5039  00128C                     ___aodiv:
  5040                           	callstack 25
  5041  00128C  0E00               	movlw	0
  5042  00128E  6E12               	movwf	___aodiv@sign^0,c
  5043  001290  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  5044  001292  EF4F  F009         	goto	u1280
  5045  001296  EF4D  F009         	goto	u1281
  5046  00129A                     u1281:
  5047  00129A  EF61  F009         	goto	l2013
  5048  00129E                     u1280:
  5049  00129E  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  5050  0012A0  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  5051  0012A2  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  5052  0012A4  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  5053  0012A6  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  5054  0012A8  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  5055  0012AA  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  5056  0012AC  6C09               	negf	___aodiv@divisor^0,c
  5057  0012AE  0E00               	movlw	0
  5058  0012B0  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  5059  0012B2  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  5060  0012B4  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  5061  0012B6  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  5062  0012B8  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  5063  0012BA  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  5064  0012BC  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  5065  0012BE  0E01               	movlw	1
  5066  0012C0  6E12               	movwf	___aodiv@sign^0,c
  5067  0012C2                     l2013:
  5068  0012C2  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  5069  0012C4  EF68  F009         	goto	u1290
  5070  0012C8  EF66  F009         	goto	u1291
  5071  0012CC                     u1291:
  5072  0012CC  EF7A  F009         	goto	l2019
  5073  0012D0                     u1290:
  5074  0012D0  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  5075  0012D2  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  5076  0012D4  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  5077  0012D6  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  5078  0012D8  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  5079  0012DA  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  5080  0012DC  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  5081  0012DE  6C01               	negf	___aodiv@dividend^0,c
  5082  0012E0  0E00               	movlw	0
  5083  0012E2  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  5084  0012E4  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  5085  0012E6  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  5086  0012E8  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  5087  0012EA  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  5088  0012EC  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  5089  0012EE  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  5090  0012F0  0E01               	movlw	1
  5091  0012F2  1A12               	xorwf	___aodiv@sign^0,f,c
  5092  0012F4                     l2019:
  5093  0012F4  EE20  F013         	lfsr	2,___aodiv@quotient
  5094  0012F8  0E07               	movlw	7
  5095  0012FA                     u1301:
  5096  0012FA  6ADE               	clrf	postinc2,c
  5097  0012FC  06E8               	decf	wreg,f,c
  5098  0012FE  E2FD               	bc	u1301
  5099  001300  5009               	movf	___aodiv@divisor^0,w,c
  5100  001302  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  5101  001304  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  5102  001306  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  5103  001308  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  5104  00130A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  5105  00130C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  5106  00130E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  5107  001310  B4D8               	btfsc	status,2,c
  5108  001312  EF8D  F009         	goto	u1311
  5109  001316  EF8F  F009         	goto	u1310
  5110  00131A                     u1311:
  5111  00131A  EFE1  F009         	goto	l2041
  5112  00131E                     u1310:
  5113  00131E  0E01               	movlw	1
  5114  001320  6E11               	movwf	___aodiv@counter^0,c
  5115  001322  EF9D  F009         	goto	l2027
  5116  001326                     l2025:
  5117  001326  90D8               	bcf	status,0,c
  5118  001328  3609               	rlcf	___aodiv@divisor^0,f,c
  5119  00132A  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  5120  00132C  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  5121  00132E  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  5122  001330  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  5123  001332  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  5124  001334  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  5125  001336  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  5126  001338  2A11               	incf	___aodiv@counter^0,f,c
  5127  00133A                     l2027:
  5128  00133A  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  5129  00133C  EFA2  F009         	goto	u1321
  5130  001340  EFA4  F009         	goto	u1320
  5131  001344                     u1321:
  5132  001344  EF93  F009         	goto	l2025
  5133  001348                     u1320:
  5134  001348                     l2029:
  5135  001348  90D8               	bcf	status,0,c
  5136  00134A  3613               	rlcf	___aodiv@quotient^0,f,c
  5137  00134C  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  5138  00134E  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  5139  001350  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  5140  001352  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  5141  001354  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  5142  001356  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  5143  001358  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  5144  00135A  5009               	movf	___aodiv@divisor^0,w,c
  5145  00135C  5C01               	subwf	___aodiv@dividend^0,w,c
  5146  00135E  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5147  001360  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  5148  001362  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5149  001364  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  5150  001366  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5151  001368  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  5152  00136A  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5153  00136C  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  5154  00136E  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5155  001370  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  5156  001372  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5157  001374  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  5158  001376  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5159  001378  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  5160  00137A  A0D8               	btfss	status,0,c
  5161  00137C  EFC2  F009         	goto	u1331
  5162  001380  EFC4  F009         	goto	u1330
  5163  001384                     u1331:
  5164  001384  EFD5  F009         	goto	l2037
  5165  001388                     u1330:
  5166  001388  5009               	movf	___aodiv@divisor^0,w,c
  5167  00138A  5E01               	subwf	___aodiv@dividend^0,f,c
  5168  00138C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  5169  00138E  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  5170  001390  500B               	movf	(___aodiv@divisor+2)^0,w,c
  5171  001392  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  5172  001394  500C               	movf	(___aodiv@divisor+3)^0,w,c
  5173  001396  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  5174  001398  500D               	movf	(___aodiv@divisor+4)^0,w,c
  5175  00139A  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  5176  00139C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  5177  00139E  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  5178  0013A0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  5179  0013A2  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  5180  0013A4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  5181  0013A6  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  5182  0013A8  8013               	bsf	___aodiv@quotient^0,0,c
  5183  0013AA                     l2037:
  5184  0013AA  90D8               	bcf	status,0,c
  5185  0013AC  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  5186  0013AE  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  5187  0013B0  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  5188  0013B2  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  5189  0013B4  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  5190  0013B6  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  5191  0013B8  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  5192  0013BA  3209               	rrcf	___aodiv@divisor^0,f,c
  5193  0013BC  2E11               	decfsz	___aodiv@counter^0,f,c
  5194  0013BE  EFA4  F009         	goto	l2029
  5195  0013C2                     l2041:
  5196  0013C2  5012               	movf	___aodiv@sign^0,w,c
  5197  0013C4  B4D8               	btfsc	status,2,c
  5198  0013C6  EFE7  F009         	goto	u1341
  5199  0013CA  EFE9  F009         	goto	u1340
  5200  0013CE                     u1341:
  5201  0013CE  EFF9  F009         	goto	l2045
  5202  0013D2                     u1340:
  5203  0013D2  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  5204  0013D4  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  5205  0013D6  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  5206  0013D8  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  5207  0013DA  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  5208  0013DC  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  5209  0013DE  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  5210  0013E0  6C13               	negf	___aodiv@quotient^0,c
  5211  0013E2  0E00               	movlw	0
  5212  0013E4  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  5213  0013E6  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  5214  0013E8  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  5215  0013EA  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  5216  0013EC  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  5217  0013EE  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  5218  0013F0  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  5219  0013F2                     l2045:
  5220  0013F2  C013  F001         	movff	___aodiv@quotient,?___aodiv
  5221  0013F6  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  5222  0013FA  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  5223  0013FE  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  5224  001402  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  5225  001406  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  5226  00140A  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  5227  00140E  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  5228  001412  0012               	return		;funcret
  5229  001414                     __end_of___aodiv:
  5230                           	callstack 0
  5231                           
  5232 ;; *************** function _LCD_String_xy *****************
  5233 ;; Defined at:
  5234 ;;		line 53 in file "LCD.c"
  5235 ;; Parameters:    Size  Location     Type
  5236 ;;  row             1    wreg     unsigned char 
  5237 ;;  pos             1    4[COMRAM] unsigned char 
  5238 ;;  msg             2    5[COMRAM] PTR const unsigned char 
  5239 ;;		 -> imprimir@aux_luz(16), imprimir@aux_temp(16), imprimir@aux_dist(16), STR_1(7), 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;  row             1    7[COMRAM] unsigned char 
  5242 ;;  location        1    8[COMRAM] unsigned char 
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5252 ;;      Params:         3       0       0       0       0       0       0       0       0
  5253 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5254 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5255 ;;      Totals:         5       0       0       0       0       0       0       0       0
  5256 ;;Total ram usage:        5 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 2
  5259 ;; This function calls:
  5260 ;;		_LCD_Command
  5261 ;;		_LCD_String
  5262 ;; This function is called by:
  5263 ;;		_imprimir
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text34
  5268  0020D6                     __ptext34:
  5269                           	callstack 0
  5270  0020D6                     _LCD_String_xy:
  5271                           	callstack 27
  5272                           
  5273                           ;incstack = 0
  5274                           ;LCD_String_xy@row stored from wreg
  5275  0020D6  6E08               	movwf	LCD_String_xy@row^0,c
  5276  0020D8                     
  5277                           ;LCD.c: 55:     if (row <= 1) {
  5278  0020D8  0E02               	movlw	2
  5279  0020DA  6008               	cpfslt	LCD_String_xy@row^0,c
  5280  0020DC  EF72  F010         	goto	u1721
  5281  0020E0  EF74  F010         	goto	u1720
  5282  0020E4                     u1721:
  5283  0020E4  EF7D  F010         	goto	l2305
  5284  0020E8                     u1720:
  5285  0020E8                     
  5286                           ;LCD.c: 56:         location = (0x80) | ((pos) & 0x0f);
  5287  0020E8  5005               	movf	LCD_String_xy@pos^0,w,c
  5288  0020EA  0B0F               	andlw	15
  5289  0020EC  0980               	iorlw	128
  5290  0020EE  6E09               	movwf	LCD_String_xy@location^0,c
  5291  0020F0                     
  5292                           ;LCD.c: 57:         LCD_Command(location);
  5293  0020F0  5009               	movf	LCD_String_xy@location^0,w,c
  5294  0020F2  EC56  F00F         	call	_LCD_Command
  5295                           
  5296                           ;LCD.c: 58:     } else {
  5297  0020F6  EF84  F010         	goto	l2309
  5298  0020FA                     l2305:
  5299                           
  5300                           ;LCD.c: 59:         location = (0xc0) | ((pos) & 0x0f);
  5301  0020FA  5005               	movf	LCD_String_xy@pos^0,w,c
  5302  0020FC  0B0F               	andlw	15
  5303  0020FE  09C0               	iorlw	192
  5304  002100  6E09               	movwf	LCD_String_xy@location^0,c
  5305  002102                     
  5306                           ;LCD.c: 60:         LCD_Command(location);
  5307  002102  5009               	movf	LCD_String_xy@location^0,w,c
  5308  002104  EC56  F00F         	call	_LCD_Command
  5309  002108                     l2309:
  5310                           
  5311                           ;LCD.c: 64:     LCD_String(msg);
  5312  002108  C006  F003         	movff	LCD_String_xy@msg,LCD_String@msg
  5313  00210C  C007  F004         	movff	LCD_String_xy@msg+1,LCD_String@msg+1
  5314  002110  ECD6  F00E         	call	_LCD_String	;wreg free
  5315  002114  0012               	return		;funcret
  5316  002116                     __end_of_LCD_String_xy:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function _LCD_String *****************
  5320 ;; Defined at:
  5321 ;;		line 45 in file "LCD.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  msg             2    2[COMRAM] PTR const unsigned char 
  5324 ;;		 -> imprimir@aux_luz(16), imprimir@aux_temp(16), imprimir@aux_dist(16), STR_1(7), 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;		None
  5327 ;; Return value:  Size  Location     Type
  5328 ;;                  1    wreg      void 
  5329 ;; Registers used:
  5330 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5331 ;; Tracked objects:
  5332 ;;		On entry : 0/0
  5333 ;;		On exit  : 0/0
  5334 ;;		Unchanged: 0/0
  5335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5336 ;;      Params:         2       0       0       0       0       0       0       0       0
  5337 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5338 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5339 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5340 ;;Total ram usage:        2 bytes
  5341 ;; Hardware stack levels used: 1
  5342 ;; Hardware stack levels required when called: 1
  5343 ;; This function calls:
  5344 ;;		_LCD_Char
  5345 ;; This function is called by:
  5346 ;;		_LCD_String_xy
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	text35
  5351  001DAC                     __ptext35:
  5352                           	callstack 0
  5353  001DAC                     _LCD_String:
  5354                           	callstack 27
  5355  001DAC                     
  5356                           ;LCD.c: 46:     while ((*msg) != 0) {
  5357  001DAC  EFEC  F00E         	goto	l2271
  5358  001DB0                     l2267:
  5359                           
  5360                           ;LCD.c: 47:         LCD_Char(*msg);
  5361  001DB0  C003  FFF6         	movff	LCD_String@msg,tblptrl
  5362  001DB4  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  5363  001DB8  6AF8               	clrf	tblptru,c
  5364  001DBA  0E07               	movlw	(high __ramtop+-1)
  5365  001DBC  64F7               	cpfsgt	tblptrh,c
  5366  001DBE  D003               	bra	u1667
  5367  001DC0  0008               	tblrd		*
  5368  001DC2  50F5               	movf	tablat,w,c
  5369  001DC4  D005               	bra	u1660
  5370  001DC6                     u1667:
  5371  001DC6  CFF6 FFE9          	movff	tblptrl,fsr0l
  5372  001DCA  CFF7 FFEA          	movff	tblptrh,fsr0h
  5373  001DCE  50EF               	movf	indf0,w,c
  5374  001DD0                     u1660:
  5375  001DD0  EC2E  F00F         	call	_LCD_Char
  5376  001DD4                     
  5377                           ;LCD.c: 48:         msg++;
  5378  001DD4  4A03               	infsnz	LCD_String@msg^0,f,c
  5379  001DD6  2A04               	incf	(LCD_String@msg+1)^0,f,c
  5380  001DD8                     l2271:
  5381                           
  5382                           ;LCD.c: 46:     while ((*msg) != 0) {
  5383  001DD8  C003  FFF6         	movff	LCD_String@msg,tblptrl
  5384  001DDC  C004  FFF7         	movff	LCD_String@msg+1,tblptrh
  5385  001DE0  6AF8               	clrf	tblptru,c
  5386  001DE2  0E07               	movlw	(high __ramtop+-1)
  5387  001DE4  64F7               	cpfsgt	tblptrh,c
  5388  001DE6  D003               	bra	u1677
  5389  001DE8  0008               	tblrd		*
  5390  001DEA  50F5               	movf	tablat,w,c
  5391  001DEC  D005               	bra	u1670
  5392  001DEE                     u1677:
  5393  001DEE  CFF6 FFE9          	movff	tblptrl,fsr0l
  5394  001DF2  CFF7 FFEA          	movff	tblptrh,fsr0h
  5395  001DF6  50EF               	movf	indf0,w,c
  5396  001DF8                     u1670:
  5397  001DF8  0900               	iorlw	0
  5398  001DFA  A4D8               	btfss	status,2,c
  5399  001DFC  EF02  F00F         	goto	u1681
  5400  001E00  EF04  F00F         	goto	u1680
  5401  001E04                     u1681:
  5402  001E04  EFD8  F00E         	goto	l2267
  5403  001E08                     u1680:
  5404  001E08  0012               	return		;funcret
  5405  001E0A                     __end_of_LCD_String:
  5406                           	callstack 0
  5407                           
  5408 ;; *************** function _LCD_Char *****************
  5409 ;; Defined at:
  5410 ;;		line 29 in file "LCD.c"
  5411 ;; Parameters:    Size  Location     Type
  5412 ;;  dat             1    wreg     unsigned char 
  5413 ;; Auto vars:     Size  Location     Type
  5414 ;;  dat             1    1[COMRAM] unsigned char 
  5415 ;; Return value:  Size  Location     Type
  5416 ;;                  1    wreg      void 
  5417 ;; Registers used:
  5418 ;;		wreg, status,2, status,0
  5419 ;; Tracked objects:
  5420 ;;		On entry : 0/0
  5421 ;;		On exit  : 0/0
  5422 ;;		Unchanged: 0/0
  5423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5424 ;;      Params:         0       0       0       0       0       0       0       0       0
  5425 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5426 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5427 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5428 ;;Total ram usage:        2 bytes
  5429 ;; Hardware stack levels used: 1
  5430 ;; This function calls:
  5431 ;;		Nothing
  5432 ;; This function is called by:
  5433 ;;		_LCD_String
  5434 ;;		_mostrar_emoticon
  5435 ;;		_LCD_Custom_Char
  5436 ;; This function uses a non-reentrant model
  5437 ;;
  5438                           
  5439                           	psect	text36
  5440  001E5C                     __ptext36:
  5441                           	callstack 0
  5442  001E5C                     _LCD_Char:
  5443                           	callstack 28
  5444                           
  5445                           ;incstack = 0
  5446                           ;LCD_Char@dat stored from wreg
  5447  001E5C  6E02               	movwf	LCD_Char@dat^0,c
  5448  001E5E                     
  5449                           ;LCD.c: 30:     LATD = (LATD & 0x0f) | (0xF0 & dat);
  5450  001E5E  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  5451  001E62  0EF0               	movlw	240
  5452  001E64  1601               	andwf	??_LCD_Char^0,f,c
  5453  001E66  508C               	movf	140,w,c	;volatile
  5454  001E68  0B0F               	andlw	15
  5455  001E6A  1001               	iorwf	??_LCD_Char^0,w,c
  5456  001E6C  6E8C               	movwf	140,c	;volatile
  5457  001E6E                     
  5458                           ;LCD.c: 31:     LATD0 = 1;
  5459  001E6E  808C               	bsf	3980,0,c	;volatile
  5460  001E70                     
  5461                           ;LCD.c: 32:     LATD1 = 1;
  5462  001E70  828C               	bsf	3980,1,c	;volatile
  5463  001E72                     
  5464                           ;LCD.c: 33:     __nop();
  5465  001E72  F000               	nop	
  5466  001E74                     
  5467                           ;LCD.c: 34:     LATD1 = 0;
  5468  001E74  928C               	bcf	3980,1,c	;volatile
  5469  001E76                     
  5470                           ;LCD.c: 35:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5471  001E76  0E03               	movlw	3
  5472  001E78  6E01               	movwf	??_LCD_Char^0,c
  5473  001E7A  0E98               	movlw	152
  5474  001E7C                     u2427:
  5475  001E7C  2EE8               	decfsz	wreg,f,c
  5476  001E7E  D7FE               	bra	u2427
  5477  001E80  2E01               	decfsz	??_LCD_Char^0,f,c
  5478  001E82  D7FC               	bra	u2427
  5479  001E84                     
  5480                           ;LCD.c: 36:     LATD = (LATD & 0x0f) | (dat << 4);
  5481  001E84  C002  F001         	movff	LCD_Char@dat,??_LCD_Char
  5482  001E88  3A01               	swapf	??_LCD_Char^0,f,c
  5483  001E8A  0EF0               	movlw	240
  5484  001E8C  1601               	andwf	??_LCD_Char^0,f,c
  5485  001E8E  508C               	movf	140,w,c	;volatile
  5486  001E90  0B0F               	andlw	15
  5487  001E92  1001               	iorwf	??_LCD_Char^0,w,c
  5488  001E94  6E8C               	movwf	140,c	;volatile
  5489  001E96                     
  5490                           ;LCD.c: 37:     LATD1 = 1;
  5491  001E96  828C               	bsf	3980,1,c	;volatile
  5492  001E98                     
  5493                           ;LCD.c: 38:     __nop();
  5494  001E98  F000               	nop	
  5495  001E9A                     
  5496                           ;LCD.c: 39:     LATD1 = 0;
  5497  001E9A  928C               	bcf	3980,1,c	;volatile
  5498                           
  5499                           ;LCD.c: 40:     _delay((unsigned long)((3)*(8000000/4000.0)));
  5500  001E9C  0E08               	movlw	8
  5501  001E9E  6E01               	movwf	??_LCD_Char^0,c
  5502  001EA0  0ECA               	movlw	202
  5503  001EA2                     u2437:
  5504  001EA2  2EE8               	decfsz	wreg,f,c
  5505  001EA4  D7FE               	bra	u2437
  5506  001EA6  2E01               	decfsz	??_LCD_Char^0,f,c
  5507  001EA8  D7FC               	bra	u2437
  5508  001EAA  0012               	return		;funcret
  5509  001EAC                     __end_of_LCD_Char:
  5510                           	callstack 0
  5511                           
  5512 ;; *************** function _LCD_Clear *****************
  5513 ;; Defined at:
  5514 ;;		line 79 in file "LCD.c"
  5515 ;; Parameters:    Size  Location     Type
  5516 ;;		None
  5517 ;; Auto vars:     Size  Location     Type
  5518 ;;		None
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  1    wreg      void 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0, cstack
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5528 ;;      Params:         0       0       0       0       0       0       0       0       0
  5529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  5532 ;;Total ram usage:        0 bytes
  5533 ;; Hardware stack levels used: 1
  5534 ;; Hardware stack levels required when called: 1
  5535 ;; This function calls:
  5536 ;;		_LCD_Command
  5537 ;; This function is called by:
  5538 ;;		_imprimir
  5539 ;; This function uses a non-reentrant model
  5540 ;;
  5541                           
  5542                           	psect	text37
  5543  002224                     __ptext37:
  5544                           	callstack 0
  5545  002224                     _LCD_Clear:
  5546                           	callstack 28
  5547  002224                     
  5548                           ;LCD.c: 80:     LCD_Command(0x01);
  5549  002224  0E01               	movlw	1
  5550  002226  EC56  F00F         	call	_LCD_Command
  5551  00222A  0012               	return		;funcret
  5552  00222C                     __end_of_LCD_Clear:
  5553                           	callstack 0
  5554                           
  5555 ;; *************** function _LCD_Command *****************
  5556 ;; Defined at:
  5557 ;;		line 15 in file "LCD.c"
  5558 ;; Parameters:    Size  Location     Type
  5559 ;;  cmd             1    wreg     unsigned char 
  5560 ;; Auto vars:     Size  Location     Type
  5561 ;;  cmd             1    1[COMRAM] unsigned char 
  5562 ;; Return value:  Size  Location     Type
  5563 ;;                  1    wreg      void 
  5564 ;; Registers used:
  5565 ;;		wreg, status,2, status,0
  5566 ;; Tracked objects:
  5567 ;;		On entry : 0/0
  5568 ;;		On exit  : 0/0
  5569 ;;		Unchanged: 0/0
  5570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5571 ;;      Params:         0       0       0       0       0       0       0       0       0
  5572 ;;      Locals:         1       0       0       0       0       0       0       0       0
  5573 ;;      Temps:          1       0       0       0       0       0       0       0       0
  5574 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5575 ;;Total ram usage:        2 bytes
  5576 ;; Hardware stack levels used: 1
  5577 ;; This function calls:
  5578 ;;		Nothing
  5579 ;; This function is called by:
  5580 ;;		_imprimir
  5581 ;;		_inicializar_lcd
  5582 ;;		_LCD_String_xy
  5583 ;;		_LCD_Clear
  5584 ;;		_mostrar_emoticon
  5585 ;;		_LCD_Custom_Char
  5586 ;;		_LCD_xy
  5587 ;; This function uses a non-reentrant model
  5588 ;;
  5589                           
  5590                           	psect	text38
  5591  001EAC                     __ptext38:
  5592                           	callstack 0
  5593  001EAC                     _LCD_Command:
  5594                           	callstack 28
  5595                           
  5596                           ;incstack = 0
  5597                           ;LCD_Command@cmd stored from wreg
  5598  001EAC  6E02               	movwf	LCD_Command@cmd^0,c
  5599  001EAE                     
  5600                           ;LCD.c: 16:     LATD = (LATD & 0x0f) | (0xF0 & cmd);
  5601  001EAE  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  5602  001EB2  0EF0               	movlw	240
  5603  001EB4  1601               	andwf	??_LCD_Command^0,f,c
  5604  001EB6  508C               	movf	140,w,c	;volatile
  5605  001EB8  0B0F               	andlw	15
  5606  001EBA  1001               	iorwf	??_LCD_Command^0,w,c
  5607  001EBC  6E8C               	movwf	140,c	;volatile
  5608  001EBE                     
  5609                           ;LCD.c: 17:     LATD0 = 0;
  5610  001EBE  908C               	bcf	3980,0,c	;volatile
  5611  001EC0                     
  5612                           ;LCD.c: 18:     LATD1 = 1;
  5613  001EC0  828C               	bsf	3980,1,c	;volatile
  5614  001EC2                     
  5615                           ;LCD.c: 19:     __nop();
  5616  001EC2  F000               	nop	
  5617  001EC4                     
  5618                           ;LCD.c: 20:     LATD1 = 0;
  5619  001EC4  928C               	bcf	3980,1,c	;volatile
  5620  001EC6                     
  5621                           ;LCD.c: 21:     _delay((unsigned long)((1)*(8000000/4000.0)));
  5622  001EC6  0E03               	movlw	3
  5623  001EC8  6E01               	movwf	??_LCD_Command^0,c
  5624  001ECA  0E98               	movlw	152
  5625  001ECC                     u2447:
  5626  001ECC  2EE8               	decfsz	wreg,f,c
  5627  001ECE  D7FE               	bra	u2447
  5628  001ED0  2E01               	decfsz	??_LCD_Command^0,f,c
  5629  001ED2  D7FC               	bra	u2447
  5630  001ED4                     
  5631                           ;LCD.c: 22:     LATD = (LATD & 0x0f) | (cmd << 4);
  5632  001ED4  C002  F001         	movff	LCD_Command@cmd,??_LCD_Command
  5633  001ED8  3A01               	swapf	??_LCD_Command^0,f,c
  5634  001EDA  0EF0               	movlw	240
  5635  001EDC  1601               	andwf	??_LCD_Command^0,f,c
  5636  001EDE  508C               	movf	140,w,c	;volatile
  5637  001EE0  0B0F               	andlw	15
  5638  001EE2  1001               	iorwf	??_LCD_Command^0,w,c
  5639  001EE4  6E8C               	movwf	140,c	;volatile
  5640  001EE6                     
  5641                           ;LCD.c: 23:     LATD1 = 1;
  5642  001EE6  828C               	bsf	3980,1,c	;volatile
  5643  001EE8                     
  5644                           ;LCD.c: 24:     __nop();
  5645  001EE8  F000               	nop	
  5646  001EEA                     
  5647                           ;LCD.c: 25:     LATD1 = 0;
  5648  001EEA  928C               	bcf	3980,1,c	;volatile
  5649                           
  5650                           ;LCD.c: 26:     _delay((unsigned long)((3)*(8000000/4000.0)));
  5651  001EEC  0E08               	movlw	8
  5652  001EEE  6E01               	movwf	??_LCD_Command^0,c
  5653  001EF0  0ECA               	movlw	202
  5654  001EF2                     u2457:
  5655  001EF2  2EE8               	decfsz	wreg,f,c
  5656  001EF4  D7FE               	bra	u2457
  5657  001EF6  2E01               	decfsz	??_LCD_Command^0,f,c
  5658  001EF8  D7FC               	bra	u2457
  5659  001EFA  0012               	return		;funcret
  5660  001EFC                     __end_of_LCD_Command:
  5661                           	callstack 0
  5662                           
  5663 ;; *************** function _encender_leds *****************
  5664 ;; Defined at:
  5665 ;;		line 12 in file "Leds.c"
  5666 ;; Parameters:    Size  Location     Type
  5667 ;;  valor           2   11[COMRAM] int 
  5668 ;; Auto vars:     Size  Location     Type
  5669 ;;		None
  5670 ;; Return value:  Size  Location     Type
  5671 ;;                  1    wreg      void 
  5672 ;; Registers used:
  5673 ;;		wreg, status,2, status,0
  5674 ;; Tracked objects:
  5675 ;;		On entry : 0/0
  5676 ;;		On exit  : 0/0
  5677 ;;		Unchanged: 0/0
  5678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5679 ;;      Params:         2       0       0       0       0       0       0       0       0
  5680 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5681 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5682 ;;      Totals:         2       0       0       0       0       0       0       0       0
  5683 ;;Total ram usage:        2 bytes
  5684 ;; Hardware stack levels used: 1
  5685 ;; This function calls:
  5686 ;;		Nothing
  5687 ;; This function is called by:
  5688 ;;		_main
  5689 ;; This function uses a non-reentrant model
  5690 ;;
  5691                           
  5692                           	psect	text39
  5693  001BDA                     __ptext39:
  5694                           	callstack 0
  5695  001BDA                     _encender_leds:
  5696                           	callstack 30
  5697  001BDA                     
  5698                           ;Leds.c: 14:     if (valor == 0) {
  5699  001BDA  500C               	movf	encender_leds@valor^0,w,c
  5700  001BDC  100D               	iorwf	(encender_leds@valor+1)^0,w,c
  5701  001BDE  A4D8               	btfss	status,2,c
  5702  001BE0  EFF4  F00D         	goto	u2301
  5703  001BE4  EFF6  F00D         	goto	u2300
  5704  001BE8                     u2301:
  5705  001BE8  EFFB  F00D         	goto	l2729
  5706  001BEC                     u2300:
  5707  001BEC                     
  5708                           ;Leds.c: 15:         LATB5 = 1;
  5709  001BEC  8A8A               	bsf	3978,5,c	;volatile
  5710                           
  5711                           ;Leds.c: 16:         LATB4 = 0;
  5712  001BEE  988A               	bcf	3978,4,c	;volatile
  5713                           
  5714                           ;Leds.c: 17:         LATB3 = 0;
  5715  001BF0  968A               	bcf	3978,3,c	;volatile
  5716                           
  5717                           ;Leds.c: 18:     } else if (valor == 1) {
  5718  001BF2  EF2C  F00E         	goto	l257
  5719  001BF6                     l2729:
  5720  001BF6  040C               	decf	encender_leds@valor^0,w,c
  5721  001BF8  100D               	iorwf	(encender_leds@valor+1)^0,w,c
  5722  001BFA  A4D8               	btfss	status,2,c
  5723  001BFC  EF02  F00E         	goto	u2311
  5724  001C00  EF04  F00E         	goto	u2310
  5725  001C04                     u2311:
  5726  001C04  EF09  F00E         	goto	l2733
  5727  001C08                     u2310:
  5728  001C08                     
  5729                           ;Leds.c: 19:         LATB5 = 0;
  5730  001C08  9A8A               	bcf	3978,5,c	;volatile
  5731                           
  5732                           ;Leds.c: 20:         LATB4 = 1;
  5733  001C0A  888A               	bsf	3978,4,c	;volatile
  5734                           
  5735                           ;Leds.c: 21:         LATB3 = 0;
  5736  001C0C  968A               	bcf	3978,3,c	;volatile
  5737                           
  5738                           ;Leds.c: 22:     } else if (valor >= 1 && valor < 4) {
  5739  001C0E  EF2C  F00E         	goto	l257
  5740  001C12                     l2733:
  5741  001C12  BE0D               	btfsc	(encender_leds@valor+1)^0,7,c
  5742  001C14  EF14  F00E         	goto	u2321
  5743  001C18  500D               	movf	(encender_leds@valor+1)^0,w,c
  5744  001C1A  E108               	bnz	u2320
  5745  001C1C  040C               	decf	encender_leds@valor^0,w,c
  5746  001C1E  A0D8               	btfss	status,0,c
  5747  001C20  EF14  F00E         	goto	u2321
  5748  001C24  EF16  F00E         	goto	u2320
  5749  001C28                     u2321:
  5750  001C28  EF29  F00E         	goto	l255
  5751  001C2C                     u2320:
  5752  001C2C  BE0D               	btfsc	(encender_leds@valor+1)^0,7,c
  5753  001C2E  EF24  F00E         	goto	u2330
  5754  001C32  500D               	movf	(encender_leds@valor+1)^0,w,c
  5755  001C34  E107               	bnz	u2331
  5756  001C36  0E04               	movlw	4
  5757  001C38  5C0C               	subwf	encender_leds@valor^0,w,c
  5758  001C3A  B0D8               	btfsc	status,0,c
  5759  001C3C  EF22  F00E         	goto	u2331
  5760  001C40  EF24  F00E         	goto	u2330
  5761  001C44                     u2331:
  5762  001C44  EF29  F00E         	goto	l255
  5763  001C48                     u2330:
  5764  001C48                     
  5765                           ;Leds.c: 23:         LATB5 = 0;
  5766  001C48  9A8A               	bcf	3978,5,c	;volatile
  5767                           
  5768                           ;Leds.c: 24:         LATB4 = 0;
  5769  001C4A  988A               	bcf	3978,4,c	;volatile
  5770                           
  5771                           ;Leds.c: 25:         LATB3 = 1;
  5772  001C4C  868A               	bsf	3978,3,c	;volatile
  5773                           
  5774                           ;Leds.c: 26:     } else {
  5775  001C4E  EF2C  F00E         	goto	l257
  5776  001C52                     l255:
  5777                           
  5778                           ;Leds.c: 27:         LATB5 = 1;
  5779  001C52  8A8A               	bsf	3978,5,c	;volatile
  5780                           
  5781                           ;Leds.c: 28:         LATB4 = 1;
  5782  001C54  888A               	bsf	3978,4,c	;volatile
  5783                           
  5784                           ;Leds.c: 29:         LATB3 = 1;
  5785  001C56  868A               	bsf	3978,3,c	;volatile
  5786  001C58                     l257:
  5787  001C58  0012               	return		;funcret
  5788  001C5A                     __end_of_encender_leds:
  5789                           	callstack 0
  5790                           
  5791                           	psect	rparam
  5792  0000                     
  5793                           	psect	idloc
  5794                           
  5795                           ;Config register IDLOC0 @ 0x200000
  5796                           ;	unspecified, using default values
  5797  200000                     	org	2097152
  5798  200000  FF                 	db	255
  5799                           
  5800                           ;Config register IDLOC1 @ 0x200001
  5801                           ;	unspecified, using default values
  5802  200001                     	org	2097153
  5803  200001  FF                 	db	255
  5804                           
  5805                           ;Config register IDLOC2 @ 0x200002
  5806                           ;	unspecified, using default values
  5807  200002                     	org	2097154
  5808  200002  FF                 	db	255
  5809                           
  5810                           ;Config register IDLOC3 @ 0x200003
  5811                           ;	unspecified, using default values
  5812  200003                     	org	2097155
  5813  200003  FF                 	db	255
  5814                           
  5815                           ;Config register IDLOC4 @ 0x200004
  5816                           ;	unspecified, using default values
  5817  200004                     	org	2097156
  5818  200004  FF                 	db	255
  5819                           
  5820                           ;Config register IDLOC5 @ 0x200005
  5821                           ;	unspecified, using default values
  5822  200005                     	org	2097157
  5823  200005  FF                 	db	255
  5824                           
  5825                           ;Config register IDLOC6 @ 0x200006
  5826                           ;	unspecified, using default values
  5827  200006                     	org	2097158
  5828  200006  FF                 	db	255
  5829                           
  5830                           ;Config register IDLOC7 @ 0x200007
  5831                           ;	unspecified, using default values
  5832  200007                     	org	2097159
  5833  200007  FF                 	db	255
  5834                           
  5835                           	psect	config
  5836                           
  5837                           ;Config register CONFIG1L @ 0x300000
  5838                           ;	PLL Prescaler Selection bits
  5839                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  5840                           ;	System Clock Postscaler Selection bits
  5841                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  5842                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  5843                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  5844  300000                     	org	3145728
  5845  300000  00                 	db	0
  5846                           
  5847                           ;Config register CONFIG1H @ 0x300001
  5848                           ;	Oscillator Selection bits
  5849                           ;	FOSC = INTOSCIO_EC, Internal oscillator, port function on RA6, EC used by USB (INTIO)
  5850                           ;	Fail-Safe Clock Monitor Enable bit
  5851                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5852                           ;	Internal/External Oscillator Switchover bit
  5853                           ;	IESO = ON, Oscillator Switchover mode enabled
  5854  300001                     	org	3145729
  5855  300001  88                 	db	136
  5856                           
  5857                           ;Config register CONFIG2L @ 0x300002
  5858                           ;	Power-up Timer Enable bit
  5859                           ;	PWRT = ON, PWRT enabled
  5860                           ;	Brown-out Reset Enable bits
  5861                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  5862                           ;	Brown-out Reset Voltage bits
  5863                           ;	BORV = 3, Minimum setting 2.05V
  5864                           ;	USB Voltage Regulator Enable bit
  5865                           ;	VREGEN = OFF, USB voltage regulator disabled
  5866  300002                     	org	3145730
  5867  300002  18                 	db	24
  5868                           
  5869                           ;Config register CONFIG2H @ 0x300003
  5870                           ;	Watchdog Timer Enable bit
  5871                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  5872                           ;	Watchdog Timer Postscale Select bits
  5873                           ;	WDTPS = 32768, 1:32768
  5874  300003                     	org	3145731
  5875  300003  1E                 	db	30
  5876                           
  5877                           ; Padding undefined space
  5878  300004                     	org	3145732
  5879  300004  FF                 	db	255
  5880                           
  5881                           ;Config register CONFIG3H @ 0x300005
  5882                           ;	CCP2 MUX bit
  5883                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  5884                           ;	PORTB A/D Enable bit
  5885                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5886                           ;	Low-Power Timer 1 Oscillator Enable bit
  5887                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5888                           ;	MCLR Pin Enable bit
  5889                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  5890  300005                     	org	3145733
  5891  300005  81                 	db	129
  5892                           
  5893                           ;Config register CONFIG4L @ 0x300006
  5894                           ;	Stack Full/Underflow Reset Enable bit
  5895                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5896                           ;	Single-Supply ICSP Enable bit
  5897                           ;	LVP = OFF, Single-Supply ICSP disabled
  5898                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  5899                           ;	ICPRT = OFF, ICPORT disabled
  5900                           ;	Extended Instruction Set Enable bit
  5901                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5902                           ;	Background Debugger Enable bit
  5903                           ;	DEBUG = 0x1, unprogrammed default
  5904  300006                     	org	3145734
  5905  300006  81                 	db	129
  5906                           
  5907                           ; Padding undefined space
  5908  300007                     	org	3145735
  5909  300007  FF                 	db	255
  5910                           
  5911                           ;Config register CONFIG5L @ 0x300008
  5912                           ;	Code Protection bit
  5913                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  5914                           ;	Code Protection bit
  5915                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  5916                           ;	Code Protection bit
  5917                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  5918                           ;	Code Protection bit
  5919                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  5920  300008                     	org	3145736
  5921  300008  0F                 	db	15
  5922                           
  5923                           ;Config register CONFIG5H @ 0x300009
  5924                           ;	Boot Block Code Protection bit
  5925                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  5926                           ;	Data EEPROM Code Protection bit
  5927                           ;	CPD = OFF, Data EEPROM is not code-protected
  5928  300009                     	org	3145737
  5929  300009  C0                 	db	192
  5930                           
  5931                           ;Config register CONFIG6L @ 0x30000A
  5932                           ;	Write Protection bit
  5933                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  5934                           ;	Write Protection bit
  5935                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  5936                           ;	Write Protection bit
  5937                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  5938                           ;	Write Protection bit
  5939                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  5940  30000A                     	org	3145738
  5941  30000A  0F                 	db	15
  5942                           
  5943                           ;Config register CONFIG6H @ 0x30000B
  5944                           ;	Configuration Register Write Protection bit
  5945                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  5946                           ;	Boot Block Write Protection bit
  5947                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  5948                           ;	Data EEPROM Write Protection bit
  5949                           ;	WRTD = OFF, Data EEPROM is not write-protected
  5950  30000B                     	org	3145739
  5951  30000B  E0                 	db	224
  5952                           
  5953                           ;Config register CONFIG7L @ 0x30000C
  5954                           ;	Table Read Protection bit
  5955                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5956                           ;	Table Read Protection bit
  5957                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5958                           ;	Table Read Protection bit
  5959                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5960                           ;	Table Read Protection bit
  5961                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  5962  30000C                     	org	3145740
  5963  30000C  0F                 	db	15
  5964                           
  5965                           ;Config register CONFIG7H @ 0x30000D
  5966                           ;	Boot Block Table Read Protection bit
  5967                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  5968  30000D                     	org	3145741
  5969  30000D  40                 	db	64
  5970                           tosu	equ	0xFFF
  5971                           tosh	equ	0xFFE
  5972                           tosl	equ	0xFFD
  5973                           stkptr	equ	0xFFC
  5974                           pclatu	equ	0xFFB
  5975                           pclath	equ	0xFFA
  5976                           pcl	equ	0xFF9
  5977                           tblptru	equ	0xFF8
  5978                           tblptrh	equ	0xFF7
  5979                           tblptrl	equ	0xFF6
  5980                           tablat	equ	0xFF5
  5981                           prodh	equ	0xFF4
  5982                           prodl	equ	0xFF3
  5983                           indf0	equ	0xFEF
  5984                           postinc0	equ	0xFEE
  5985                           postdec0	equ	0xFED
  5986                           preinc0	equ	0xFEC
  5987                           plusw0	equ	0xFEB
  5988                           fsr0h	equ	0xFEA
  5989                           fsr0l	equ	0xFE9
  5990                           wreg	equ	0xFE8
  5991                           indf1	equ	0xFE7
  5992                           postinc1	equ	0xFE6
  5993                           postdec1	equ	0xFE5
  5994                           preinc1	equ	0xFE4
  5995                           plusw1	equ	0xFE3
  5996                           fsr1h	equ	0xFE2
  5997                           fsr1l	equ	0xFE1
  5998                           bsr	equ	0xFE0
  5999                           indf2	equ	0xFDF
  6000                           postinc2	equ	0xFDE
  6001                           postdec2	equ	0xFDD
  6002                           preinc2	equ	0xFDC
  6003                           plusw2	equ	0xFDB
  6004                           fsr2h	equ	0xFDA
  6005                           fsr2l	equ	0xFD9
  6006                           status	equ	0xFD8

Data Sizes:
    Strings     20
    Constant    0
    Data        64
    BSS         98
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     68     150
    BANK1           256      0      80
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> imprimir@aux_luz(BANK0[16]), imprimir@aux_temp(BANK0[16]), imprimir@aux_dist(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_4(CODE[4]), STR_3(CODE[4]), STR_2(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> imprimir@aux_luz(BANK0[16]), imprimir@aux_temp(BANK0[16]), imprimir@aux_dist(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1164_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> imprimir@aux_luz(BANK0[16]), imprimir@aux_temp(BANK0[16]), imprimir@aux_dist(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> imprimir@aux_luz(BANK0[16]), imprimir@aux_temp(BANK0[16]), imprimir@aux_dist(BANK0[16]), 

    LCD_Custom_Char@msg	PTR unsigned char  size(2) Largest target is 8
		 -> iniciar_emoticones@todo_bien(COMRAM[8]), iniciar_emoticones@luz(COMRAM[8]), iniciar_emoticones@distancia(COMRAM[8]), iniciar_emoticones@temperatura(COMRAM[8]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> imprimir@aux_luz(BANK0[16]), imprimir@aux_temp(BANK0[16]), imprimir@aux_dist(BANK0[16]), STR_1(CODE[7]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 16
		 -> imprimir@aux_luz(BANK0[16]), imprimir@aux_temp(BANK0[16]), imprimir@aux_dist(BANK0[16]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_imprimir
    _validar->_mostrar_emoticon
    _mostrar_emoticon->_LCD_Char
    _mostrar_emoticon->_LCD_Command
    _sensor_temperatura->___fltol
    ___fltol->___flmul
    ___flmul->___xxtofl
    _sensor_luz->___lwdiv
    _adc_init10Bits->_adc_config
    ___lwdiv->___wmul
    _sensor_distancia->_obtener_distancia
    _iniciar_emoticones->_LCD_Custom_Char
    _LCD_Custom_Char->_LCD_Char
    _LCD_Custom_Char->_LCD_Command
    _inicializar_lcd->_LCD_Command
    _imprimir->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _encender_leds->_validar

Critical Paths under _main in BANK0

    _main->_imprimir
    _imprimir->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   14015
                                             62 BANK0      6     6      0
                      _encender_leds
                           _imprimir
                    _inicializar_lcd
                 _iniciar_emoticones
                        _iniciar_pic
                          _init_leds
                   _sensor_distancia
                         _sensor_luz
                 _sensor_temperatura
                            _validar
 ---------------------------------------------------------------------------------
 (1) _validar                                              8     2      6     518
                                              3 COMRAM     8     2      6
                   _mostrar_emoticon
 ---------------------------------------------------------------------------------
 (2) _mostrar_emoticon                                     1     1      0     132
                                              2 COMRAM     1     1      0
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _sensor_temperatura                                   2     0      2    2994
                                             49 COMRAM     2     0      2
                            ___flmul
                            ___fltol
                           ___xxtofl
                     _adc_init10Bits
                     _adc_read10Bits
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     381
                                             39 COMRAM    10     6      4
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flmul                                             25    17      8    1744
                                             14 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _sensor_luz                                           3     1      2    1264
                                             13 COMRAM     3     1      2
                            ___lwdiv
                             ___wmul
                     _adc_init10Bits
                     _adc_read10Bits
 ---------------------------------------------------------------------------------
 (2) _adc_read10Bits                                       6     4      2      47
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (2) _adc_init10Bits                                       2     0      2     348
                                              2 COMRAM     2     0      2
                         _adc_config
 ---------------------------------------------------------------------------------
 (3) _adc_config                                           2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     555
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              6 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _sensor_distancia                                     2     0      2      24
                                              4 COMRAM     2     0      2
                         _init_ports
                  _obtener_distancia
 ---------------------------------------------------------------------------------
 (2) _obtener_distancia                                    4     2      2      24
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _init_ports                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_leds                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniciar_pic                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _iniciar_emoticones                                  32    32      0     622
                                              6 COMRAM    32    32      0
                    _LCD_Custom_Char
 ---------------------------------------------------------------------------------
 (2) _LCD_Custom_Char                                      4     2      2     526
                                              2 COMRAM     4     2      2
                           _LCD_Char
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _inicializar_lcd                                      1     1      0      44
                                              2 COMRAM     1     1      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _imprimir                                            56    50      6    8247
                                             93 COMRAM     2     2      0
                                              8 BANK0     54    48      6
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             16    10      6    6760
                                             87 COMRAM     6     0      6
                                              0 BANK0      8     8      0
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (6) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (6) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3     952
                                              4 COMRAM     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     165
                                              2 COMRAM     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Char                                             2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            0     0      0      44
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          2     2      0      44
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _encender_leds                                        2     0      2     164
                                             11 COMRAM     2     0      2
                            _validar (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _encender_leds
     _validar (ARG)
       _mostrar_emoticon
         _LCD_Char
         _LCD_Command
   _imprimir
     _LCD_Clear
       _LCD_Command
     _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _dtoa
             ___aodiv
             ___aomod
             _abs
               ___aomod (ARG)
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
               _strlen
           _fputc
   _inicializar_lcd
     _LCD_Command
   _iniciar_emoticones
     _LCD_Custom_Char
       _LCD_Char
       _LCD_Command
   _iniciar_pic
   _init_leds
   _sensor_distancia
     _init_ports
     _obtener_distancia
   _sensor_luz
     ___lwdiv
       ___wmul (ARG)
     ___wmul
     _adc_init10Bits
       _adc_config
     _adc_read10Bits
   _sensor_temperatura
     ___flmul
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
       ___xxtofl (ARG)
     ___xxtofl
     _adc_init10Bits
     _adc_read10Bits
   _validar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      50       7       31.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     145      20        0.0%
DATA                 0      0     145       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Oct 04 15:56:31 2021

     __end_of_mostrar_emoticon 21E8                   ?_LCD_Command 0001                             l67 21FA  
                           l78 1AD8                             l87 1760            ___wmul@multiplicand 0003  
                  ?_LCD_String 0003                _LCD_Custom_Char 1F46                            l112 2042  
                          l113 2054                            l121 2190                            l122 21AA  
                          l211 1A56                            l116 220A                            l142 1EFA  
                          l214 2218                            l222 1F3C                            l151 1E08  
                          l223 1F44                            l119 2182                            l145 1EAA  
                          l217 1F10                            l226 1CD4                            l139 217E  
                          l164 222A                            l156 2114                            l173 1F8C  
                          l317 21D0                            l229 1BD8                            l255 1C52  
                          l431 1412                            l167 21E6                            l248 2222  
                          l257 1C58                            l444 1576                            l268 1834  
                          l614 167C               ?_inicializar_lcd 0001                            l815 1D48  
                          l808 1D40                            l931 08DA                            l940 0B48  
                          l941 0B36                            l935 0C3E                            l938 0AD0  
                          l948 0C00                            l972 0F7A                            l975 10D6  
                          l986 106E                            l995 1E5A                            l979 1012  
                          _abs 2096                            _pad 1900                            _luz 00CC  
                          wreg 000FE8                   ___flmul@aexp 0020                   ___flmul@bexp 0021  
                 ___flmul@sign 001B                   ___flmul@temp 0026                   ___flmul@prod 0022  
                  LCD_Char@dat 0002                   ___fltol@exp1 0031                           l1022 1946  
                         l1103 214A                           l2001 213E                           l1025 1988  
                         l1033 0CE0                           l2011 12BE                           l1027 19C4  
                         l1035 0CE8                           ?_abs 0013                           l1060 128A  
                         l2021 1300                           l2013 12C2                           l2005 128C  
                         l2101 1998                           l1053 0F22                           l2031 135A  
                         l2023 131E                           l2015 12D0                           l2007 1290  
                         l1071 20CC                           l2103 19AC                           l2111 0C40  
                         l2033 1388                           l2025 1326                           l2041 13C2  
                         l2017 12F0                           l2009 129E                           l2121 0CBA  
                         l2113 0C60                           l2201 1120                           l1074 20D4  
                         l1066 1DA2                           l2043 13D2                           l2035 13A8  
                         l2027 133A                           l2019 12F4                           l2051 1418  
                         l2107 2096                           l2131 0D16                           l2123 0CD4  
                         l2115 0C88                           l2211 11E8                           l2203 1144  
                         l1067 1DAA                           l2301 20E8                           l2045 13F2  
                         l2037 13AA                           l2029 1348                           l2061 1478  
                         l2053 1426                           l2109 20B0                           l2141 0DB6  
                         l2133 0D1E                           l2125 0CF0                           l2117 0CA8  
                         l2213 120C                           l2221 123A                           l2205 1168  
                         l1086 18FE                           l1094 1FD0                           l2303 20F0  
                         l2039 13BC                           l2071 14EE                           l2063 1496  
                         l2055 1446                           l2151 0E72                           l2143 0DBC  
                         l2135 0D28                           l2127 0D02                           l2119 0CB8  
                         l2223 1248                           l2215 121A                           l2207 11B0  
                         l2311 1E0A                           l2241 1EC2                           l2305 20FA  
                         l2081 1556                           l2073 150E                           l2065 149E  
                         l2057 144A                           l2049 1414                           l1097 222C  
                         l2161 0EC4                           l2153 0E8C                           l2137 0D2E  
                         l2145 0E20                           l2129 0D10                           l2217 122E  
                         l2313 1E1C                           l2401 08B4                           l2251 1EE8  
                         l2243 1EC4                           l2235 1EAE                           l2323 2224  
                         l2307 2102                           l2075 1520                           l2067 14B2  
                         l2059 1458                           l2091 1932                           l2163 0ED6  
                         l2147 0E3A                           l2155 0E9C                           l2139 0DB0  
                         l2227 1254                           l2315 1E24                           l2331 2180  
                         l2403 08C4                           l2253 1EEA                           l2245 1EC6  
                         l2237 1EBE                           l2181 1E74                           l2173 1E5E  
                         l2309 2108                           l2069 14C0                           l2077 1526  
                         l2093 193E                           l2085 1900                           l2165 0EE2  
                         l2157 0EAE                           l2149 0E58                           l2229 1278  
                         l2317 1E2C                           l2261 203A                           l2325 21FC  
                         l2333 2196                           l2421 0946                           l2413 090E  
                         l2405 08CA                           l2341 21E0                           l2247 1ED4  
                         l2239 1EC0                           l2191 1E9A                           l2183 1E76  
                         l2175 1E6E                           l2271 1DD8                           l2079 1536  
                         l2095 1952                           l2087 1910                           l2167 0EEA  
                         l2159 0EBE                           l2319 1E48                           l2351 2216  
                         l2343 220C                           l2263 2052                           l2255 2014  
                         l2327 2208                           l2335 21A2                           l2431 0990  
                         l2423 095E                           l2415 091A                           l2407 08EA  
                         l2511 15CC                           l2503 1578                           l2249 1EE6  
                         l2185 1E84                           l2177 1E70                           l2265 1DAC  
                         l2097 1966                           l2089 1924                           l2169 0EFA  
                         l2193 10D8                           l2273 1D4A                           l2281 1F48  
                         l2345 2210                           l2361 1F22                           l2353 1EFC  
                         l2257 2020                           l2329 2180                           l2441 09E6  
                         l2433 09A0                           l2425 096A                           l2417 0924  
                         l2409 08FA                           l2513 15CE                           l2505 158E  
                         l2601 107E                           l2187 1E96                           l2179 1E72  
                         l2267 1DB0                           l2099 196A                           l2195 10FC  
                         l2275 1D52                           l2291 1F68                           l2283 1F58  
                         l2347 2212                           l2363 1F26                           l2355 1F04  
                         l2259 2032                           l2451 0A8A                           l2443 0A02  
                         l2435 09AC                           l2427 0976                           l2419 093A  
                         l2515 15DE                           l2611 10C6                           l2603 1082  
                         l2339 21D4                           l2189 1E98                           l2269 1DD4  
                         l2197 110A                           l2277 1D60                           l2621 2150  
                         l2293 1F7A                           l2285 1F64                           l2349 2214  
                         l2365 1F2E                           l2357 1F06                           l2461 0AE0  
                         l2453 0A98                           l2445 0A0E                           l2437 09BC  
                         l2429 0984                           l2381 0842                           l2373 0816  
                         l2541 165C                           l2525 1608                           l2517 15E2  
                         l2509 15A2                           l2605 10A6                           l2701 17A8  
                         l2199 111C                           l2279 1D86                           l2631 2178  
                         l2623 2160                           l2295 1F7C                           l2615 21E8  
                         l2359 1F0E                           l2551 1CF0                           l2367 21AC  
                         l2463 0AEE                           l2455 0AB6                           l2447 0A2A  
                         l2439 09D6                           l2391 087E                           l2383 0852  
                         l2375 0822                           l2543 166C                           l2535 1630  
                         l2527 1612                           l2519 15F0                           l2607 10B6  
                         l2711 17EE                           l2703 17AC                           l2297 20D8  
                         l2625 2166                           l2641 1ABC                           l2617 21F8  
                         l2633 221A                           l2561 1D2A                           l2553 1CF8  
                         l2369 21C8                           l2473 0B58                           l2481 0BA0  
                         l2465 0AF2                           l2457 0AC0                           l2449 0A54  
                         l2393 0884                           l2385 0862                           l2377 0830  
                         l2537 163C                           l2529 161C                           l2609 10C4  
                         l2721 182C                           l2713 180A                           l2705 17C8  
                         l2731 1C08                           l2299 20D8                           l2627 216C  
                         l2619 214C                           l2643 1ACA                           l2635 1A58  
                         l2651 19EE                           l2563 1D32                           l2555 1D00  
                         l2547 1CD6                           l2491 0C14                           l2483 0BBA  
                         l2475 0B64                           l2467 0B00                           l2459 0ACE  
                         l2395 0892                           l2387 0868                           l2379 0832  
                         l2539 164C                           l2571 0F36                           l2715 1810  
                         l2707 17CE                           l2733 1C12                           l2725 1BDA  
                         l2741 1690                           l2629 2172                           l2637 1AA0  
                         l2661 1A48                           l2653 1A04                           l2645 19C6  
                         l2565 1D34                           l2557 1D0E                           l2549 1CDE  
                         l2493 0C22                           l2485 0BCE                           l2477 0B72  
                         l2469 0B2E                           l2397 0894                           l2389 0878  
                         l2581 0FB4                           l2573 0F44                           l2717 1814  
                         l2709 17D2                           l2735 1C2C                           l2727 1BEC  
                         l2751 16EC                           l2743 169C                           l2639 1AAE  
                         l2663 1A4E                           l2655 1A10                           l2647 19CA  
                         l2567 1D3A                           l2559 1D14                           l2495 0C24  
                         l2487 0BE8                           l2479 0B9C                           l2399 08A4  
                         l2591 1008                           l2583 0FBC                           l2575 0F8A  
                         l2671 1C68                           l2719 1826                           l2737 1C48  
                         l2729 1BF6                           l2761 1744                           l2753 1708  
                         l2745 16B8                           l2657 1A26                           l2649 19D6  
                         l2681 1B5C                           l2489 0C04                           l2497 0C2A  
                         l2593 1044                           l2585 0FC8                           l2577 0FA0  
                         l2569 0F26                           l2673 1C74                           l2763 175C  
                         l2755 170E                           l2747 16C4                           l2739 167E  
                         l2659 1A32                           l2683 1B68                           l2499 0C2E  
                         l2595 1050                           l2587 0FFA                           l2675 1CCC  
                         l2667 1C5A                           l2771 1AE6                           l1981 1882  
                         l1973 1836                           l2757 1720                           l2749 16E0  
                         l2685 1B74                           l2597 105E                           l2589 0FFC  
                         l2669 1C5C                           l2693 1762                           l2781 1AF6  
                         l2773 1AEA                           l2765 1ADA                           ?_pad 0011  
                         l1983 18B8                           l1975 1848                           l1991 1FAC  
                         l2759 1732                           l2687 1BA0                           l2679 1B5A  
                         l2599 107C                           l2695 176A                           l2783 1B02  
                         l2775 1AEA                           l2767 1ADE                           l1977 185A  
                         l1993 1FB0                           l2689 1BD0                           l2697 1786  
                         l2785 1B0E                           l2777 1AEA                           l2769 1AE2  
                         l1979 1864                           l1987 1F8E                           l1995 2116  
                         l2699 17A2                           l2787 1B36                           l2779 1AEA  
                         l1989 1F9A                           l1997 2122                           l1999 2126  
                         STR_1 0801                           STR_2 0808                           STR_3 080D  
                         STR_4 0811                           _CREN 007D5C                ??_encender_leds 000E  
                         u2000 164C                           u2001 1648                           u2010 165C  
                         u2011 1658                           u1220 1848                           u2020 1CF0  
                         u2100 105E                           u1301 12FA                           u1221 1844  
                         u2021 1CEC                           u2101 105A                           u1310 131E  
                         u1230 185A                           u2030 1D0E                           u2110 106E  
                         u1311 131A                           u1231 1856                           u2031 1D0A  
                         u2111 106A                           u1320 1348                           u1400 1536  
                         u1240 1882                           u2200 1A04                           u2040 1D2A  
                         u2120 107C                           u1321 1344                           u1401 1532  
                         u1241 187E                           u2201 1A00                           u2041 1D26  
                         u2121 1078                           u1330 1388                           u1250 18B8  
                         u1410 1910                           u2210 1A26                           u2130 10B6  
                         u2050 0F36                           u1331 1384                           u1251 18B4  
                         u1411 190C                           u2211 1A22                           u2131 10B2  
                         u2051 0F32                           u2300 1BEC                           u1340 13D2  
                         u1260 1FD0                           u1420 1932                           u1500 0CD4  
                         u2220 1A48                           u2140 10C4                           u2060 0F44  
                         u2301 1BE8                           u1341 13CE                           u1261 1FCC  
                         u1421 192E                           u1501 0CD0                           u2221 1A44  
                         u2141 10C0                           u2061 0F40                           u2310 1C08  
                         u1350 1426                           u1270 213E                           u1430 1988  
                         u1510 0D02                           u2070 0FA0                           u2311 1C04  
                         u1351 1422                           u1271 213A                           u1431 1984  
                         u1511 0CFE                           u2151 1A62                           u2071 0F9C  
                         u2320 1C2C                           u1280 129E                           u1360 1458  
                         u1440 1998                           u1600 0ED6                           u1520 0D10  
                         u2080 0FF6                           u2240 1786                           _LATD 000F8C  
                         u2321 1C28                           u1281 129A                           u1361 1454  
                         u1441 1994                           u1601 0ED2                           u1521 0D0C  
                         u2161 1A74                           u2081 0FF2                           u2241 1782  
                         u2330 1C48                           u1290 12D0                           u1370 1496  
                         u1450 20B0                           u1530 0E3A                           u1610 10FC  
                         u2090 1040                           u2250 17A2                           u2331 1C44  
                         u1291 12CC                           u1371 1492                           u1451 20AC  
                         u1531 0E36                           u1611 10F8                           u2171 1A86  
                         u2235 1B8C                           u2091 103C                           u2251 179E  
                         u1380 14C0                           u1540 0E58                           u1460 0C70  
                         u1620 1144                           u1700 1F58                           u2260 17C8  
                         u1381 14BC                           u1541 0E54                           u1461 0C6A  
                         u1621 1140                           u2341 1696                           u1701 1F54  
                         u2181 1A98                           u2261 17C4                           u1390 14EE  
                         u1550 0E72                           u1470 0C72                           u1630 1168  
                         u1710 1F8C                           u2190 19EE                           u2270 17EE  
                         u1391 14EA                           u1551 0E6E                           u1631 1164  
                         u2351 16BE                           u2407 2156                           u1711 1F88  
                         u2191 19EA                           u2271 17EA                           u1720 20E8  
                         u1560 0E8C                           u1480 0C88                           u1640 120C  
                         u1800 08A4                           u2280 180A                           u1721 20E4  
                         u1561 0E88                           u1481 0C84                           u1641 1208  
                         u2417 174E                           u2361 16E6                           u1801 08A0  
                         u2281 1806                           u1570 0E9C                           u1490 0CB8  
                         u1650 2032                           u1730 2190                           u1810 08B4  
                         u2290 1826                           u2427 1E7C                           u1571 0E98  
                         u1491 0CB4                           u1651 202E                           u1731 218C  
                         u1811 08B0                           u2291 1822                           u1660 1DD0  
                         u1580 0EAE                           u1740 1F1E                           u1900 0B58  
                         u1820 08EA                           u2437 1EA2                           u1581 0EAA  
                         u1741 1F1A                           u1901 0B54                           u1821 08E6  
                         u1670 1DF8                           u1590 0EBE                           u1750 1F3C  
                         u1910 0B72                           u1830 08FA                           u2447 1ECC  
                         u1591 0EBA                           u1751 1F38                           u1911 0B6E  
                         u1831 08F6                           u1680 1E08                           u1920 0BBA  
                         u1840 0A74                           u1760 0830                           u2457 1EF2  
                         u1681 1E04                           u1921 0BB6                           u1761 082C  
                         u1690 1DA2                           u1930 0BE8                           u1850 0ACE  
                         u1770 0842                           u1667 1DC6                           u1691 1D9E  
                         u2387 1F08                           u1931 0BE4                           u1851 0ACA  
                         u1771 083E                           u1940 0C22                           u1860 0AEE  
                         u1780 0852                           u1677 1DEE                           u2397 1F28  
                         u1941 0C1E                           u1861 0AEA                           u1845 0A6A  
                         u1781 084E                           u1870 0B00                           u1790 0892  
                         u1950 158E                           u1871 0AFC                           u1791 088E  
                         u1951 158A                           u1880 0B2E                           u1960 15C2  
                         u1881 0B2A                           u1890 0B44                           u1970 15F0  
                         u1891 0B40                           u1971 15EC                           u1980 1604  
                         u1981 1600                           u1965 15B8                           u1990 162C  
                         u1991 1628                           _RCIF 007CF5                           _RBPU 007F8F  
                         _TXIF 007CF4                           abs@a 0013                           _dbuf 0130  
                         _main 1ADA                           _dtoa 0C40             __size_of_LCD_Clear 0008  
                         _prec 00E8                           _nout 00E4                           pad@i 0018  
                         pad@p 0015                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           prodh 000FF4                           prodl 000FF3  
                         start 0000                   ?_iniciar_pic 0001                  _LCD_String_xy 20D6  
                 ___param_bank 000000                          ??_abs 0015                          ??_pad 0017  
             __end_of_LCD_Char 1EAC                  imprimir@F3583 0120                  imprimir@F3585 0110  
                imprimir@F3587 0100             _iniciar_emoticones 1A58                  ___fltol@sign1 0030  
              __end_of___aodiv 1414                          ?_main 0001                          ?_dtoa 001C  
              __end_of___aomod 1578                __end_of___flmul 0C40                __end_of___fltol 167E  
                        _LATB3 007C53                          _LATD0 007C60                          _LATB4 007C54  
                        _LATD1 007C61                          _LATB5 007C55                __end_of___lwdiv 1D4A  
                        _RCREG 000FAE                          _RCSTA 000FAB                   vfpfcnvrt@fmt 0042  
                        _SPBRG 000FAF                          _TRISD 000F95    __size_of_sensor_temperatura 007C  
                        _TXREG 000FAD                          _TXSTA 000FAC            ?_iniciar_emoticones 0001  
                        _flags 00EA                          _fputc 1836                          _fputs 1F8E  
                        pad@fp 0011                          _width 00E6                          _putch 222C  
                        dtoa@d 001E                          dtoa@i 003E                          dtoa@n 0036  
                        dtoa@p 0030                          dtoa@s 0034                          dtoa@w 0032  
              __end_of_validar 1836                          tablat 000FF5                          plusw1 000FE3  
                        plusw2 000FDB                          status 000FD8            __size_of_LCD_String 005E  
              __end_of_sprintf 1E5C                 ?_LCD_String_xy 0005              ?_sensor_distancia 0005  
         ??_iniciar_emoticones 0007        __end_of_LCD_Custom_Char 1F8E                __initialization 1FD2  
          adc_init10Bits@canal 0003             ??_sensor_distancia 0007                   __end_of_main 1B5A  
                 __end_of_dtoa 0F24                         ??_main 0060                         ??_dtoa 0026  
            __end_of_LCD_Clear 222C                  __activetblptr 000002        __size_of_adc_init10Bits 0010  
      __size_of_adc_read10Bits 002C                         ?_fputc 0001                         ?_fputs 000A  
                       _ADRESH 000FC4                         _ADRESL 000FC3                         ?_putch 0001  
             LCD_String_xy@msg 0006               LCD_String_xy@pos 0005               LCD_String_xy@row 0008  
                       _OSCCON 000FD3                         _TRISB3 007C9B                         _TRISB4 007C9C  
                       _TRISB5 007C9D                         _TRISB6 007C9E                         _TRISC6 007CA6  
                       _TRISC7 007CA7               __end_of___xxtofl 10D8                   vfprintf@cfmt 0056  
                    ??___aodiv 0011                      ??___aomod 0011                         ___wmul 21AC  
                    ??___flmul 0017                      ??___fltol 002C                      ??___lwdiv 000B  
                       clear_0 1FF8                         clear_1 2004                         isa$std 000001  
             __end_of_imprimir 1762                         pad@buf 0013           __size_of_LCD_Command 0050  
                       dtoa@fp 001C                         _strlen 2116                         fputc@c 0001  
                       fputs@c 000E               LCD_Custom_Char@i 0006                         fputs@i 000F  
                       fputs@s 000A                   __mediumconst 0000                         tblptrh 000FF7  
                    ??_validar 000A                         tblptrl 000FF6                         tblptru 000FF8  
                       putch@c 0001               __end_of_vfprintf 1DAC                      ??_sprintf 005E  
                 ___xxtofl@arg 000B                   ___xxtofl@exp 000A                   ___xxtofl@val 0001  
                    ?_LCD_Char 0001                     __accesstop 0060        __end_of__initialization 200A  
              ??_LCD_String_xy 0008                  ___rparam_used 000001               validar@distancia 0006  
                   ___fltol@f1 0028               ?_LCD_Custom_Char 0003                 __pcstackCOMRAM 0001  
                 __pidataBANK0 2056                     _adc_config 2014              ?_mostrar_emoticon 0001  
         __size_of_iniciar_pic 0014                    imprimir@luz 006C                  __end_of_fputc 1900  
                __end_of_fputs 1FD2                  __end_of_putch 222E             ??_mostrar_emoticon 0003  
                 ??_LCD_String 0005  iniciar_emoticones@temperatura 0007                        ??_fputc 0005  
                      ??_fputs 000E                        ??_putch 0001                     __pbssBANK0 00E4  
                   __pbssBANK1 0100                     ??_LCD_Char 0001             __end_of_LCD_String 1E0A  
           __size_of_init_leds 000A            obtener_distancia@cm 0003                        ?___wmul 0001  
                      ?_strlen 0001                 _adc_init10Bits 21FC                      ?___xxtofl 0001  
               _adc_read10Bits 2180                 _val_intensidad 00EE             __size_of_vfpfcnvrt 01B4  
     __size_of_inicializar_lcd 0034          __end_of_encender_leds 1C5A                      ?_imprimir 0068  
           encender_leds@valor 000C                  LCD_String@msg 0003              mostrar_emoticon@i 0003  
                      __Hparam 0000                        __Lparam 0000                    ?_adc_config 0001  
                      ___aodiv 128C                        ___aomod 1414                        ___flmul 0816  
                      ___fltol 1578                __size_of___wmul 0026                        ___lwdiv 1CD6  
                    ?_vfprintf 0050                   __psmallconst 0800                imprimir@aux_luz 008E  
                      __pcinit 1FD2         __end_of_adc_init10Bits 220C                    validar@temp 0004  
                   _init_ports 220C                        __ramtop 0800     __end_of_sensor_temperatura 1CD6  
                      __ptext0 1ADA                        __ptext1 1762                        __ptext2 21D2  
                      __ptext3 1C5A                        __ptext4 0F24                        __ptext5 1578  
                      __ptext6 0816                        __ptext7 1B5A                        __ptext8 2180  
                      __ptext9 21FC         __end_of_adc_read10Bits 21AC                __size_of_strlen 0036  
    __size_of_sensor_distancia 0092                   __size_of_abs 0040                   __size_of_pad 00C6  
            __end_of_init_leds 2224                     ??___xxtofl 0005                        _validar 1762  
                    _LCD_Clear 2224                        _sprintf 1E0A           end_of_initialization 200A  
                      fputc@fp 0003                 LCD_Command@cmd 0002                  __Lmediumconst 0000  
                      fputs@fp 000C                     ??_imprimir 005E    __size_of_iniciar_emoticones 0082  
            __end_of_vfpfcnvrt 128C                      _RCSTAbits 000FAB                        postdec1 000FE5  
                      postdec2 000FDD                        postinc0 000FEE                        postinc1 000FE6  
                      postinc2 000FDE                     ??_vfprintf 0056                adc_config@canal 0001  
                   _sensor_luz 1B5A                        strlen@a 0003                        strlen@s 0001  
              ?_adc_init10Bits 0003                      _PORTCbits 000F82                ?_adc_read10Bits 0001  
        iniciar_emoticones@luz 0017                  ___xxtofl@sign 0009                      _TRISAbits 000F92  
                    _TRISCbits 000F94                     ?_LCD_Clear 0001            __size_of_adc_config 0042  
                  ___flmul@grs 001C                     main@s_dist 009E                     main@s_temp 00A0  
            ??_inicializar_lcd 0003              __size_of_LCD_Char 0050                  ??_LCD_Command 0001  
                  vfpfcnvrt@ap 0044                    vfpfcnvrt@fp 0040                    vfpfcnvrt@ll 0048  
               __end_of___wmul 21D2                    ?_init_ports 0001                   imprimir@dist 0068  
                 imprimir@temp 006A                 __end_of_strlen 214C            start_initialization 1FD2  
      adc_read10Bits@value_adc 0005                    __end_of_abs 20D6                    __end_of_pad 19C6  
    __size_of_mostrar_emoticon 0016          __end_of_LCD_String_xy 2116                  ??_iniciar_pic 0001  
                  vfprintf@fmt 0052                       ??___wmul 0005                    __pdataBANK0 00A4  
                  ?_sensor_luz 000E                       ??_strlen 0003       __size_of_LCD_Custom_Char 0048  
             _sensor_distancia 19C6            __end_of_LCD_Command 1EFC                      ___flmul@a 0013  
                    ___flmul@b 000F                validar@contador 000A                  __pcstackBANK0 0060  
             ___aodiv@dividend 0001                    ??_LCD_Clear 0003              __size_of___xxtofl 01B4  
                _val_distancia 00F4            __size_of_init_ports 000E               ___lwdiv@dividend 0007  
                    _dtoa$1237 002E              __size_of_imprimir 00E4                   ??_adc_config 0003  
                     ?___aodiv 0001                       ?___aomod 0001               ___aodiv@quotient 0013  
                     ?___flmul 000F                       ?___fltol 0028                       ?___lwdiv 0007  
          __end_of_iniciar_pic 21FC                      _distancia 00D4              __size_of_vfprintf 0062  
                  __smallconst 0800                       ?_validar 0004               ___lwdiv@quotient 000B  
        LCD_String_xy@location 0009                      _init_leds 221A                       ?_sprintf 0058  
                   validar@luz 0008                 __size_of_fputc 00CA                 __size_of_fputs 0044  
               __size_of_putch 0002             _sensor_temperatura 1C5A             __end_of_adc_config 2056  
          __size_of_sensor_luz 0080                       _LCD_Char 1E5C                 ___wmul@product 0005  
                     _LATCbits 000F8B    iniciar_emoticones@distancia 000F            ?_sensor_temperatura 0032  
             ??_adc_init10Bits 0005                      _value_adc 00F0               ??_adc_read10Bits 0003  
                  _LCD_Command 1EAC                      _todo_bien 00C4                      _vfpfcnvrt 10D8  
                   _ADCON0bits 000FC2                     _ADCON1bits 000FC1                     _ADCON2bits 000FC0  
            ___wmul@multiplier 0001              _obtener_distancia 1EFC         __size_of_encender_leds 0080  
         ??_sensor_temperatura 0034                      main@s_luz 00A2             ?_obtener_distancia 0001  
             _mostrar_emoticon 21D2                _inicializar_lcd 214C              ??_LCD_Custom_Char 0005  
                   ?_init_leds 0001                      copy_data0 1FE6            ??_obtener_distancia 0003  
  iniciar_emoticones@todo_bien 001F     __end_of_iniciar_emoticones 1ADA                       __Hrparam 0000  
                  _iniciar_pic 21E8                     vfprintf@ap 0054                       __Lrparam 0000  
                   vfprintf@fp 0050               __size_of___aodiv 0188               __size_of___aomod 0164  
             __size_of___flmul 042A               __size_of___fltol 0106                     ?_vfpfcnvrt 0040  
             __size_of___lwdiv 0074      __end_of_obtener_distancia 1F46                   ??_init_ports 0001  
              ___aodiv@divisor 0009                _val_luminosidad 00EC                ___aodiv@counter 0011  
                   sprintf@fmt 005A               imprimir@aux_dist 006E                       ___xxtofl 0F24  
             imprimir@aux_temp 007E                ___lwdiv@divisor 0009                ___lwdiv@counter 000D  
                     __ptext10 2014                       __ptext11 21AC                       __ptext20 214C  
                     __ptext12 1CD6                       __ptext21 167E                       __ptext13 19C6  
                     __ptext30 222C                       __ptext22 1E0A                       __ptext14 1EFC  
                     __ptext31 2096                       __ptext23 1D4A                       __ptext15 220C  
                     __ptext32 1414                       __ptext24 10D8                       __ptext16 221A  
                     __ptext33 128C                       __ptext25 0C40                       __ptext17 21E8  
                     __ptext34 20D6                       __ptext26 1900                       __ptext18 1A58  
                     __ptext35 1DAC                       __ptext27 2116                       __ptext19 1F46  
                     __ptext36 1E5C                       __ptext28 1F8E                       __ptext37 2224  
                     __ptext29 1836                       __ptext38 1EAC                       __ptext39 1BDA  
             __size_of_validar 00D4               __size_of_sprintf 0052                  __size_of_main 0080  
                __size_of_dtoa 02E4                  _encender_leds 1BDA                       _imprimir 167E  
           __end_of_init_ports 221A       __end_of_sensor_distancia 1A58                       _val_temp 00F2  
                     isa$xinst 000000                       _vfprintf 1D4A                   ??_sensor_luz 0010  
                   _LCD_String 1DAC        __end_of_inicializar_lcd 2180               ___aomod@dividend 0001  
                  ??_init_leds 0001             LCD_Custom_Char@loc 0005             LCD_Custom_Char@msg 0003  
                    sprintf@ap 0060                 ?_encender_leds 000C             __end_of_sensor_luz 1BDA  
      iniciar_emoticones@F3571 00BC        iniciar_emoticones@F3573 00B4        iniciar_emoticones@F3575 00AC  
      iniciar_emoticones@F3577 00A4                     _OSCCONbits 000FD3                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0046                ___aomod@counter 0011     __size_of_obtener_distancia 004A  
                  _temperatura 00DC                       sprintf@f 0062                       sprintf@s 0058  
       __size_of_LCD_String_xy 0040                   ___aodiv@sign 0012                   ___aomod@sign 0012  
